var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["7.3.8","activ","adacad","affect","angular","app","artifact","automat","befor","both","branch","build","call","chang","check","cli","code","compon","contain","core","current","deploy","design","dev","develop","direct","directive|pipe|service|class|modul","directori","dist","document","download","draft","e2","electron","end","etc","execut","experiment","file","firebas","flag","freeform","further","gener","go","guid","help","host","http://localhost:4200","https://adacad","https://unstabledesign.github.io","https://unstabledesign.github.io/adacad","index","inform","instal","integr","jacquard","last","localhost:4200/mix","localhost:4200/weav","loom","make","master","match","maxmsp","mixer","model","modul","more","name","navig","new","ng","note","npm","offer","on","out","prod","product","project","protractor.befor","proweav","push","readm","releas","reload","repo","requir","result","run","scaffold","serv","server","servic","setup","simul","sourc","specif","stitch","store","structur","support","sure","test","three","tool","two","us","user","version","via","view","visit","weaver","weaver.firebaseapp.com"],"overview.html":["1","15","18","2","30","5","browser","class","compon","direct","inject","interfac","match","modul","out","overview","pipe","reset","result","rout","support","svg","zoom"],"modules.html":["appmodul","approutingmodul","brows","browser","coremodul","match","mixermodul","modul","result","support","svg","weavermodul"],"modules/AppModule.html":["angular/common/http","angular/cor","angular/http","angular/platform","angularfire2","angularfire2/auth","angularfire2/databas","angularfire2/storag","angularfireauthmodul","angularfiredatabasemodul","angularfiremodul","angularfiremodule.initializeapp(firebaseconfig","angularfirestoragemodul","app","app.compon","appcompon","appmodul","approutingmodul","bootstrap","browser","browser/anim","browseranimationsmodul","browsermodul","class","const","core/core.modul","coremodul","declar","environments/secret","export","file","firebaseconfig","hammer_gesture_config","hammergestureconfig","httpclientmodul","httpmodul","import","info","match","mixer/mixer.modul","mixermodul","modul","ngmodul","out","provid","reset","result","routing.modul","secret","sourc","src/app/app.module.t","support","svg","useclass","weaver/weaver.modul","weavermodul","zoom"],"modules/AppRoutingModule.html":["angular/cor","angular/rout","approutingmodul","browser","children","class","compon","const","export","file","import","info","match","mixer","mixer/mixer.compon","mixercompon","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forroot(rout","routing.module.t","sourc","src/app/app","support","svg","weaver","weaver/weaver.compon","weavercompon","zoom"],"modules/CoreModule.html":["aboutmod","angular/cdk/drag","angular/cdk/scrol","angular/common","angular/cor","angular/form","angular/material/autocomplet","angular/material/button","angular/material/card","angular/material/checkbox","angular/material/chip","angular/material/dialog","angular/material/divid","angular/material/expans","angular/material/form","angular/material/icon","angular/material/input","angular/material/list","angular/material/menu","angular/material/radio","angular/material/select","angular/material/sidenav","angular/material/slid","angular/material/snack","angular/material/tab","angular/material/toolbar","angular/material/tooltip","bar","browser","class","color","colorpickermodul","commonmodul","coremodul","declar","dragdropmodul","drop","entrycompon","export","field","file","filterpip","form.compon","form/upload","formsmodul","import","info","initmod","matautocompletemodul","matbuttonmodul","matbuttontogglemodul","matcardmodul","match","matcheckboxmodul","matchipsmodul","matdialogmodul","matdividermodul","materialscompon","matexpansionmodul","matformfieldmodul","maticonmodul","matinputmodul","matlistmodul","matmenumodul","matradiomodul","matselectmodul","matsidenavmodul","matslidermodul","matslidetogglemodul","matsnackbarmodul","mattabsmodul","mattoolbarmodul","mattooltipmodul","modal/about/about.mod","modal/init/init.mod","modal/pattern/pattern.mod","modul","ngmodul","ngx","notescompon","out","patternmod","patternservic","picker","pipe/filter.pip","provid","provider/pattern.servic","reactiveformsmodul","reset","result","scrollingmodul","sourc","src/app/core/core.module.t","support","svg","systemscompon","toggl","tool/materials/materials.compon","tool/notes/notes.compon","tool/systems/systems.compon","topbar/topbar.compon","topbarcompon","uploadformcompon","uploads/upload","uploads/upload.servic","uploadservic","zoom"],"modules/MixerModule.html":["angular/cor","browser","class","connectioncompon","core/core.modul","coremodul","declar","entrycompon","export","file","import","info","match","mixer.compon","mixercompon","mixerdesigncompon","mixermodul","mixerpatternscompon","mixerviewcompon","modul","ngmodul","operationcompon","out","palette/connection/connection.compon","palette/operation/operation.compon","palette/palette.compon","palette/selection/selection.compon","palette/snackbar/snackbar.compon","palette/subdraft/subdraft.compon","palettecompon","reset","result","selectioncompon","snackbarcompon","sourc","src/app/mixer/mixer.module.t","subdraftcompon","support","svg","tool/mixerdesign/mixerdesign.compon","tool/mixerpatterns/mixerpatterns.compon","tool/mixerview/mixerview.compon","zoom"],"modules/WeaverModule.html":["angular/cdk/scrol","angular/common","angular/cor","angular/form","angular/material/autocomplet","angular/material/button","angular/material/card","angular/material/checkbox","angular/material/chip","angular/material/dialog","angular/material/divid","angular/material/expans","angular/material/form","angular/material/icon","angular/material/input","angular/material/list","angular/material/menu","angular/material/radio","angular/material/select","angular/material/sidenav","angular/material/slid","angular/material/tab","angular/material/toolbar","angular/material/tooltip","browser","class","color","colorpickermodul","commonmodul","connectionmod","core/core.modul","coremodul","declar","directives/weave.direct","entrycompon","export","field","file","formsmodul","import","info","loomcompon","maskscompon","matautocompletemodul","matbuttonmodul","matbuttontogglemodul","matcardmodul","match","matcheckboxmodul","matchipsmodul","matdialogmodul","matdividermodul","matexpansionmodul","matformfieldmodul","maticonmodul","matinputmodul","matlistmodul","matmenumodul","matradiomodul","matselectmodul","matsidenavmodul","matslidermodul","matslidetogglemodul","mattabsmodul","mattoolbarmodul","mattooltipmodul","modal/connection/connection.mod","modul","ngmodul","ngx","out","picker","reactiveformsmodul","reset","result","schematiccompon","scrollingmodul","sourc","src/app/weaver/weaver.module.t","support","svg","toggl","tool/loom/loom.compon","tool/masks/masks.compon","tool/schematic/schematic.compon","tool/weaverdesign/weaverdesign.compon","tool/weaverpatterns/weaverpatterns.compon","tool/weaverview/weaverview.compon","weavedirect","weaver.compon","weavercompon","weaverdesigncompon","weavermodul","weaverpatternscompon","weaverviewcompon","zoom"],"components/AboutModal.html":["about.modal.html","about.modal.scss","aboutmod","angular/cor","angular/material/dialog","app","class","close","compon","constructor","constructor(dialogref","constructor(priv","data","dialogref","export","file","implement","import","info","inject","inject(mat_dialog_data","mat_dialog_data","match","matdialogref","metadata","method","ngoninit","oninit","privat","result","return","selector","sourc","src/app/core/modal/about/about.modal.t","styleurl","templateurl","this.dialogref.clos","void"],"components/AppComponent.html":["angular/cor","app","app.component.html","app.component.scss","appcompon","class","compon","default","export","file","import","info","match","metadata","properti","result","root","selector","sourc","src/app/app.component.t","string","styleurl","templateurl","titl","valu"],"components/ConnectionComponent.html":["angular/cor","app","class","compon","connect","connection.component.html","connection.component.scss","connectioncompon","constructor","export","file","getto","getto():ani","implement","import","info","match","metadata","method","ngoninit","oninit","oper","properti","result","return","selector","setfrom","setfrom(from","setto","setto(to","setto(to:ani","sourc","src/app/mixer/palette/connection/connection.component.t","styleurl","subdraft","templateurl","this.from","this.to","void"],"components/ConnectionModal.html":["angular/cor","angular/material/dialog","app","class","close","compon","connect","connection.modal.html","connection.modal.scss","connectionmod","constructor(priv","data","dialogref","end","export","file","implement","import","info","inject","inject(mat_dialog_data","mat_dialog_data","match","matdialogref","metadata","new","ngoninit","number","oninit","point","privat","properti","result","save","selector","shuttl","shuttleid","sourc","src/app/weaver/modal/connection/connection.modal.t","start","styleurl","templateurl","this.connection.end","this.connection.start","this.data.shuttl","this.dialogref.clos","this.dialogref.close(this.connect","this.shuttl","x","y"],"components/InitModal.html":["0","ada","adacad","angular/cor","angular/material/dialog","app","begin","bitmap","bmp","boolean","cell","class","color","compon","console.log(data","constructor","constructor(dialogref","constructor(priv","core/model/cel","core/model/loom","core/model/shuttl","d3","data","data.density_unit","data.loomtyp","default","density_unit","dialogref","draft","e","e.data","e.height","e.typ","e.width","export","fals","file","form","getbool","getbool(v","getcolort","getcolortable(","getcoltoshuttlemap","getcoltoshuttlemapping(","getint","getint(v","getrowtoshuttlemap","getrowtoshuttlemapping(","getstr","getstring(v","getsubstringaft","getsubstringafter(v","getthread","getthreading(","gettieup","gettieups(","gettreadl","gettreadling(","handlefil","handlefile(","i=0","imag","img","implement","import","info","init","init.modal.html","init.modal.scss","initmod","inject","inject(mat_dialog_data","input","interfac","load","lodash","loom","loomtyp","loomtype:str","mat_dialog_data","match","matdialogref","metadata","method","new","ngoninit","null","obj.data","oninit","onnoclick","opt","privat","processdraftdata","processdraftdata(obj","processimagedata","processimagedata(obj","processwifdata","processwifdata(obj","properti","rest","result","return","reversedmap","reversedmapping.push(coltoshuttlemapping[i","rowtoshuttlemap","save","save(f","select","selected:str","selector","shuttl","sourc","src/app/core/modal/init/init.modal.t","startopt","string","styleurl","templateurl","this.density_unit","this.draft.warp","this.draft.weft","this.loomtyp","this.processdraftdata(","this.processimagedata(","this.processwifdata(","this.valid","true","valid","valid:boolean","valu","var","viewvalu","void","wif"],"components/LabelModal.html":["angular/cor","angular/material/dialog","app","categori","class","close","compon","constructor","constructor(dialogref","constructor(priv","dialogref","export","file","implement","import","info","label","label.modal.html","label.modal.scss","labelmod","mat_dialog_data","match","matdialogref","metadata","method","ngoninit","null","num","oninit","properti","result","return","row","save","selector","sourc","src/app/weaver/modal/label/label.modal.t","styleurl","templateurl","this.dialogref.close(nul","this.dialogref.close(this.label","this.label","type","void"],"components/LoomComponent.html":["1","10","2","angular/cor","angular/form","app","boolean","chang","class","compon","console.log(\"loom","console.log(\"unit","constructor","default","density_unit","e.value.loomtyp","e.value.unit","epi","epichang","epichange(f","event","eventemitt","export","f.value.epi","f.value.fram","f.value.treadl","f.value.warp","f.value.weft","f.value.width","fals","file","frame","if(!f.value.epi","if(!f.value.fram","if(!f.value.treadl","if(!f.value.warp","if(!f.value.weft","if(!f.value.width","if(this.warp_lock","implement","import","info","input","loom","loom.component.html","loom.component.scss","loomchang","loomchange(","loomchange(e:ani","loomcompon","loomtyp","match","math.ceil((10","math.ceil(f.value.fram","math.ceil(f.value.treadl","math.ceil(f.value.width","metadata","method","new","new_epi","new_warp","ngform","ngoninit","onepinumchang","onframechang","oninit","onloomtypechang","ontreadlechang","onunitchang","onwarpnumchang","onweftnumchang","output","properti","result","return","selector","sourc","src/app/weaver/tool/loom/loom.component.t","string","styleurl","templateurl","this.epi","this.fram","this.onepinumchange.emit({epi","this.onframechange.emit({valu","this.onloomtypechange.emit(e.valu","this.ontreadlechange.emit({valu","this.onunitchange.emit(e.valu","this.onwarpnumchange.emit({warp","this.onweftnumchange.emit({weft","this.treadl","this.unit","this.warp","this.weft","this.width","treadl","type","unit","unitchang","unitchange(","unitchange(e:ani","updateminfram","updateminframes(f","updatemintreadl","updatemintreadles(f","valid","valu","var","void","warp","warp_lock","warpchang","warpchange(f","weft","weftchang","weftchange(f","width","widthchang","widthchange(f"],"components/MasksComponent.html":["angular/cor","app","class","compon","constructor","event","eventemitt","export","file","id","implement","import","info","input","mask","maskev","maskevent(","masks.component.html","masks.component.scss","maskscompon","match","metadata","method","new","ngoninit","obj","obj.id","oninit","onmask","output","result","return","selector","sourc","src/app/weaver/tool/masks/masks.component.t","styleurl","templateurl","this.onmask.emit(obj","type","var","void"],"components/MaterialModal.html":["angular/cor","angular/form","angular/material/dialog","app","class","close","compon","constructor","constructor(dialogref","core/model/shuttl","data","data.material_typ","data.shuttl","dialogref","export","file","formbuild","formcontrol","formgroup","import","info","inject","inject(mat_dialog_data","mat_dialog_data","match","matdialogref","materi","material.modal.html","material.modal.scss","materialmod","metadata","method","modal","ngoninit","oninit","privat","properti","public","result","return","save","selector","shuttl","sourc","src/app/core/modal/material/material.modal.t","styleurl","templateurl","this.dialogref.close(nul","this.dialogref.close(this.shuttl","this.shuttl","this.typ","type","valid","void"],"components/MaterialsComponent.html":["650px","angular/cor","angular/material/dialog","app","class","colorchang","colorchange(","compon","console.log(result","const","constructor","constructor(dialog","constructor(priv","core/model/shuttl","creat","data","dialog","dialogref","dialogref.afterclosed().subscribe(result","event","eventemitt","export","fals","file","implement","import","info","input","match","matdialog","matdialogconfig","materi","material_typ","material_types:this.material_typ","materialmod","materials.component.html","materials.component.scss","materialscompon","metadata","method","modal/material/material.mod","modal/shuttles/shuttles.mod","new","ngoninit","number","oncolorchang","oncreateshuttl","oninit","onthicknesschang","opendialog","opendialog(shuttl","output","result","return","selector","shuttl","shuttlesmod","sourc","src/app/core/tool/materials/materials.component.t","styleurl","templateurl","thick","thickness:numb","thicknesschang","thicknesschange(id","thicknesschange(id:numb","this.dialog.open(materialmod","this.oncolorchange.emit","this.oncreateshuttle.emit({shuttl","this.onthicknesschange.emit","this.shuttles[id].setthickness(thick","this.shuttles[result.id","true","type","var","void","width"],"components/MixerComponent.html":["0","1","10cm","2","ada","anglar","angular","angular/cdk/overlay","angular/cor","angular/material/dialog","app","area","base","bitmap","bmp","boolean","brush","call","canva","chang","changedetectionstrategi","check","child","circuit","class","clear","clearset","cm","collaps","collapsed:boolean","commun","compon","conduct","console.log(","console.log(\"next","console.log(\"prev","console.log(\"reinit","console.log(\"zoom","console.log(d","console.log(event.valu","const","constructor","constructor(design_mod","constructor(priv","contain","control","copi","copyset","copyupd","core/model/datatyp","core/model/pattern","core/model/timelin","core/provider/pattern.servic","creat","createpattern","createpattern(","current","d","d.set","default","default_pattern","default_patterns:ani","deisgn","delet","density_unit","densityunit","densityunits,materialtyp","descript","design","design_mod","design_tool","designmodechang","designmodechanged(nam","designmodesservic","dialog","dim","dims:ani","disabl","div","div.style.transform","document.getelementbyid('scrol","down","draft","draftel","draftelement:ani","draw","drawdown","e","e.bitmap","e.pattern","e.typ","element.isset","element.isup","elementref","enableprodmod","end","event","event.valu","exampl","export","extend","fals","file","for(var","frame","fulli","function","hide","hostlisten","hostlistener('window:keydown.","hostlistener('window:keydown.c","hostlistener('window:keydown.d","hostlistener('window:keydown.m","hostlistener('window:keydown.p","hostlistener('window:keydown.shift.o","hostlistener('window:keydown.x","id","if(d","if(this.render.isyarnbasedview","implement","import","inch","info","initi","inkchang","inkchanged(nam","invert","jacquard","jpg","key","keychangetodrawmod","keychangetodrawmode(","keychangetomov","keychangetomove(","keychangetoselect","keychangetoselect(","keyeventcopy(","keyeventerase(","keyeventinvert(","keyeventpaste(","keyeventpoint(","keyeventselect(","keyeventzoomout(","keypress","loom","loom:tru","loomtyp","mask","match","matdialog","matdialogconfig","materi","material_typ","materialtyp","mechan","metadata","method","mixer","mixer.component.html","mixer.component.scss","mixer/provider/designmodes.servic","mixercompon","mixerdesigncompon","modal","mode","modul","name","need","new","ngafterviewinit","ngondestroy","ngoninit","non","noteschang","noteschanged(","noteschanged(e:ani","null","o","object","ondestroy","oninit","onsav","onsave(","onwindowscrol","onwindowscroll(data","origin","out","palett","palette/palette.compon","palettecompon","param","paramet","parent","pattern","pattern(res.body[i","pattern({pattern","patternservic","per","point","popup","press","privat","problem","properti","ps","public","redo","reinit(result","remov","removepattern","removepattern(","render","renderchang","renderchange(ev","res.bodi","resist","result","return","rxj","s","scale","scroll","scrolldispatch","scrollingsubscript","select","selector","servic","set","shaft","shift","shift+o","shift+o.set","signal","sourc","src/app/mixer/mixer.component.t","sset","state","static","stitch","string","styleurl","subdraft","subject","subscrib","subscribe((data","support","templateurl","this.bitmap.map(el","this.collaps","this.default_pattern","this.default_patterns.pattern","this.default_patterns.patterns.filter(pattern","this.default_patterns.push(new","this.design_mod","this.design_modes.select('draw","this.design_modes.select('mov","this.design_modes.select('select","this.designmodechanged('draw","this.designmodechanged('mov","this.designmodechanged('select","this.draft.computeyarnpath","this.draft.loom.typ","this.draft.not","this.draft.pattern","this.draft.reload(d","this.draft.reload(result","this.oncopi","this.onpast","this.onwindowscroll(data","this.palette.designmodechang","this.palette.handlescroll(data","this.palette.inkchang","this.palette.onnewdraftload","this.palette.redraw","this.palette.rescal","this.palette.rescale(scal","this.palette.saveada(e.nam","this.palette.savebmp(e.nam","this.palette.saveprintabledraft(e.nam","this.palette.savewif(e.nam","this.palette.unsetselect","this.pattern","this.ps.getpatterns().subscribe((r","this.render.setcurrentview(valu","this.render.view_fram","this.render.zoomout","this.scrol","this.scrollingsubscript","this.timeline.addhistorystate(this.draft","this.timeline.restorenexthistoryst","this.timeline.restoreprevioushistoryst","this.unsubscribe$.complet","this.unsubscribe$.next","timelin","toggl","togglecollaps","tool","tool/mixerdesign/mixerdesign.compon","true","type","undefin","undo","undo/redo","unsubscrib","up","updat","updatepattern","updatepatterns(","us","valu","variabl","version","view","view_mod","viewchild","viewchild('bitmapimag","viewchild(mixerdesigncompon","viewchild(palettecompon","viewmod","viewvalu","visual","void","warp_materi","warp_system","weav","weavecompon","weaver","weft_materials:tru","weft_system","wif","x","xset","yarn","zoom"],"components/MixerDesignComponent.html":["0","_","angular/cor","angular/material/dialog","app","button_color","class","compon","console.log(\"chang","constructor","constructor(design_mod","constructor(priv","default","design_mod","designmodechang","designmodechange(","designmodesservic","drawwithmateri","drawwithmaterial(","e.target.nam","event","eventemitt","export","ff4081","file","implement","import","info","ink","inkchang","inkchanged(","inkchanged(e:ani","inkservic","input","lodash","match","matdialog","metadata","method","mixer/provider/designmodes.servic","mixer/provider/ink.servic","mixerdesign","mixerdesign.component.html","mixerdesign.component.scss","mixerdesigncompon","new","ngoninit","number","ondesignmodechang","oninit","oninkchang","output","privat","properti","result","return","select","selector","sourc","src/app/mixer/tool/mixerdesign/mixerdesign.component.t","string","styleurl","templateurl","this.design_modes.select(e.target.nam","this.inks.select(e.target.nam","this.ondesignmodechange.emit(e.target.nam","this.oninkchange.emit(e.target.nam","type","valu","view_mod","void"],"components/MixerPatternsComponent.html":["_","_.clonedeep(this.pattern","angular/cor","angular/material/dialog","app","class","compon","console.log(","console.log(\"open","console.log(pattern","const","constructor","constructor(dialog","constructor(priv","core/modal/pattern/pattern.mod","core/model/pattern","core/provider/pattern.servic","creat","data","dialog","dialogref","dialogref.afterclosed().subscribe(result","el.id","event","eventemitt","export","fals","file","id","if(this.select","implement","import","info","input","lodash","match","matdialog","matdialogconfig","metadata","method","mixerpattern","mixerpatterns.component.html","mixerpatterns.component.scss","mixerpatternscompon","ndx","new","ngoninit","number","obj","obj.pattern","obj:ani","oncreatepattern","onfil","oninit","onpatternchang","onremovepattern","openpatterndialog","openpatterndialog(pattern","output","pattern","pattern({pattern","pattern.setpattern(this.select","patternmod","patternservic","print","print(","removepattern","removepattern(pattern","result","return","select","selector","sourc","src/app/mixer/tool/mixerpatterns/mixerpatterns.component.t","styleurl","templateurl","this.dialog.open(patternmod","this.oncreatepattern.emit({pattern","this.onfill.emit(p","this.onpatternchange.emit(obj","this.onremovepattern.emit({pattern","this.patterns.findindex(el","this.patterns[ndx].togglefavorit","this.patterns[p].favorit","this.patterns[result.id","this.select","togglefavorit","togglefavorite(id","true","type","undefin","updatefavorit","updatefavorite(p","var","void"],"components/MixerViewComponent.html":["angular/cor","app","class","compon","console.log(\"cal","console.log(\"valu","constructor","e.sourc","e.valu","event","eventemitt","export","file","id","if(typ","implement","import","info","input","match","metadata","method","mixerview","mixerview.component.html","mixerview.component.scss","mixerviewcompon","new","ngoninit","oninit","onzoomchang","output","result","return","selector","sourc","src/app/mixer/tool/mixerview/mixerview.component.t","string","styleurl","templateurl","this.onhidewarpsystem.emit({systemid","this.onhideweftsystem.emit({systemid","this.onshowwarpsystem.emit({systemid","this.onshowweftsystem.emit({systemid","this.onviewchange.emit(e.valu","this.onviewfront.emit(","this.onzoomchange.emit(","type","valu","value:ani","viewchange(e:ani","viewfront(e:ani","visibl","visiblebutton(id","void","weft","zoom","zoomchang","zoomchange(","zoomchange(e:ani"],"components/NotesComponent.html":["angular/cor","app","class","compon","console.log(\"not","constructor","event","eventemitt","export","file","implement","import","info","input","match","metadata","method","new","ngoninit","note","notes.component.html","notes.component.scss","notescompon","notesvaluechang","onchang","oninit","output","result","return","selector","sourc","src/app/core/tool/notes/notes.component.t","styleurl","templateurl","this.not","this.onchange.emit(this.not","type","void"],"components/OperationComponent.html":["allow","angular/cor","app","array","class","compon","connection/connection.compon","connectioncompon","constructor","export","file","implement","import","inbound","info","input","match","metadata","ngoninit","oninit","oper","operation.component.html","operation.component.scss","operationcompon","outbound","result","selector","sourc","src/app/core/ops/oper","src/app/mixer/palette/operation/operation.component.t","styleurl","templateurl","type"],"components/PaletteComponent.html":["0","000000","1","10","2","20","5000","64","_snackbar","a:boolean","abov","absolut","acc","acc.bounds.height","acc.bounds.width","acc.gettopleft().i","acc.gettopleft().x","accord","accordingli","action","add","addign","against","allow","andmerg","angular/cor","angular/material/snack","anoth","app","appli","area","arr","arr.resolvetovalue(p","array","array):boolean","array):draft","assign","associ","automat","avail","b","b_array.reduce((acc:boolean","b_array:array","back","bar","barray","base","be","begin","below","betetween","better","between","bm","bm.bounds.height","bm.gettopleft().i","boolean","boolean):boolean","both","bottom","bottomright","boudari","bound","boundari","bounds.bottom","bounds.height","bounds.height/this.scal","bounds.left","bounds.right","bounds.top","bounds.topleft.i","bounds.topleft.x","bounds.width","bounds.width/this.scal","bounds:bound","break","brine","bring","c","c.isset","c.setheddle(fals","c.setheddle(newv","c.setheddle(tru","c2","call","canva","canvas_zndx","canvas_zndx:numb","case","cccccc","cell","chang","changedesignmod","changedesignmode(nam","check","class","clear","clonedeep","clonedeep(this.preview.draft.pattern","closesnackbar","code","collect","column","combin","compon","componentfactoryresolv","comput","computecellcolor","computecellcolor(ink","computecellvalu","computecellvalue(ink","computefilt","computefilter(ink","computeheddlevalu","computeheddlevalue(p","computeheddlevalue(p:point","console.log(\"compon","console.log(\"delet","console.log(\"had","console.log(\"set","console.log(\"warn","console.log(c","console.log(this.ink","const","construct","constructor","constructor(design_mod","constructor(priv","consum","contain","containi","contin","convert","coord","core/model/cel","core/model/datatyp","core/model/draft","core/model/pattern","corner","corners[0].i","corners[0].j","corners[1].i","corners[1].j","creaet","creat","createandsetpreview","createandsetpreview(d","createsubdraft","createsubdraft(d","current","cx","d","d3","data","default","defin","delet","describ","design","design_mod","designmodechang","designmodesservic","destori","disabl","div.offsetparent.scrollleft","div.offsetparent.scrolltop","div:htmlel","document.getelementbyid(\"scratch","document.getelementbyid('scrol","dooverlap","dooverlap(l1","dooverlap(l1:point","down","draft","draft({id","draft({weft","draft):subdraftcompon","draw","drawcel","drawcell(ndx","drawingif","drawn","drawselect","drawselection(ndx","drawstart","drop","dynam","dynamicallycr","eas","el","el.draft.pattern","el.haspoint(p","element","element.ondeletecalled.unsubscrib","element.onsubdraftdrop.unsubscrib","element.onsubdraftmove.unsubscrib","element.onsubdraftstart.unsubscrib","emit","empti","end","endsget","event","event.clientx","event.shiftkey","eventemitt","exist","export","extend","factori","fafafa","fals","ff4081","ffffff","file","fill","filter","find","first","for(let","for(var","form","format","forward","freehand","fromev","fronott","front","function","gener","get","getbottommost","getbottommost(main","getbottommost(main:subdraftcompon","getcombinedbound","getcombinedbounds(mov","getcombineddraft","getcombineddraft(bound","getintersectingsubdraft","getintersectingsubdrafts(primari","getintersectingsubdraftsforpoint","getintersectingsubdraftsforpoint(p","getintersectionbound","getintersectionbounds(primari","getleftmost","getleftmost(main","getleftmost(main:subdraftcompon","getrightmost","getrightmost(main","getscratchpadbound","getscratchpadproduct","getscratchpadproduct(ndx","getselectionbound","getselectionbounds(c1","getsubdraft","getsubdraft(id","getsubdraft(id:numb","getsubdraftsintersectingselect","getsubdraftsintersectingselection(select","gettopmost","gettopmost(main","given","hack","had_merg","handl","handlescrol","handlescroll(data","happen","haspreview","haspreview():boolean","height","height:0","hold","hostlisten","hostlistener('mouseleav","hostlistener('mousemov","hostlistener('mouseup","html","htmlcanvasel","i,j","ibound","id","id.tostr","if(!had_merg","if(!mode.enable_ink","if(!this.design_modes.isselected('fre","if((isect.gettopleft().i","if((isect.gettopleft().x","if(a","if(b","if(b_array.length","if(c1.i","if(ctrl","if(el.issameboundsas(ibound","if(ink","if(isect.gettopleft().i","if(isect.gettopleft().x","if(isect.length","if(j","if(math.abs(this.shape_bounds.width","if(mov","if(obj","if(p1.i","if(p1.j","if(r","if(shift","if(this.design_modes.isselected(\"draw","if(this.design_modes.isselected(\"mov","if(this.design_modes.isselected(\"select","if(this.design_modes.isselected(\"shap","if(this.design_modes.isselected('draw","if(this.design_modes.isselected('fre","if(this.design_modes.isselected('lin","if(this.design_modes.isselected('mov","if(this.design_modes.isselected('select","if(this.haspreview","if(this.inks.getselect","if(this.issamendx(this.last","if(this.last","if(this.preview","if(this.preview_ref","if(this.scratch_pad","if(this.scratch_pad[0","if(this.selection.active)this.processselect","if(this.shape_vtxs.length","if(this.shape_vtxs[i].x","if(val","if(warp","if(weft","iif","implement","import","index","info","initail","initi","ink","inkservic","input","insid","instanc","interlac","intersect","interselct","isbuff","isect","isect).gettopleft().i","isect).gettopleft().x","isect.bounds.height","isect.bounds.width","isect.filter(el","isect.foreach(el","isect.push(sr","isect:array","isect[0","isect[0].resolvetovalue(p","isects.reduce((acc","isects:array):subdraftcompon","issamendx","issamendx(p1","item","j","keyboard","l1","l1.i","l1.x","l2","l2.i","l2.x","l2:point","last","layer","layersservic","leav","left","line","link","list","listen","locat","lodash","made","main","main.resolvetovalue(p","mana","manag","match","math.floor((p.i","math.floor((p.x","math.floor(bounds.height","math.floor(bounds.width","math.max(this.shape_bounds.width","matsnackbar","max","merg","mergesubdraft","mergesubdrafts(primari","metadata","method","mixer","mixer/provider/designmodes.servic","mixer/provider/ink.servic","mixer/provider/layers.servic","mode","model/shap","more","mous","mouse.i","mouse.x","mouse:point","mousedown","mouseleav","mousestart","move","movesubscript","moving.drawdraft","name","ndx","ndx.i","ndx.i*this.scal","ndx.j","ndx:ani","ndx:interlac","ndxcheck","nearest","neccessari","need","neq","never","new","new_draft","newval","newval:boolean","ngafterviewinit","ngondestroy","ngoninit","null","number","obj","obj.id","obj.id.tostr","object","observ","on","onal","ondeletesubdraftcal","ondeletesubdraftcalled(obj","ondesignmodechang","ondrag","ondrag(ev","onend","onend(ev","oninit","onmov","onmove(ev","onstart","onstart(ev","onto","open","oper","origin","other","output","outsid","over","over.getheddl","overlap","p","p.i","p.x","p2","p2.i","p2.j","p2:ani","pad","palett","palette.component.html","palette.component.scss","palettecompon","param","paramet","parent","past","pattern","pattern.length","place","placehold","point","poitn","posit","press","presstrigg","prev","preview","preview_ref","previou","primari","primary.bounds.height","primary.bounds.width","primary.draft.id","primary.draft.id.tostr","primary.draft.nam","primary.drawdraft","primary.gettopleft().i","primary.gettopleft().x","primary.scal","primary.setcomponentposition(bounds.topleft","primary.setnewdraft(temp","primary_bottomright","primary_topleft","privat","processdrawingend","processselect","processshapeend","properti","public","push","question","r1","r1.i","r1.x","r1:point","r2","r2.i","r2.x","r2:point","re","read","receiv","rectanbl","rectangl","rectangular","redraw","refer","reflect","remov","removepreview","removesubdraft","removesubdraft(subdraft","removesubscript","render","repres","requir","rescal","rescale(scal","rescale(scale:numb","resiz","resolv","resolvecoordstondx","resolvecoordstondx(p","result","return","right","rm","rm.bounds.width","rm.gettopleft().x","row","rxj","same","sc","sc.disabledrag","sc.drawdraft","sc.setcomponentbounds(bound","sc.setnewdraft(new_draft","sc:subdraftcompon","scale","scratch_pad","scratchpad","screen","scribbl","scroll","sd","sd.disabledrag","sd.draft.pattern","sd.enabledrag","sd.rescale(scal","sd.setaspreview","sd.setcomponentposition(to_right","sd.setcomponentsize(this.preview.bounds.width","sd_draft","second","see","seem","segment","select","selected_ink:str","selection.bounds.height","selection.bounds.topleft","selection.bounds.topleft.i","selection.bounds.topleft.x","selection.bounds.width","selection/selection.compon","selectioncompon","selectionstart","selector","self","sent","serci","servic","set","setcel","setcell(ndx","shape","shape.getdraft","shape_bound","shape_bounds:bound","shape_vtx","shape_vtxs:array","shapedrag","shapedragged(mous","shapestart","shapestarted(mous","shift","show","si","side","sit","size","snackbar","snackbar/snackbar.compon","snackbarcompon","snap","sourc","specif","split","sr","sr.bounds.height","sr.bounds.width","sr.canvas.id.tostr","sr.draft.id.tostr","sr.gettopleft","sr.gettopleft().i","sr.gettopleft().x","sr_bottomright","src/app/mixer/palette/palette.component.t","start","startedcheck","static","store","string","styleurl","subdraft","subdraft.canvas.id.tostr","subdraft.hostview","subdraft.inst","subdraft.instance.disabledrag","subdraft.instance.draft","subdraft.instance.ink","subdraft.instance.ondeletecalled.subscribe(this.ondeletesubdraftcalled.bind(thi","subdraft.instance.onsubdraftdrop.subscribe(this.subdraftdropped.bind(thi","subdraft.instance.onsubdraftmove.subscribe(this.subdraftmoved.bind(thi","subdraft.instance.onsubdraftstart.subscribe(this.subdraftstarted.bind(thi","subdraft.instance.pattern","subdraft.instance.scal","subdraft.instance.setaspreview","subdraft.instance.viewport","subdraft/subdraft.compon","subdraft_ref","subdraftcompon","subdraftdrop","subdraftdropped(obj","subdraftmov","subdraftmoved(obj","subdraftstart","subdraftstarted(obj","subdraftsus","subreft","subscrib","subscript","support","switch(ink","switch(selected_ink","take","temp","templateurl","temporari","that'","this._snackbar.dismiss","this._snackbar.openfromcomponent(snackbarcompon","this.canva","this.canvas.getcontext(\"2d","this.canvas.height","this.canvas.width","this.canvas_zndx","this.changedesignmode('mov","this.closesnackbar","this.computecellcolor(selected_ink","this.computecellvalue(ink","this.computecellvalue(this.inks.getselect","this.computefilter(ink","this.computefilter(main.ink","this.createandsetpreview(temp","this.createsubdraft(new","this.cx","this.cx.clearrect(0","this.cx.fillrect","this.cx.fillrect(ndx.j*this.scal","this.cx.fillstyl","this.cx.moveto(this.shape_vtxs[0].x","this.cx.strokerect(bounds.top","this.cx.strokestyl","this.design_modes.getmode(nam","this.design_modes.isselected('shap","this.design_modes.select(nam","this.designmodechang","this.dooverlap","this.dooverlap(primary.gettopleft","this.dooverlap(primary_topleft","this.drawcell(ndx","this.drawselection(ndx","this.drawstart","this.getbottommost(mov","this.getcombinedbounds(mov","this.getcombinedbounds(primari","this.getcombineddraft(bound","this.getintersectingsubdrafts(mov","this.getintersectingsubdrafts(primari","this.getintersectingsubdrafts(sc","this.getintersectingsubdraftsforpoint(p","this.getintersectionbounds(mov","this.getintersectionbounds(sc","this.getleftmost(mov","this.getrightmost(mov","this.getscratchpadbound","this.getselectionbounds(this.selection.start","this.getsubdraft(obj.id","this.gettopmost(mov","this.inks.getselect","this.inks.select('neq","this.last","this.layers.createlay","this.mergesubdrafts(mov","this.movesubscript","this.movesubscription.unsubscrib","this.ondesignmodechange.emit(nam","this.ondrag(","this.pattern","this.preview","this.preview.bounds.height","this.preview.bounds.width","this.preview.draft.warp","this.preview.draft.weft","this.preview.drawdraft","this.preview.gettopleft","this.preview.scal","this.preview.setcomponentposition(bounds.topleft","this.preview.setnewdraft(temp","this.preview_ref","this.processdrawingend","this.processshapeend","this.removepreview","this.removesubdraft(el","this.removesubdraft(sd","this.removesubscript","this.resolvecoordstondx(mous","this.resolver.resolvecomponentfactory(subdraftcompon","this.scal","this.scratch_pad","this.scratch_pad.length","this.scratch_pad[0].length","this.scratch_pad[ndx.i][ndx.j","this.select","this.selection.act","this.selection.scal","this.selection.setpositionandsize(bound","this.selection.start","this.selection.start.i*this.scal","this.selection.start.j*this.scal","this.selectionstart","this.setcell(ndx","this.shape_bound","this.shape_bounds.height","this.shape_bounds.topleft","this.shape_bounds.topleft.i","this.shape_bounds.topleft.x","this.shape_bounds.width","this.shape_bounds.width,this.shape_bounds.height","this.shape_vtx","this.shape_vtxs.length","this.shape_vtxs.push(mous","this.shape_vtxs[0].i","this.shape_vtxs[i].i","this.shape_vtxs[i].x","this.shapedragged(mous","this.shapestarted(mous","this.subdraft_ref","this.subdraft_refs.filter(sr","this.subdraft_refs.find((sr","this.subdraft_refs.find(sr","this.subdraft_refs.findindex((sr","this.subdraft_refs.foreach(el","this.subdraft_refs.foreach(sd","this.subdraft_refs.foreach(sr","this.subdraft_refs.push(subdraft.inst","this.subdraft_refs.splice(ndx","this.vc.clear","this.vc.createcomponent(factori","this.vc.indexof(this.preview_ref","this.vc.remove(ndx","this.viewport","this.viewport.topleft","this.viewport.topleft.x","thresholdfreedmandiaconi","to_check.foreach(sr","to_check:array","to_right","to_right.x","took","tool","top","topleft","topleft:{x","tot","touch","transit","trigger","true","true/fals","two","type","undefin","under","union","uniqu","unset","unsubscrib","up","us","user","val","val:boolean","valu","var","vc","view","viewchild","viewchild('vc","viewcontainerref","viewport","viewport:bound","viewref","void","vtx","warp","way","weft","whether","width","within","without","wrong","x","x:0","y","y:0","y:this.viewport.topleft.y+event.clienti","z","zoom"],"components/PatternModal.html":["0","angular/cor","angular/material/dialog","app","cell","class","close","compon","constructor","constructor(dialogref","constructor(priv","core/model/cel","core/model/pattern","dialogref","export","file","h","implement","import","info","inject","inject(mat_dialog_data","mat_dialog_data","match","matdialogref","metadata","method","modal","ngoninit","oninit","onnoclick","pattern","pattern.modal.html","pattern.modal.scss","patternmod","properti","public","result","return","save","selector","sourc","src/app/core/modal/pattern/pattern.modal.t","styleurl","templateurl","this.dialogref.close(this.pattern","this.onnoclick","this.pattern.pattern.length","updatepatterns","updatepatternsize(","updatepatternwidth","updatepatternwidth(","var","void"],"components/PatternsComponent.html":["_","_.clonedeep(this.pattern","angular/cor","angular/material/dialog","app","class","compon","console.log(","console.log(\"open","console.log(pattern","const","constructor","constructor(dialog","constructor(priv","core/model/pattern","core/provider/pattern.servic","creat","data","dialog","dialogref","dialogref.afterclosed().subscribe(result","event","eventemitt","export","fals","file","fill","fill(id","if(this.select","implement","import","info","input","lodash","match","matdialog","matdialogconfig","metadata","method","modal/pattern/pattern.mod","new","ngoninit","obj","obj.pattern","obj:ani","oncreatepattern","onfil","oninit","onpatternchang","onremovepattern","openpatterndialog","openpatterndialog(pattern","output","pattern","pattern({pattern","pattern.setpattern(this.select","patternmod","patterns.component.html","patterns.component.scss","patternscompon","patternservic","print","print(","removepattern","removepattern(pattern","result","return","select","selector","sourc","src/app/core/tool/patterns/patterns.component.t","styleurl","templateurl","this.dialog.open(patternmod","this.oncreatepattern.emit({pattern","this.onfill.emit(id","this.onfill.emit(p","this.onpatternchange.emit(obj","this.onremovepattern.emit({pattern","this.patterns[p].favorit","this.patterns[result.id","this.select","true","type","undefin","updatefavorit","updatefavorite(p","var","void"],"components/SchematicComponent.html":["angular/cor","angular/material/dialog","app","class","compon","connectionmod","constructor","constructor(dialog","constructor(priv","dialog","event","eventemitt","export","file","implement","import","info","input","match","matdialog","matdialogconfig","metadata","method","modal/connection/connection.mod","new","ngoninit","onconnectioncr","oninit","onlabelcr","openconnectiondialog","openlabeldialog","output","result","return","schemat","schematic.component.html","schematic.component.scss","schematiccompon","selector","sourc","src/app/weaver/tool/schematic/schematic.component.t","styleurl","templateurl","this.onconnectioncreate.emit","this.onlabelcreate.emit","type","void"],"components/ShuttlesModal.html":["angular/cor","angular/form","angular/material/dialog","app","class","close","compon","console.log(\"in","constructor","constructor(dialogref","core/model/shuttl","data","data.shuttl","data.type).charat(0).touppercas","data.type).slice(1","data.warp","dialogref","e.data","export","file","formbuild","formcontrol","formgroup","g","g.j","i=0","img","import","info","inject","inject(mat_dialog_data","mat_dialog_data","match","matdialogref","metadata","method","modal","new","number","oninit","privat","processdata(","properti","public","result","return","save","selector","shuttl","shuttles.modal.html","shuttles.modal.scss","shuttlesmod","sourc","src/app/core/modal/shuttles/shuttles.modal.t","string","styleurl","templateurl","this.shuttl","this.typ","this.warp","type","valid","var","void","warp"],"components/SnackbarComponent.html":["angular/cor","angular/material/snack","app","bar","class","compon","constructor","constructor(@inject(mat_snack_bar_data","constructor(data","core/model/draft","data","draft","export","file","implement","import","info","inject","mat_snack_bar_data","match","metadata","ngoninit","oninit","properti","public","result","selection/selection.compon","selectioncompon","selector","snackbar","snackbar.component.html","snackbar.component.scss","snackbarcompon","sourc","src/app/mixer/palette/snackbar/snackbar.component.t","styleurl","subdraft","subdraft/subdraft.compon","subdraftcompon","subdraftcomponent|selectioncompon","templateurl","this.subdraft"],"components/SubdraftComponent.html":["0","1","10","50","absolut","ad","adjust","alt","angular/cor","app","array","arrow","base","befor","bigger","boolean","bound","boundari","bounds.height","bounds.topleft","bounds.width","bug","calcul","call","canva","cell","check","children","class","clear","clearev","clearevent(b","clone","closest","column","compon","connection/connection.compon","connectioncompon","console.log(\"set","console.log(this.zndx","const","constructor","constructor(ink","constructor(priv","coord","coordin","copi","core/model/datatyp","core/model/draft","counter","counter:numb","counter_limit","cx","d3","data","default","design","design_act","designact","designactionchang","designactionchange(","direct","disable_drag","disabledrag","document.getelementbyid(this.draft.id.tostr","draft","dragend","dragend($ev","dragmov","dragmove($ev","dragstart","dragstart($ev","draw","drawdraft","due","dyanic","e","eddl","element","elment","enabledrag","end","endposit","endposition.i","endposition.x","error","etc","event","eventemitt","exist","export","extend","fa","fals","file","fill","fill(id","flip","flip_i","flip_x","frequent","front","function","get","getadjust","getadjusted(p","gettopleft","grid","h","handl","haspoint","haspoint(p","haspoint(p:point","height","horizont","hostlisten","htmlcanvasel","icon","if(coords.i","if(i","if(j","if(p.i","if(p.x","implement","import","includ","index","info","init","ink","inkactionchang","inkactionchange(nam","inkservic","input","interfac","interlac","intersect","intersectionpreview","invert","is_preview","issameboundsa","issameboundsas(bound","issamendx","issamendx(p1","j","j:j","j=col","keep","last_ndx","last_ndx:interlac","layer","layer.createlay","layersservic","left","lower","make","manual","match","math.floor((p.i","math.floor((p.x","metadata","method","more","move","name","ndx","ndx.i","ndx.j","neq","new","next","ngafterviewinit","ngoninit","null","number","nxi","object","onclear","onclear(b","ondeletecal","oninit","onpast","onpaste(","onsubdraftdrop","onsubdraftmov","onsubdraftstart","oper","out","output","p","p2","param","paramet","parent","past","pasteev","pasteevent(typ","pattern","perform","pic","place","point","poistion","posit","possibl","privat","properti","provider/ink.servic","provider/layers.servic","public","question","recalcul","refer","region","rel","repres","rescal","rescale(scal","rescale(scale:numb","resiz","resolvendxtopoint","resolvendxtopoint(ndx","resolvendxtopoint(ndx:interlac","resolvepointtoabsolutendx","resolvepointtoabsolutendx(p","resolvepointtoabsolutendx(p:point","resolvepointtondx","resolvepointtondx(p","resolvepointtondx(p:point","resolvetovalu","resolvetovalue(p","resolvetovalue(p:point","result","return","row","row/column","rund","scale","scoll","screen","screenus","select","selector","sequenc","set","setaspreview","setcomponentbound","setcomponentbounds(bound","setcomponentposit","setcomponentposition(point","setcomponents","setcomponentsize(width","setnewdraft","setnewdraft(temp","setstaticpositionandsize(bound","shift","shift_left","shift_up","si","size","snap","snaptogrid","snaptogrid(p","sourc","splice","src/app/mixer/palette/subdraft/subdraft.component.t","static","store","string","styleurl","subdraft","subdraft.component.html","subdraft.component.scss","subdraftcompon","such","take","tell","temp","templateurl","test","thecompon","this.bounds.height","this.bounds.topleft.i","this.bounds.topleft.x","this.bounds.width","this.canva","this.canvas.getcontext(\"2d","this.canvas.height","this.canvas.width","this.cx","this.draft.warp","this.draft.weft","this.drawdraft","this.dynamic_s","this.dynamic_tl","this.ink","this.inks.select(nam","this.layer.createlay","this.resolvepointtondx(p","this.scal","this.siz","this.static_tl","this.zndx","threshold","thresholdfreedmandiaconi","toggl","top","topleft","track","translat","true","true/fals","true/false/or","type","unset","up","us","v","valu","vertic","viewport","viewvalu","void","void}//tel","warp","weav","weavecompon","whetev","width","within","x","y","y:i","ye","z","zndx"],"components/SystemsComponent.html":["0","1","add","add(ev","allfruit","allwarpshuttl","allwarpsystem","allweftshuttl","allweftsystem","angular/cdk/drag","angular/cdk/keycod","angular/cor","angular/form","angular/material/autocomplet","angular/material/chip","angular/material/dialog","app","appl","boolean","break","case","cdkdragdrop","chip","class","color","comma","compon","console.log(\"select","console.log(\"send","console.log(this.warp_system","constructor","core/model/system","default","drop","elementref","enter","event","eventemitt","export","fals","file","for(let","formcontrol","fruit","id","idfromstr","idfromstring(","implement","import","index","info","input","lemon","lime","map","matautocomplet","matautocompleteselectedev","matautocompletewash","matautocompletewasi","matautocompletewesh","matautocompletewesi","match","matchipinputev","matdialog","matdialogconfig","metadata","method","modal/shuttles/shuttles.mod","moveiteminarray","name","new","ngoninit","number","observ","oninit","onupdatewarpshuttl","onupdatewarpsystem","onupdateweftshuttl","onupdateweftsystem","orang","output","param","properti","remov","remove(cal","result","return","rxj","rxjs/oper","select","selected(sourc","selector","sendupd","sendupdates(sourc","separatorkeyscod","shuttl","shuttleidfromnam","shuttleidfromname(","shuttlesmod","sourc","src/app/core/tool/systems/systems.component.t","startwith","static","strawberri","string","styleurl","switch(sourc","system","systems.component.html","systems.component.scss","systemscompon","templateurl","this.idfromstring(event.option.viewvalu","this.onupdatewarpshuttles.emit(this.warp_shuttles_pattern","this.onupdatewarpsystems.emit(this.warp_systems_pattern","this.onupdateweftshuttles.emit(this.weft_shuttles_pattern","this.onupdateweftsystems.emit(this.weft_systems_pattern","this.shuttleidfromname(event.option.viewvalu","this.shuttles[warp_id].getcolor","this.shuttles[warp_id].getnam","this.shuttles[weft_id].getcolor","this.shuttles[weft_id].getnam","this.warp_shuttles_pattern.length","this.warp_shuttles_pattern.push(warp_id","this.warp_shuttles_pattern.splice(index","this.warp_systems_pattern.length","this.warp_systems_pattern.push(warp_sys_id","this.warp_systems_pattern.splice(index","this.warpshuttlectrl.setvalue(nul","this.warpsystemctrl.setvalue(nul","this.weft_shuttles_pattern.length","this.weft_shuttles_pattern.push(weft_id","this.weft_shuttles_pattern.splice(index","this.weft_systems_pattern.length","this.weft_systems_pattern.push(weft_sys_id","this.weft_systems_pattern.splice(index","this.weftshuttlectrl.setvalue(nul","this.weftsystemctrl.setvalue(nul","true","type","updat","valu","viewchild","viewchild('auto_wash","viewchild('auto_wasi","viewchild('auto_wesh","viewchild('auto_wesi","viewchild('warpshuttleinput","viewchild('warpsysteminput","viewchild('weftshuttleinput","viewchild('weftsysteminput","visibl","void","warp_id","warp_obj","warp_shuttles_pattern","warp_shuttles_pattern_str","warp_sys_id","warp_system","warp_systems_pattern","warp_systems_pattern_str","warpshuttlectrl","warpshuttleinput","warpsystemctrl","warpsysteminput","wash","wasi","weft_id","weft_obj","weft_shuttles_pattern","weft_shuttles_pattern_str","weft_sys_id","weft_system","weft_systems_pattern","weft_systems_pattern_str","weftshuttlectrl","weftshuttleinput","weftsystemctrl","weftsysteminput","wesh","wesi"],"components/TopbarComponent.html":["aboutmod","ada","adalink","angular/cor","angular/material/dialog","app","bmp","bmplink","class","compon","console.log(obj","const","constructor","constructor(dialog","constructor(priv","data","density_unit","dialog","dialogref","dialogref.afterclosed().subscribe(result","downloadada","downloadbmp","downloadlink","downloadprint","downloadwif","draftel","drawer","elementref","event","eventemitt","export","file","filenam","handl","if(result","implement","import","info","initmod","input","jpg","load","loomtyp","match","matdialog","matdialogconfig","metadata","method","modal/about/about.mod","modal/init/init.mod","name","need","new","ngoninit","obj","onaboutcr","oninit","onredo","onreinit","onsav","onundo","openaboutdialog","opennewfiledialog","output","printlink","properti","public","redoclick","redoclicked(","redoclicked(e:ani","redoitem","result","return","saveasada","saveasada(","saveasbmp","saveasbmp(","saveasprint","saveasprint(","saveaswif","saveaswif(","selector","somehow","sourc","src/app/core/topbar/topbar.component.t","static","styleurl","templateurl","this.adalink._elementref","this.bmplink._elementref","this.density_unit","this.dialog.open(aboutmod","this.dialog.open(initmod","this.downloadada","this.downloadbmp","this.downloadprint","this.downloadwif","this.filenam","this.loomtyp","this.onredo.emit","this.onreinit.emit(result","this.onsave.emit(obj","this.onundo.emit","this.printlink._elementref","this.wiflink._elementref","timelin","topbar","topbar.component.html","topbar.component.scss","topbarcompon","true","type","undefin","undoclick","undoclicked(","undoclicked(e:ani","undoitem","var","viewchild","viewchild('adalink","viewchild('bmplink","viewchild('printlink","viewchild('wiflink","void","wif","wiflink"],"components/UploadFormComponent.html":["0","ada","angular/common/http","angular/cor","anonym","canva","canvas.getcontext('2d","canvas.height","canvas.width","class","compon","console.log(obj","constructor","constructor(priv","constructor(upsvc","ctx","ctx.drawimage(imag","ctx.getimagedata(0,0","ctx.imagesmoothingen","ctx.mozimagesmoothingen","ctx.msimagesmoothingen","ctx.webkitimagesmoothingen","currentupload","data","detectfil","detectfiles(ev","elementref","event","event.target.fil","eventemitt","export","fals","file","file.name.split(\".\").pop","file.name.split(\".\")[0","filelist","filetyp","final","form","form.component.html","form.component.scss","form.component.t","form/upload","httpclient","id","imag","image.crossorigin","image.naturalheight","image.naturalwidth","image.onload","image.src","imagetoshow","implement","import","info","init","input","map","match","metadata","method","name","new","ngoninit","number","obj","ondata","oninit","output","p","p.pipe","privat","progress","properti","responsetyp","result","return","rxjs/oper","selectedfil","selector","shuttl","sourc","src/app/core/uploads/upload","static","string","styleurl","subscribe((","templateurl","text'}).subscribe(data","this.canvas.nativeel","this.currentupload","this.currentupload.progress","this.httpclient.get(url","this.httpclient.get(url).subscribe(data","this.ondata.emit(obj","this.selectedfil","this.selectedfiles.item(0","this.typ","this.upsvc.getdownloadurl(this.currentupload.name).subscribe((url","this.upsvc.pushupload(this.currentupload","this.warp","type","upload","upload(fil","upload.servic","uploadformcompon","uploadservic","uploadsingl","upsvc","url","var","viewchild","viewchild('uploadimag","void","warp","wif"],"components/WeaverComponent.html":["0","1","100","10cm","2","80","absolut","ada","adjust","alt","anglar","angular","angular/cdk/overlay","angular/cor","angular/material/dialog","app","area","array","arrow","assign","base","below","bitmap","bmp","boolean","break","brush","c","call","canva","care","case","cell","cell(b","chang","changedetectionstrategi","check","circuit","class","clear","clearlocalstorag","click","clone","clonecol","clonecol(i","clonedeep","clonerow","clonerow(i","cm","collaps","collapsed:boolean","come","compon","conduct","connect","connectionmod","consol","console.log","console.log(","console.log(\"design","console.log(\"i","console.log(\"loc","console.log(\"next","console.log(\"on","console.log(\"prev","console.log(\"reinit","console.log(\"upd","console.log(\"zoom","console.log(d","console.log(i","console.log(result","const","constructor","constructor(p","constructor(priv","control","copi","copyset","core/modal/init/init.mod","core/model/cel","core/model/datatyp","core/model/draft","core/model/pattern","core/model/timelin","core/provider/pattern.servic","creat","creatematerial(","createpattern","createpattern(","createshuttl","createshuttle(","createwarpsystem","createwarpsystem(","createweftsystem","createweftsystem(","current","d","d_log","d_log[0].timestamp","d_log[d].timestamp","data","default","default_pattern","default_patterns:ani","delet","deletecol","deletecol(i","deleterow","deleterow(i","delt","density_unit","densityunit","design","design_act","design_mod","designact","designmod","dialog","dialogref","dialogref.afterclosed().subscribe(result","diff","dim","dims:ani","direct","directives/weave.direct","disabl","down","downloadlocalstorag","draft","draft(json.parse(d","draft({weft","draftel","draftelement:ani","drawdown","e","e.bitmap","e.epi","e.id","e.loomtyp","e.nam","e.pattern","e.typ","e.unit","e.warp","e.weft","elementref","empti","enableprodmod","end","epichang","epichange(","epichange(e:ani","eras","event","export","extend","fa","fals","false,true],[false,tru","far","faster","file","fill","flip","flip_i","flip_x","for(var","frame","framechang","framechange(","framechange(e:ani","front","function","getdraftfromlocalstor","h","heddl","height","hideshuttle(e:ani","hidewarpsystem","hidewarpsystem(","hidewarpsystem(e:ani","hideweftsystem","hideweftsystem(","hideweftsystem(e:ani","horizont","hostlisten","hostlistener('window:keydown.","hostlistener('window:keydown.c","hostlistener('window:keydown.d","hostlistener('window:keydown.p","hostlistener('window:keydown.shift.o","hostlistener('window:keydown.shift.p","hostlistener('window:keydown.x","icon","id","if(d","if(d_log[d].timestamp","if(e.sourc","if(e.typ","if(e.warp","if(result","if(this.draft.loom.typ","if(this.render.isyarnbasedview","if(this.render.showingfram","if(this.render.view_fram","implement","import","inch","index","info","initi","initmod","insert","insertcol","insertcol(i","insertrow","insertrow(i","insertrow(i:numb","interfac","invert","jacquard","jpg","key","keyeventcopy(","keyeventeras","keyeventerase(","keyeventinvert","keyeventinvert(","keyeventpast","keyeventpaste(","keyeventpoint","keyeventpoint(","keyeventselect","keyeventselect(","keyeventzoomin","keyeventzoomin(","keyeventzoomout","keyeventzoomout(","label","labelmod","left","list","load","loadrawlog","local","localstorag","localstorage.length","localstorage.removeitem(x","lodash","loom","loom:tru","loomchang","loomchange(","loomchange(e:ani","loomtyp","mask","match","matdialog","matdialogconfig","materi","material_typ","materialtyp","mechan","metadata","method","modal","modal/connection/connection.mod","modal/label/label.mod","mode","modul","name","name:'toggl","new","newest_stamp","ngafterviewinit","ngondestroy","ngoninit","non","noteschang","noteschanged(","noteschanged(e:ani","now","null","number","o","object","oldest_stamp","onclear","onclear(b","onclear(b:boolean","oncopi","ondesignmodechang","ondesignmodechange(","ondesignmodechange(e:ani","ondestroy","onfil","onfill(","oninit","onmask","onmask(","onpast","onpaste(","onsav","onsave(","onscrol","onwindowscrol","onwindowscroll(data","open","openconnectiondialog","openlabeldialog","oper","origin","out","over","p","p:pattern","param","paramet","past","pattern","pattern(res.body[i","pattern({width","patternservic","per","perform","pic","point","popup","press","print","print(","privat","properti","provid","ps","public","redo","refer","reflect","region","reinit","reinit(result","removepattern","removepattern(","render","render(fals","renderchang","renderchange(","res.bodi","resist","result","return","row","rxj","rxjs/oper","s","save","screen","scroll","scrolldispatch","scrollingsubscript","select","selector","servic","set","shaft","shift","shift+o","shift+p","shift_left","shift_up","showshuttle(e:ani","showwarpsystem","showwarpsystem(","showwarpsystem(e:ani","showweftsystem","showweftsystem(","showweftsystem(e:ani","shut","shutf","shuttl","shuttle,system","shuttle:numb","shuttlecolorchang","size","slider","sourc","squar","src/app/weaver/weaver.component.t","state","static","stitch","storag","string","styleurl","subject","subscrib","subscribe((data","support","switch(this.weaveref.selection.target.id","sy","system","system:numb","takeuntil","tell","templateurl","thicknesschang","thicknesschange(","thicknesschange(e:ani","thing","this.bitmap","this.collaps","this.copi","this.default_pattern","this.default_patterns.push(new","this.density_unit","this.design_mod","this.design_mode.id","this.design_mode.nam","this.dialog.open(connectionmod","this.dialog.open(initmod","this.dialog.open(labelmod","this.draft","this.draft.addmaterial(e.materi","this.draft.addshuttle(e.shuttl","this.draft.addwarpsystem(e.system","this.draft.clonecol(i","this.draft.clonerow(i","this.draft.computeyarnpath","this.draft.connections.push(result","this.draft.deletecol(i","this.draft.deleterow(i","this.draft.epi","this.draft.fillarea(this.weaveref.select","this.draft.insertcol(i","this.draft.insertrow(i","this.draft.loom.setminframes(e.valu","this.draft.loom.setmintreadles(e.valu","this.draft.loom.typ","this.draft.nam","this.draft.not","this.draft.pattern","this.draft.patterns[e.id","this.draft.patterns[e.id].pattern","this.draft.recomputeloom","this.draft.recomputewidth","this.draft.reload(d","this.draft.reload(result","this.draft.shuttl","this.draft.unit","this.draft.updateconnections(i","this.draft.updatevis","this.draft.updatewarpshuttlesfrompattern(pattern","this.draft.updatewarpsystemsfrompattern(pattern","this.draft.updateweftshuttlesfrompattern(pattern","this.draft.updateweftsystemsfrompattern(pattern","this.draft.warp","this.draft.weft","this.getdraftfromlocalstor","this.loomtyp","this.onaddrow.emit","this.oncopi","this.onpast","this.onwindowscroll(data","this.pattern","this.ps.getpatterns().subscribe((r","this.redraw","this.reinit(result","this.render.setcurrentview(valu","this.render.setfront(e.check","this.render.setzoom(e.valu","this.render.toggleviewfram","this.render.view_fram","this.render.zoomin","this.render.zoomout","this.scrol","this.scrollingsubscript","this.timeline.addhistorystate(this.draft","this.timeline.restorenexthistoryst","this.timeline.restoreprevioushistoryst","this.unsubscribe$.complet","this.unsubscribe$.next","this.weaveref.copi","this.weaveref.copyarea","this.weaveref.maskarea(p","this.weaveref.onnewdraftload","this.weaveref.recomputeloom","this.weaveref.redraw","this.weaveref.redraw({drawdown","this.weaveref.redraw({drawdown:tru","this.weaveref.redraw({loom","this.weaveref.redraw({loom:tru","this.weaveref.redrawloom","this.weaveref.rescal","this.weaveref.saveada(e.nam","this.weaveref.savebmp(e.nam","this.weaveref.saveprintabledraft(e.nam","this.weaveref.savewif(e.nam","this.weaveref.unsetselect","those","timelin","toggl","togglecollaps","toggleviewfram","total","treadlechang","treadlechange(","treadlechange(e:ani","true","type","undefin","undo","unitchang","unitchange(","unitchange(e:ani","unsubscrib","up","updat","updatepattern","updatepatterns(","updateselect","updateselection(","updateselection(e:ani","updatewarpshuttl","updatewarpshuttles(pattern","updatewarpsystem","updatewarpsystems(pattern","updateweftshuttl","updateweftshuttles(pattern","updateweftsystem","updateweftsystems(pattern","us","v","valu","var","variabl","version","vertic","view","view_mod","viewchang","viewchange(valu","viewchild","viewchild('bitmapimag","viewchild(weavedirect","viewmod","viewvalu","visual","void","want","warp","warp_materi","warp_materials:tru","warp_system","warp_systems:tru","warpnumchang","warpnumchange(","warpnumchange(e:ani","we'll","weav","weavecompon","weavedirect","weaver","weaver.component.html","weaver.component.scss","weaver/model/rend","weavercompon","weaveref","weft","weft_materi","weft_materials:tru","weft_system","weft_systems:tru","weftnumchang","weftnumchange(","wif","within","write","x","yarn","zoom"],"components/WeaverDesignComponent.html":["0","_","angular/cor","angular/form","angular/material/dialog","app","boolean","break","button_color","case","class","clearev","clearevent(b","clearevent(b:boolean","collaps","compon","console.log(e.target.nam","constructor","constructor(dialog","constructor(priv","copi","copyev","copyevent(","createpattern","createpattern(obj","default","design_act","design_mod","designactionchang","designactionchange(","designmodechang","designmodechange(","dialog","down","drawwithmateri","drawwithmaterial(","e.target.nam","event","eventemitt","export","ff4081","file","fillev","fillevent(id","flip_i","flip_x","hostlisten","id","if(e.check","implement","import","info","input","invert","lodash","match","matdialog","matdialogconfig","materi","metadata","method","mirrori","mirrorx","new","ngform","ngoninit","number","obj","obj.id","obj.nam","obj.typ","onclear","oncopi","oncreatepattern","ondesignmodechang","onfil","oninit","onpast","onpatternchang","onremovepattern","origin","output","past","pasteev","pasteevent(","pattern","point","properti","removepattern","removepattern(pattern","result","return","select","selector","shift_left","shift_up","shiftleft","shiftup","sourc","src/app/weaver/tool/weaverdesign/weaverdesign.component.t","string","styleurl","switch(e.target.nam","templateurl","this.brush","this.clearevent(fals","this.clearevent(tru","this.copyevent(","this.design_mod","this.onbrushchange.emit(obj","this.onclear.emit(b","this.oncopy.emit","this.oncreatepattern.emit(obj","this.ondesignmodechange.emit(obj","this.onfill.emit(obj","this.onpaste.emit(obj","this.onpatternchange.emit(obj","this.onremovepattern.emit(pattern","this.pasteevent(","toggl","togglechange(","type","up","updatepattern","updatepatterns(obj","valu","var","view_mod","void","weaverdesign","weaverdesign.component.html","weaverdesign.component.scss","weaverdesigncompon"],"components/WeaverPatternsComponent.html":["_","_.clonedeep(this.pattern","angular/cor","angular/material/dialog","app","class","compon","console.log(","console.log(\"open","console.log(pattern","const","constructor","constructor(dialog","constructor(priv","core/modal/pattern/pattern.mod","core/model/pattern","core/provider/pattern.servic","creat","data","dialog","dialogref","dialogref.afterclosed().subscribe(result","event","eventemitt","export","fals","file","fill","fill(id","if(this.select","implement","import","info","input","lodash","match","matdialog","matdialogconfig","metadata","method","new","ngoninit","obj","obj.pattern","obj:ani","oncreatepattern","onfil","oninit","onpatternchang","onremovepattern","openpatterndialog","openpatterndialog(pattern","output","pattern","pattern({pattern","pattern.setpattern(this.select","patternmod","patternservic","print","print(","removepattern","removepattern(pattern","result","return","select","selector","sourc","src/app/weaver/tool/weaverpatterns/weaverpatterns.component.t","styleurl","templateurl","this.dialog.open(patternmod","this.oncreatepattern.emit({pattern","this.onfill.emit(id","this.onfill.emit(p","this.onpatternchange.emit(obj","this.onremovepattern.emit({pattern","this.patterns[p].favorit","this.patterns[result.id","this.select","true","type","undefin","updatefavorit","updatefavorite(p","var","void","weaverpattern","weaverpatterns.component.html","weaverpatterns.component.scss","weaverpatternscompon"],"components/WeaverViewComponent.html":["angular/cor","app","class","compon","console.log(\"cal","console.log(\"valu","constructor","e.sourc","e.valu","event","eventemitt","export","file","front","id","if(typ","implement","import","info","input","match","metadata","method","new","ngoninit","oncreatewarpsystem","oncreateweftsystem","onhidewarpsystem","onhideweftsystem","oninit","onshowwarpsystem","onshowweftsystem","onviewchang","onviewfront","onzoomchang","output","result","return","selector","sourc","src/app/weaver/tool/weaverview/weaverview.component.t","string","styleurl","templateurl","this.onhidewarpsystem.emit({systemid","this.onhideweftsystem.emit({systemid","this.onshowwarpsystem.emit({systemid","this.onshowweftsystem.emit({systemid","this.onviewchange.emit(e.valu","this.onviewfront.emit(","this.onzoomchange.emit(","type","valu","value:ani","view","view_mod","viewchang","viewchange(","viewchange(e:ani","viewfront","viewfront(","viewfront(e:ani","visibl","visiblebutton","visiblebutton(id","void","warp_system","weaverview","weaverview.component.html","weaverview.component.scss","weaverviewcompon","weft","weft_system","zoom","zoomchang","zoomchange(","zoomchange(e:ani"],"directives/SelectionComponent.html":["0","activ","angular/cor","app","boolean","bound","bounds:bound","class","console.log(\"cr","console.log(this.draft.id","core/model/datatyp","core/model/draft","default","direct","draft","draft({nam","export","fals","file","filter","getdraftid","height","implement","import","info","interlac","j:0","match","metadata","method","new","ngoninit","number","oninit","point","properti","public","result","return","scale","select","selectioncompon","selector","setpositionands","setpositionandsize(bound","si","sourc","src/app/mixer/palette/selection/selection.component.t","start","start:interlac","string","this.bound","this.draft.id","topleft","valu","void","width","x","y:0"],"directives/WeaveDirective.html":["0","0.5","000","1","2","25","2d","3/27","333333","393939","3d3d3d","4","5","5)).touppercas","50","9*dims.h","9*dims.w","account","action","ada","anchor","angular","angular/cor","anytim","area","area.fil","array","arrray","associ","attribut","avoid","back","base","base_dim","base_dims.h","base_dims.h*(this.weave.visiblerows.length+2","base_dims.w","base_fill.h","base_fill.i","base_fill.w","base_fill.x","be","beyond","bitmap","boolean","bottom","break","brush","c","c+\"10","call","canva","canvasel","canvastobmp","case","case'maskinvert","cell","center","chang","circl","circle.arc(left+dims.w/2","class","clearselect","clonedeep","clonedeep(this.weave.pattern","col","col/row","color","column","come","consol","console.log(\"draw","console.log(\"el","console.log(\"fil","console.log(select","const","constructor","constructor(el","constructor(priv","contain","context","copi","copyarea","core/model/canvas2imag","core/model/datatyp","core/model/pattern","core/model/timelin","creat","current","currentpo","currentpos.i","currentpos.j","currentpos.si","currentpos:interlac","cx","cx.arcto(left+dims.w/2","cx.beginpath","cx.fill(circl","cx.fillrect(left","cx.fillrect(left+j*base_dims.w","cx.fillstyl","cx.lineto((x+1)*base_dims.w","cx.lineto(left","cx.lineto(left+dims.w","cx.lineto(left+dims/2","cx.lineto(left+margin","cx.linewidth","cx.moveto((x+1)*base_dims.w","cx.moveto(left","cx.moveto(left+dims.w,top","cx.moveto(left+dims.w/2,top+dims.h/2","cx.moveto(left+dims/2","cx.moveto(left+margin+warp_width","cx.moveto(left,top","cx.setlinedash([dims.w/20,dims.w/4","cx.shadowcolor","cx.shadowoffseti","cx.shadowoffsetx","cx.stroke","cx.stroke(circl","cx.strokestyl","cxthread","cxtieup","cxtreadl","cxwarpmateri","cxwarpsystem","cxweftmateri","cxweftsystem","cycl","d3","d3.select(this.svgel).style('display","d3.select(this.svgselectcol).style('display","d3.select(this.svgselectrow).style('display","date.now().tostring(36","declar","default","defin","descript","design_mod","determin","dim","dimi","dims.h","dims.h/2","dims.w","dims.w/2","direct","div","divviewfram","divwasi","divwesi","don't","down","draft","draft.it","draft_i","draft_j","draft_width","draftcontain","draw","drawblank","drawblank(cx","drawcel","drawcell(cx","drawdrawdown","drawgrid","drawgrid(cx","drawloomst","drawloomstates(upd","drawondrawdown","drawondrawdown(currentpo","drawonmask","drawonmask(currentpo","drawonthread","drawonthreading(currentpo","drawontieup","drawontieups(currentpo","drawontreadl","drawontreadling(currentpo","drawonwarpmateri","drawonwarpmaterials(currentpo","drawonwarpselector","drawonwarpselectors(currentpo","drawonweftmateri","drawonweftmaterials(currentpo","drawonweftselector","drawonweftselectors(currentpo","drawwarp","drawwarpmateri","drawwarpmaterialcel","drawwarpmaterialcell(cx","drawwarpmaterials(cx","drawwarps(cx","drawwarpselectorcel","drawwarpselectorcell(cx","drawwarpsov","drawwarpsystem","drawwarpsystems(cx","drawweftbottomleft","drawweftbottomleft(top","drawweftbottomright","drawweftbottomright(top","drawweftend","drawweftend(top","drawweftleftup","drawweftleftup(top","drawweftmateri","drawweftmaterialcel","drawweftmaterialcell(cx","drawweftmaterials(cx","drawweftov","drawweftover(top","drawweftrightup","drawweftrightup(top","drawweftselectorcel","drawweftselectorcell(cx","drawweftstart","drawweftstart(top","drawweftsystem","drawweftsystems(cx","drawweftund","drawweftunder(top","drawweftup","drawweftup(top","each","el","element","elementref","end","entir","eras","event","event.target","event.target.id","event.target.id===\"drawdown","event.target.id===\"treadl","event.target.localnam","event.typ","eventemitt","exampl","export","extend","fals","file","filenam","fill","fillarea","flag","flag_histori","flag_recomput","for(let","for(var","frame","frame/threadl","fromev","fromevent(event.target","front","function","generateid","go","grid","h","hack","handl","has_mask","height","hide","histori","hold","hostlisten","hostlistener('mousedown","hostlistener('mouseleav","hostlistener('mouseup","html","htmlcanvasel","htmlelement","id","idx","if(!this.render.isfront","if(!this.render.view_fram","if((this.weave.loom.num_treadles)*dims.w","if(currentpos.i","if(currentpos.j","if(currentpos.si","if(event.shiftkey","if(event.target","if(front","if(is_up","if(left","if(p1","if(selection.target.id","if(target","if(this.design_mode.nam","if(this.flag_histori","if(this.flag_recomput","if(this.issame(currentpo","if(this.render.getcurrentview","if(this.render.isyarnbasedview","if(this.selection.hasselect","if(this.selection.target.id","if(this.weave.warp_systems[system_id].isvis","import","inact","info","inform","information.it","input","input('design_mod","input('draft","input('rend","input('timelin","interact","interlac","invert","invis","is_up","issam","issame(p1","iter","j","kind","lastpo","ld","leav","left","left+1)*dims.w","left+dims.w","left+dims.w/2","line","list","load","lodash","logic","look","loomupd","make","manipul","margin","mask","maskarea","maskarea(pattern","maskeras","maskpoint","match","materi","math.ceil(selection.height","math.ceil(selection.width","math.floor((event.offseti","math.floor((event.offsetx","math.floor(event.offseti","math.max(scalex","math.min(scalex","math.min(selection.start.i","math.min(selection.start.j","math.min(selection.start.si","math.min(this.selection.start.j","math.min(this.selection.start.si","math.pi","math.random().tostring(36).substr(2","metadata","method","mous","mousedown","mouseleav","mousemov","mousemove').subscribe(","mouseup","move","movesubscript","name","need","new","next","ngondestroy","ngoninit","none","now","null","o","obj","object","observ","offset","offset.i","offset.x","on","onend","onend(ev","onmov","onmove(ev","onnewdraftload","onnewselect","onstart","onstart(ev","onto","onundoredo","output","over","overs.concat([idx","overs[o","p1.i","p1.j","p2","p2.i","p2.j","p2:interlac","param","paramet","path2d","pattern","pattern({nam","pattern.length","pattern[0].length","point","posit","print","printpattern","printpattern(pattern","privat","properti","public","recomput","recomputeloom","rectangl","redo","redraw","redraw(flag","redrawcol","redrawcol(x","redrawdraft","redrawloom","redrawrow","redrawrow(i","redrawvisualview","redrawyarnview","refer","region","remov","removesubscript","render","render:ani","renderer2","repres","rescal","resiz","result","return","right","row","row/column","row_values.reduce((ov","rxj","rxjs/oper","save","saveada","saveada(filenam","savebmp","savebmp(filenam","savepng","savepng(filenam","saveprintabledraft","saveprintabledraft(filenam","savewif","savewif(filenam","scaletocov","scaletofit","scaley","schemat","screen_i","screen_row","scroll_left","scroll_top","select","selection.end.i","selection.end.j","selection.end.si","selector","set","setposanddraw","setposanddraw(target","show","shuttl","shuttle.getcolor","shuttle.getcolor()+\"10","shuttle.getthickness()/100","shuttle.typ","shuttle_id","si","simul","singl","size","sizes.it","sourc","spot","squar","src/app/weaver/directives/weave.directive.t","start","started:boolean","state","stitch","string","stroke_width","structur","style","subject","subscrib","subscript","svg","svgel","svgselectcol","svgselectrow","switch","system","system_id","takelast","takeuntil","target","target.id","temp","temp_copi","temppattern","text","thethread","this.canvasel","this.canvasel.getcontext('2d","this.canvasel.height","this.canvasel.width","this.clearselect","this.copi","this.copyarea","this.cx","this.cx.fillrect(0,0,this.canvasel.width,this.canvasel.height","this.cx.fillstyl","this.cx.strokestyl","this.cxthread","this.cxthreading.canvas.height","this.cxthreading.canvas.width","this.cxthreading.clearrect(0,0","this.cxtieup","this.cxtieups.canvas.height","this.cxtieups.canvas.width","this.cxtieups.clearrect(0,0","this.cxtreadl","this.cxtreadling.canvas.height","this.cxtreadling.canvas.width","this.cxtreadling.clearrect(0,0","this.cxwarpmateri","this.cxwarpsystem","this.cxweftmateri","this.cxweftsystem","this.design_mode.nam","this.divviewfram","this.divwasi","this.divwesi","this.draftcontain","this.draftcontainer.offsetparent.scrollleft","this.draftcontainer.offsetparent.scrolltop","this.draftcontainer.offsetwidth","this.drawblank(this.cxthreading,this.threadingcanva","this.drawblank(this.cxtieups,this.tieupscanva","this.drawblank(this.cxtreadling,this.treadlingcanva","this.drawcel","this.drawgrid(this.cxthreading,this.threadingcanva","this.drawgrid(this.cxtieups,this.tieupscanva","this.drawgrid(this.cxtreadling,this.treadlingcanva","this.drawondrawdown(currentpo","this.drawonmask(currentpo","this.drawonthreading(currentpo","this.drawontieups(currentpo","this.drawontreadling(currentpo","this.drawonwarpmaterials(currentpo","this.drawonwarpselectors(currentpo","this.drawonweftmaterials(currentpo","this.drawonweftselectors(currentpo","this.drawwarps(this.cx","this.drawwarpsov","this.drawweftup(i","this.el.nativeel","this.el.nativeelement.children","this.el.nativeelement.children[0","this.el.nativeelement.children[1","this.el.nativeelement.children[10","this.el.nativeelement.children[11","this.el.nativeelement.children[12","this.el.nativeelement.children[13","this.el.nativeelement.children[2","this.el.nativeelement.children[3","this.el.nativeelement.children[4","this.el.nativeelement.children[5","this.el.nativeelement.children[6","this.el.nativeelement.children[7","this.el.nativeelement.children[8","this.el.nativeelement.children[9","this.flag_histori","this.flag_recomput","this.lastpo","this.movesubscript","this.movesubscription.unsubscrib","this.onmove(","this.redrawloom","this.redrawyarnview","this.removesubscript","this.render.getcelldims(\"bas","this.render.getcelldims(\"select","this.render.getcelldims(this.design_mode.nam","this.render.getcurrentview","this.render.getzoom","this.render.isfront","this.render.view_back","this.render.zoom/100","this.rescal","this.seg","this.selection.end","this.selection.end.i","this.selection.end.j","this.selection.end.si","this.selection.height","this.selection.setparamet","this.selection.settarget(this.canvasel","this.selection.settarget(this.threadingcanva","this.selection.settarget(this.tieupscanva","this.selection.settarget(this.treadlingcanva","this.selection.settarget(this.warpmaterialscanva","this.selection.settarget(this.warpsystemscanva","this.selection.settarget(this.weftmaterialscanva","this.selection.settarget(this.weftsystemscanva","this.selection.start","this.selection.start.i","this.selection.start.j","this.selection.start.si","this.selection.unsetparamet","this.selection.width","this.setposanddraw(event.target","this.svgel","this.svgselectcol","this.svgselectrow","this.temppattern","this.threadingcanva","this.threadingcanvas.getcontext('2d","this.threadingcanvas.height","this.threadingcanvas.width","this.tieupscanva","this.tieupscanvas.getcontext('2d","this.tieupscanvas.height","this.tieupscanvas.width","this.timeline.addhistorystate(this.weav","this.treadlingcanva","this.treadlingcanvas.getcontext('2d","this.treadlingcanvas.height","this.treadlingcanvas.width","this.unsetselect","this.warpmaterialscanva","this.warpmaterialscanvas.getcontext('2d","this.warpmaterialscanvas.height","this.warpmaterialscanvas.width","this.warpsystemscanva","this.warpsystemscanvas.getcontext('2d","this.warpsystemscanvas.height","this.warpsystemscanvas.width","this.weave.colshuttlemapping[overs[o","this.weave.colsystemmapping[overs[o","this.weave.computeyarnpath","this.weave.loom.frame_mapping[currentpos.i","this.weave.loom.frame_mapping[fram","this.weave.loom.frame_mapping[i","this.weave.loom.min_fram","this.weave.loom.min_treadl","this.weave.loom.min_treadles*dims.w","this.weave.loom.num_fram","this.weave.loom.num_treadl","this.weave.loom.threading.length","this.weave.loom.tieup.length","this.weave.loom.tieup[0].length","this.weave.loom.tieup[i][j","this.weave.loom.treadling[row","this.weave.shuttles[shuttle_id","this.weave.shuttles[this.weave.colshuttlemapping[left","this.weave.visiblerows.length","this.weave.visiblerows[currentpos.i","this.weave.visiblerows[i","this.weave.warp","this.weave.weft","this.weftmaterialscanva","this.weftmaterialscanvas.getcontext('2d","this.weftmaterialscanvas.height","this.weftmaterialscanvas.width","this.weftsystemscanva","this.weftsystemscanvas.getcontext('2d","this.weftsystemscanvas.height","this.weftsystemscanvas.width","thread","threadingcanva","through","tieup","tieupscanva","timelin","toggl","top","top+dims.h","top+dims.h/2","top+i*base_dims.h","touch","treadl","treadlingcanva","true","type","u","ui","undefin","under","undo","unless","unsetselect","unsubscrib","up","updat","updateloomfromdraft","updateloomfromdraft(currentpo","updates","updates.thread","updates.threading[u].i","updates.threading[u].j","updates.tieup","updates.tieup[u","updates.tieup[u][j].i","updates.tieup[u][j].j","updates.treadl","updates.treadling[u].i","updates.treadling[u].j","us","user","v","v.isup","var","variabl","variou","vertic","view","viewchild","visibl","visual","void","w","w,h","warp","warp_shuttl","warp_shuttle.getcolor","warp_shuttle.getcolor()+\"10","warp_shuttle.getthickness()/100","warp_shuttle.typ","warp_system","warp_width","warp_width)/2","warpmaterialscanva","warpsystemscanva","weav","weavedirect","weaver/model/rend","weaver/model/select","weaveref","weft","weft_system","weftmaterialscanva","weftsystemscanva","white","width","wif","window","within","x","y","yarn","you'v","zoom"],"injectables/DesignmodesService.html":["1","alt","angular/cor","array","arrow","ask","associ","boolean","both","check","child","child.select","children","circl","class","clear","clearselect","collect","compon","console.log(\"select","const","constructor","coorespond","correspond","creat","current","deep","deisgnmod","describ","design","designmod","designmodesservic","draw","el.valu","elementat","enabl","enable_ink","enabled:boolean","etc","expand","export","fa","fals","far","file","fill","fill_circl","fill_rect","found","found:designmod","free","freehand","function","getmod","getmode(nam","getselect","getselected():array","icon","if(child.valu","if(mode.valu","import","info","inject","interfac","isselect","isselected(nam","isselected(name:string):boolean","line","look","made","match","merg","method","mode","mode.children.foreach(child","mode.enable_ink","mode.select","modes.foreach(mod","more","move","name","nest","noth","null","object","outlin","param","paramet","parent","pen","polygon","previou","properti","providedin","rectangl","result","retreiv","return","root","rxjs/oper","select","select(nam","selected:fals","selectedhasinken","selectedhasinkenabled():boolean","set","shape","shapes:array","slash","sourc","specifi","squar","src/app/mixer/provider/designmodes.service.t","string","stroke_circl","stroke_rect","this.clearselect","this.getselect","this.mod","this.modes.foreach","this.select","this.select('draw","this.selected.find(el","this.selected.foreach","this.selected.push(child","this.selected.push(mod","track","true","undefin","user","valu","viewvalu","void","we'r","whether","work"],"injectables/InkService.html":["adjust","angular/cor","area","array","ask","associ","atop","black","boolean","bottom","cell","check","class","clear","clearselect","compar","const","constructor","coorespond","copi","correspond","current","describ","down","draft","draw","dx","equal","eras","export","fa","fals","far","file","found","function","getink","getink(nam","getinks():array","getselect","getselected():str","heddl","icon","if(ink.valu","import","info","inject","ink","ink.select","inkservic","inlay","interfac","isselect","isselected(nam","isselected(name:string):boolean","look","made","mask","match","matter","method","mode","mode.uses_mask","mode:ink","name","neq","noth","null","overlay","param","paramet","pattern","place","plu","previou","privat","properti","providedin","remov","result","retreiv","return","return(nam","reveal","revers","root","select","select(nam","selectedhasmask","selectedhasmask():boolean","set","shape","sourc","specifi","squar","src/app/mixer/provider/ink.service.t","string","this.clearselect","this.getink(this.getselect","this.ink","this.inks.foreach","this.inks.foreach(ink","this.select","this.select('neq","this.selected.valu","time","true","under","underneight","underneith","unset","up","us","user","uses_mask","uses_mask:fals","uses_mask:tru","valu","viewvalu","void","we'r","weav","whether","within"],"injectables/LayersService.html":["0","alway","angular/cor","class","clearlay","constructor","count","createlay","descript","drawn","element","export","file","front","getfrontlay","getfrontlayer():numb","import","info","inject","keep","layer","layersservic","mani","match","method","new","newlay","number","properti","providedin","result","return","root","screen","servic","sourc","src/app/mixer/provider/layers.service.t","this.count","track","void"],"injectables/PatternService.html":["angular/common/http","angular/cor","class","constructor","constructor(http","constructor(priv","definit","descript","export","file","getpattern","http","httpclient","httprespons","import","info","inject","map","match","method","observ","pattern","patternservic","provid","respons","result","return","rxjs/oper","sourc","src/app/core/provider/pattern.service.t","this.http.get('assets/patterns.json","void"],"injectables/UploadService.html":["af","angular/common/http","angular/cor","angularfire2/auth","angularfire2/databas","angularfire2/storag","angularfireauth","angularfiredatabas","angularfirelist","angularfirestorag","basepath","basepath:str","blob","catch(error","class","console.log(error","const","constructor","constructor(af","constructor(priv","createimagefromblob","createimagefromblob(imag","databas","db","default","delet","deletefiledata","deletefiledata(key","deletefilestorag","deletefilestorage(nam","deletefilestorage(name:str","deleteupload","deleteupload(upload","detail","dir","export","fals","file","fileread","firebas","firebase/app","getdownloadurl","getdownloadurl(id","header","http","httpclient","httpheader","httpoption","httprespons","id","imag","imagetoshow","import","info","inject","key","ld","map","match","math.random().tostring(36).substring(2","method","name","new","now","observ","p","privat","properti","pushupload","pushupload(upload","reader","reader.addeventlistener(\"load","reader.readasdataurl(imag","reader.result","realtim","respect","result","return","right","rxj","rxjs/oper","savefiledata","savefiledata(upload","serv","sourc","src/app/core/uploads/upload.service.t","st","storag","storageref","storageref.child(`${this.basepath}/${name}`).delet","storageref.child(id).getdownloadurl","storageref.put(upload.fil","string","sure","this.db.list(`${this.basepath}/`).push(upload","this.db.list(`${this.basepath}/`).remove(key","this.deletefiledata(upload.$key","this.deletefilestorage(upload.nam","this.imagetoshow","this.savefiledata(upload","this.st.ref","this.st.ref(id","this.st.ref(nam","this.uploadprogress","this.uploadprogress.subscribe((p","uniqu","upload","upload.nam","upload.progress","uploadprogress","uploadservic","uploadtask","uploadtask.percentagechang","uploadtask.snapshotchang","valu","void","we'r","write"],"routes.html":["compon","match","mixer","mixercompon","path","pathmatch","redirectto","result","rout","weaver","weavercompon"],"pipes/FilterPipe.html":["angular/cor","arg","args[key","array","class","creat","descript","exampl","export","fals","file","filter","filterpip","found","implement","import","info","item","item[key","key","match","name","pipe","pipetransform","result","results.push(item","return","sourc","src/app/core/pipe/filter.pipe.t","transform(valu","true","val","valu"],"classes/AdaCADWeaverPage.html":["adacadweaverpag","browser","browser.get","class","e2e/app.po.t","element","element(by.css('app","export","file","getparagraphtext","h1')).gettext","import","info","match","method","navigateto","protractor","result","return","root","sourc","void"],"classes/Cell.html":["0","0b0000","0b0001","0b0010","0b0011","0b0100","0b0101","0b0110","0b1000","0b1001","0b1010","0b1100","1","2","2)===1","3","boolean","call","cell","class","constructor","constructor(set","definit","describ","descript","export","fals","file","form","getheddl","getheddle():boolean","getmaskid","getpol","haseast","haseast():boolean","hasnorth","hasnorth():boolean","hassouth","hassouth():boolean","haswest","haswest():boolean","heddl","id","if(!this.is_set","if(set","if(this.is_set","if(valu","info","is_set","is_up","iseast","iseast():boolean","iseastwest","iseastwest():boolean","isnortheast","isnortheast():boolean","isnorthsouth","isnorthsouth():boolean","isnorthwest","isnorthwest():boolean","isset","issoutheast","issoutheast():boolean","issouthwest","issouthwest():boolean","isup","isup():boolean","iswest","iswest():boolean","leav","list","mask_id","match","method","null","number","object","p:number","param","paramet","params.is_set","params.is_up","params.mask_id","params.pol","pole","present","properti","reload","reloadcel","reloadcell(param","result","return","return((p","return((this.pol","return(p","set","seteast","seteastwest","setheddl","setheddle(valu","setheddle(value:boolean","setheddledown","setheddleup","setmaskid","setmaskid(id","setnorth","setnorthsouth","setpol","setpoles(pol","setpoles(poles:numb","setsouth","setwest","sourc","src/app/core/model/cell.t","take","this.is_set","this.is_up","this.mask_id","this.pol","this.seteast","this.setnorth","this.setsouth","this.setwest","toggleheddl","true","undefin","unset","unseteast","unsetheddl","unsetmaskid","unsetnorth","unsetpol","unsetsouth","unsetwest","up","valu","variabl","void"],"classes/Connection.html":["angular/cor","angular/material/dialog","app","class","close","compon","connect","connection.modal.html","connection.modal.scss","connectionmod","constructor(priv","data","dialogref","end","export","file","implement","import","info","inject","inject(mat_dialog_data","mat_dialog_data","match","matdialogref","new","ngoninit","number","oninit","point","privat","properti","result","save","selector","shuttl","shuttleid","sourc","src/app/weaver/modal/connection/connection.modal.t","start","styleurl","templateurl","this.connection.end","this.connection.start","this.data.shuttl","this.dialogref.clos","this.dialogref.close(this.connect","this.shuttl","x","y"],"classes/Draft.html":["0","1","10","2","3","333333","4","61c97d","8","_","acc","acc.concat([idx","active_cel","ad","adacad","addlabel","addlabel(row","addshuttl","addshuttle(shuttl","addwarpsystem","addwarpsystem(system","addweftsystem","addweftsystem(system","anoth","anotherus","area","array","associ","assum","automat","bar","base","belong","between","bool","boolean","bottom","bottom_hasvalu","boundari","c","c.end.i","c.start.i","call","came","canva","case","cell","cell.isset","chang","class","clonecol","clonecol(i","clonerow","clonerow(i","col","collect","colmaterialmap","color","colshuttlemap","colshuttlepattern","colsystemmap","colsystempattern","coltoshuttl","coltoshuttle(col","coltosystem","coltosystem(col","computeyarnpath","conduct","conflict","connect","console.log(\"fil","console.log(\"row","console.log(\"row/last.row","console.log(select","const","constructor","constructor(undefin","constructor({...param","contain","creat","createconnect","createconnection(shuttl","cycl","datatyp","date.now","defin","definit","delet","delete_bottom","delete_top","deletecol","deletecol(i","deleteconnect","deleteconnection(lineid","deletenrowsfromback","deletenrowsfromback(n","deletenrowsfromfront","deletenrowsfromfront(n","deleterow","deleterow(i","deleterows(amount","deletesinglerow","deletesinglerow(si","descript","design","doesn't","down","draft","draft_j","draftinterfac","draw","each","east","end","ensur","entir","epi","export","fals","file","fill","fill(pattern","fill_pattern","fillarea","fillarea(select","find","for(i","for(let","for(var","format","frame","functionalityto","futur","getcolor","getcolor(index","getcolorcol","getcolorcol(index","getdirect","getdirection(neighbor","getnextpath","getnextpath(path","getwarpsystemcod","getwarpsystemcode(index","getweftsystemcod","getweftsystemcode(index","go","h","happen","hascel","hascell(i","haseastneighbor","haseastneighbor(i","haseastneighbor(i:numb","hasnorthneighbor","hasnorthneighbor(i","hassouthneighbor","hassouthneighbor(i","haswestneighbor","haswestneighbor(i","id","idx","if(j","if(moving_left","if(next_path.row","if(overs.length","if(params.loom","if(params.loom.thread","if(params.loom.tieup","if(params.loom.treadl","if(params.shuttl","if(params.warp_system","if(rowmap[ndx","if(selection.target.id","if(start","if(this.haseastneighbor(i,j","if(this.haseastneighbor(ndx,j","if(this.haswestneighbor(ndx,j","if(this.pattern[i][ndx].isup","if(this.pattern[ndx][j].isup","if(this.rowshuttlemapping[ndx","if(updates[u].i","ii","implement","import","index","info","insert","insert:fals","insertcol","insertcol(i","insertrow","insertrow(i","insertrows(amount","insertsinglerow","insertsinglerow(si","intefac","interfac","interlac","is_up","ismask","ismask(i","isset","isset(i","isup","isup(i","isup(i:numb","j","j+1","j:number","k","k%2","label","last.ndx","last.ndx+1","last.row","limit","line","list","load","lodash","logic","looki","loom","loom('fram","loom(params.loom.typ","maintain","make","makerandompattern","makerandompattern(w","mani","map","mask","match","mateial","materi","math.ceil(selection.height","math.ceil(selection.width","math.floor(math.random()*16777215).tostring(16","math.max(max_ndx","math.min(max","math.min(min_ndx","math.min(selection.start.j","math.min(selection.start.si","max_ndx","max_ndx+1","max_ndx:numb","method","min_ndx","min_ndx:numb","mixer","more","move","moving_left:boolean","n","n,n","n:number","name","ndx","need","new","next","next_max_ndx","next_max_ndx:numb","next_min_ndx","next_min_ndx:numb","next_path","next_path.overs[0","next_path.overs[next_path.overs.length","north","note","noth","now","number","object","offset","on","over","overs.concat([idx","overs.length","overs.pop","overs.shift","param","param0","paramet","params.connect","params.epi","params.label","params.loom.num_fram","params.loom.num_treadl","params.loom.thread","params.loom.tieup","params.loom.treadl","params.mask","params.nam","params.not","params.pattern","params.shuttl","params.unit","params.visiblerow","params.warp","params.warp_system","params.weft","parent","path","path[k].ov","pattern","pattern(patterns[i","pattern(single_pattern","pattern.height","pattern.length","pattern.width","pattern[0].length","patterns[i","pingneighbor","pingneighbors(i","point","privat","properti","pt","pts.push(format","pts.push(new","public","push","randomcolor","recalculatedraft","recalculatedraft(tieup","recomputeloom","recomputewidth","refer","reload","reload(undefin","reloadformix","reloadformixer(undefin","remov","render","repopul","requir","result","return","revers","row","row.filter(cel","row/col","row/column","rowmap","rowmap.push(active_cells.length","rowmaterialmap","rowshuttlemap","rowshuttlepattern","rowsystemmap","rowsystempattern","rowtoshuttl","rowtoshuttle(screen_row","rowtosystem","rowtosystem(screen_row","run","s","s0","s1","s2","s3","same","save","scale","scan","screen","screen_i","sd","sd.push(","sd.push(si","search","see","seem","select","selection.end.j","selection.end.si","sent","set","seteast","seteast(row","seteastneighbor","seteastneighbors(i","seteastwest","seteastwest(row","setheddl","setheddle(i","setmask","setmask(i","setnorth","setnorth(row","setnorthneighbor","setnorthneighbors(i","setnorthneighbors(i:numb","setnorthsouth","setnorthsouth(row","setsouth","setsouth(row","setwest","setwest(row","setwestneighbor","setwestneighbors(i","setwestneighbors(i:numb","shoudl","shown","shuttl","shuttle(shuttles[i","shuttle({id","shuttle.color","shuttle.id","shuttle.insert","shuttle_id","shuttleid","si","singl","smaller","someth","sourc","specif","speed","splicepatterncol(i","src/app/core/model/draft.t","store","string","string.fromcharcode(97","subpattern","switch","sy","system","system(systems[i","system({id","system.id","systemid","thickness:50","this.colshuttlemapping[index","this.colshuttlepattern","this.colsystemmapping[index","this.colsystempattern","this.connect","this.epi","this.getnextpath(path","this.id","this.label","this.loom","this.loom.getaffecteddrawdownpoints({warp","this.loom.num_treadl","this.loom.thread","this.loom.tieup","this.loom.treadl","this.loom.treadling.splic","this.loom.treadling.splice(0,n","this.makerandompattern(this.loom.num_fram","this.mask","this.mask.splice(i","this.mask.splice(idx,0,data[i","this.nam","this.not","this.pattern","this.pattern.foreach(row","this.pattern.splic","this.pattern.splice(0","this.pattern[i][ndx].seteast","this.pattern[i][ndx].unseteast","this.recalculatedraft(params.loom.tieup","this.rowshuttlemapping.splic","this.rowshuttlemapping.splice(0","this.rowshuttlemapping.splice(idx,0,shuttle.id","this.rowshuttlemapping[row","this.rowshuttlepattern","this.rowsystemmapping.splic","this.rowsystemmapping.splice(0","this.rowsystemmapping[row","this.rowsystempattern","this.seteast(row","this.setnorth(row","this.setnorthsouth(j","this.setsouth(row","this.setsouth(row,max_ndx+1","this.setwest(row","this.shuttl","this.shuttles[col","this.shuttles[id","this.unit","this.updatevis","this.visiblerow","this.visiblerows[index","this.warp","this.warp_system","this.warp_systems[col","this.weft","this.weft_systems[id","thread","through","to_delet","top","top_hasvalu","track","treadl","trimunsetcol","trimunsetrow","true","turn","type","u","undefin","uniqu","unit","unset","unseteastneighbor","unseteastneighbors(i","unsetwestneighbor","unsetwestneighbors(i","unsetwestneighbors(i:numb","until","updat","updatedraftfromthread","updatedraftfromthreading(upd","updatedraftfromtieup","updatedraftfromtieup(upd","updatedraftfromtreadl","updatedraftfromtreadling(upd","updateloomfromdraft","updateloomfromdraft(currentpo","updatepol","updatepoles(i","updates[u].i","updates[u].j","updatesystemvis","updatesystemvisibility(typ","updatevis","updatewarpshuttlesfrompattern","updatewarpshuttlesfrompattern(pattern","updatewarpsystemsfrompattern","updatewarpsystemsfrompattern(pattern","updateweftshuttlesfrompattern","updateweftshuttlesfrompattern(pattern","updateweftsystemsfrompattern","updateweftsystemsfrompattern(pattern","update{i","upward","us","user","v","v.isup","val","val:ani","valu","var","visibl","visible:tru","visiblerow","void","w","w,h","warp","warp_system","weaver/model/select","weft","weft_system","west","western","while(this.warp_systems.length","width","within","x"],"classes/Loom.html":["0","1","10","2","2d","accordingli","alway","andd","arraw","array","array>):loomcoord","assign","associ","avail","be","boolean","booolean","cell","check","class","clear","clearalldata","clearalldata(warp","cleartieupcol","cleartieupcol(i","cleartieuprow","cleartieuprow(i","cm","col.find((el","column","come","condens","config","config.fram","config.treadl","const","construct","constructor","constructor(typ","count","current","d","data","datatyp","defin","delet","densiti","describ","descript","draft","drawdown","drawdown.map(el","drawdown[ndx.i","element","element.isup","element[j","element[ndx.j","empti","end","epi","exist","export","fabric","fals","file","first","fom","for(var","found","frame","frame_map","frames/treadl","getaffecteddrawdownpoint","getaffecteddrawdownpoints(obj","getconfig","getconfig(ndx","getconfig(ndx:interlac","getemptyfram","getemptytreadl","given","handl","hastieup","hastieup(ndx","i_pattern","i_pattern[ndx].isup","id","idx","if(!found","if(!this.inthreadingrange({i:ndx.i","if(!this.intreadlingrange({i:ndx.i","if(config.fram","if(fram","if(i","if(idx","if(ndx.val","if(status[old_index","if(this.num_fram","if(this.num_treadl","if(this.threading[ndx.j","if(this.treadling[ndx.i","if(treadl","if(typ","import","index","indic","info","informatino","interlac","interlacementv","interlacementval):array","inthreadingrang","inthreadingrange(ndx","intieuprang","intieuprange(ndx","intreadlingrang","intreadlingrange(ndx","isinfram","isinframe(warp","isintreadl","isintreadle(weft","j","j:j","j:ndx.j","j_pattern","j_pattern[ndx].isup","jacquard","larger","list","load","loadnew","loadnew(typ","locat","loom","loomcoord","loomupd","made","map","map[i","match","max","method","min","min:numb","min_fram","min_treadl","minimum","ndx","ndx.i","ndx.j","ndx.val","need","new","noth","null","num","num:numb","num_fram","num_treadl","number","object","old","old_index","order","out","param","paramet","per","pixel","place","properti","push","question","rang","read","reorient","repres","requir","reset","resetframemap","resetframemapping(fram","resetthread","resetthreading(warp","resettieup","resettieup(fram","resettreadl","resettreadling(weft","respons","result","return","row","same","scan","send","set","setminfram","setminframes(fram","setminframes(frames:numb","setmintreadl","setmintreadles(treadl","setmintreadles(treadles:numb","si","size","sourc","src/app/core/model/loom.t","statu","store","string","struct","therad","this.cleartieuprow(i","this.getemptyfram","this.getemptytreadl","this.min_fram","this.min_treadl","this.num_fram","this.num_treadl","this.resetframemapping(fram","this.resetframemapping(this.num_fram","this.resetthreading(warp","this.resettieup(fram","this.resettreadling(weft","this.threading[j","this.threading[ndx.j","this.tieup.length","this.tieup.splice(i","this.tieup[0].length","this.tieup[i][j","this.tieup[ndx.i][ndx.j","this.treadling[i","this.treadling[j","this.treadling[ndx.i","this.typ","this.updateconfig(this.getconfig(ndx","this.updatenumframesfromthread","this.updatenumtreadlesfromtreadl","this.updatetieups","thread","threading/treadl","threadl","through","tieup","took","total","treadl","treadles:numb","trim","true","true/fals","type","type:string):boolean","undefin","uniqu","unit","unset","unus","unusu","updat","updateconfig","updateconfig(config","updateconfig(config:loomcoords):loomupd","updatefromdrawdown","updatefromdrawdown(ndx","updatenumframesfromthread","updatenumtreadlesfromtreadl","updates.push({i:fram","updates.push({i:ndx.i","updates.tieup[i][j","updates:array","updates:loomupd","updatethread","updatethreading(ndx","updatetieup","updatetieup(ndx","updatetieups","updatetreadl","updatetreadling(ndx","updateunus","updateunused(struct","upon","us","user","util","utilinst","utilinstance.countoccurrences(this.thread","utilinstance.countoccurrences(this.treadl","val","val:fals","val:ndx.val","val:tru","valu","var","view","void","warm","warp","weav","weft","whether","width","within","x","zero"],"classes/Pattern.html":["0","1","2d","array","boolean","cell","class","constructor","constructor(obj","convert","definit","descript","export","fals","favorit","file","for(let","height","id","if(obj.pattern","if(this.height","import","info","match","method","name","number","obj.favorit","obj.id","obj.nam","obj.pattern.length","obj.pattern[0].length","object","paramet","pattern","pattern.length","pattern[0].length","properti","replac","result","return","setpattern","setpattern(pattern","sourc","src/app/core/model/pattern.t","string","take","this.favorit","this.height","this.id","this.nam","this.pattern","this.width","togglefavorit","undefin","unnam","void","width"],"classes/Point.html":["angular/cor","angular/material/dialog","app","class","close","compon","connect","connection.modal.html","connection.modal.scss","connectionmod","constructor(priv","data","dialogref","end","export","file","implement","import","info","inject","inject(mat_dialog_data","mat_dialog_data","match","matdialogref","new","ngoninit","number","oninit","point","privat","properti","result","save","selector","shuttl","shuttleid","sourc","src/app/weaver/modal/connection/connection.modal.t","start","styleurl","templateurl","this.connection.end","this.connection.start","this.data.shuttl","this.dialogref.clos","this.dialogref.close(this.connect","this.shuttl","x","y"],"classes/Render.html":["0","1","10","100","12","15","2","20","25","30","35","4","40","45","5","50","60","7","75","8","80","85","90","base","base.max","base.min","base_cel","base_clear_i","base_clear_x","base_fill_i","base_fill_x","boolean","class","console.log(\"i","console.log(\"interp","constructor","constructor(view_fram","current_view","definit","descript","diff","diff/50","differ","expand","export","file","getcelldim","getcelldims(typ","getcurrentview","getinterpolationdim","getinterpolationdims(typ","getoffset","getoffset(typ","gettextinterv","getzoom","h","if(r1","if(this.zoom","if(typ","info","interpol","interpolate(bas","isfront","isyarnbasedview","margin_clear_i","margin_clear_x","margin_fill_i","margin_fill_x","match","max","method","min","numb","number","object","offset_i","offset_x","pattern","privat","properti","r1","render","result","return","select","select_i","select_x","setcurrentview","setcurrentview(view","setcurrentview(view:str","setfront","setfront(valu","setfront(value:boolean","setzoom","setzoom(z","showingfram","showingframes():boolean","sourc","src/app/weaver/model/render.t","string","this.base_cel","this.base_cell.h.max","this.base_cell.h.min","this.base_cell.margin_clear_x.min","this.base_cell.margin_clear_y.min","this.base_cell.margin_fill_x.min","this.base_cell.margin_fill_y.min","this.base_cell.w.max","this.base_cell.w.min","this.current_view","this.getoffset(type+\"_i","this.getoffset(type+\"_x","this.interpolate({max","this.select","this.select.offset_x.min","this.select.offset_y.min","this.view_fram","this.view_front","this.zoom","this.zoom/100","toggleviewfram","true","valu","var","view","view_fram","view_front","visual","void","w","x","x*2","y","y*2","yarn","z","zoom","zoomin","zoomout"],"classes/Selection.html":["0","1","class","core/model/datatyp","definit","descript","end","export","file","getleft","gettarget","gettargetid","gettop","hasselect","height","if(this.target","if(this.target.id","import","info","interlac","match","materi","math.abs(this.start.j","math.abs(this.start.si","math.min(this.start.j","math.min(this.start.si","method","number","object","properti","result","return","select","setparamet","settarget","settarget(t","sourc","src/app/weaver/model/selection.t","start","system","t","target","this.end.j","this.end.si","this.height","this.target","this.target.id","this.width","undefin","unsetparamet","void","warp","weft","width"],"classes/Shape.html":["0","150","2d","array","array'","between","boolean","bound","bounds.height","bounds.topleft.i","bounds.width","bounds:bound","canva","cell","center","check","class","col","console.log(i","const","constructor","constructor(shape_canva","context","context.getimagedata(bounds.topleft.x","convert","core/model/cel","core/model/datatyp","current","data","document.writ","download","draft","each","element","export","file","fill","for(let","function","getdraft","getimagedata","html","htmlcanvasel","if(p_grn","imagedata","img_data","import","info","j","link","manag","margin","match","math.floor(bounds.width/scal","method","number","number):array","offer","param","paramet","properti","read","region","repres","resampl","resample(row","rescal","result","return","row","scale","scale:numb","set","shape","shape_canva","shape_canvas.getcontext('2d","shape_canvas.todataurl(\"image/png","size","sourc","src/app/mixer/model/shape.t","take","this.draft","this.img_data","this.resample(math.floor(bounds.height/scal","this.scal","this.scale/2","translat","us","void","within"],"classes/Shuttle.html":["0","1","base","boolean","class","color","constructor","constructor(shuttledict","default","definit","descript","dim","endlabel","export","fals","file","getcolor","getid","getnam","getthick","gettyp","id","if(this.typ","imag","index","info","inherti","insert","left","list","match","materi","method","n","name","note","null","number","object.a","percentag","properti","result","return","right","setcolor","setcolor(color","setid","setid(id","setthick","setthickness(n","settyp","settype(typ","setvis","setvisible(vis","setvisible(visible:boolean","shuttl","shuttledict","sourc","src/app/core/model/shuttle.t","startlabel","string","thick","this.color","this.color=\"#666666","this.endlabel","this.id","this.imag","this.insert","this.nam","this.not","this.startlabel","this.thick","this.thickness=100","this.typ","this.updatevariables(shuttledict","this.vis","true","type","undefin","updatevari","updatevariables(undefin","updatevariables({id","visibl","void"],"classes/System.html":["1","ad","between","bool","boolean","class","conduct","constructor","constructor(systemdict","default","definit","describ","descript","export","file","getchar","id","info","isvis","match","method","mutip","name","note","null","number","object.a","overshot","properti","relationship","result","return","row","setid","setid(id","setvis","setvisible(bool","sourc","src/app/core/model/system.t","string","string.fromcharcode(97","structur","system","systemdict","this.id","this.nam","this.not","this.updatevariables(systemdict","this.vis","true","updatevari","updatevariables(undefin","updatevariables({id","us","visibl","void","weft"],"classes/Timeline.html":["0","1","10","1000","10000","activ","active_id","add","addhistoryst","addhistorystate(draft","addhistorystate(draft:draft):void","alway","array","avail","big","boolean","call","class","clonedeep","clonedeep(draft","console.log(\"restor","console.log('restor","constructor","default","definit","descript","draft","element","end","eras","export","fals","file","front","histori","historyst","hit","if(draft.warps*draft.weft","if(len","if(thejson.length","if(this.active_id","if(this.timeline.length","import","info","interfac","json.stringify(draft","lag","len","lodash","logstat","logstate(draft","look","match","math.floor(date.now","max_siz","method","new","now","null","number","object","posit","properti","public","push","recent","redo","redo_dis","restor","restorenexthistoryst","restoreprevioushistoryst","restoreprevioushistorystate():draft","result","return","row","sourc","src/app/core/model/timeline.t","state","thejson","this.active_id","this.logstate(draft","this.max_s","this.redo_dis","this.timelin","this.timeline.length","this.timeline.pop","this.timeline.splice(0","this.timeline.unshift(st","this.timeline[this.active_id].draft","this.undo_dis","timelin","timestamp","true","undo","undo_dis","until","valu","var","void","you'v"],"classes/Upload.html":["class","constructor","constructor(fil","constructor(file:fil","createdat","date","export","file","file:fil","info","key","match","name","name:str","new","number","progress","progress:numb","properti","result","sourc","src/app/core/uploads/upload.t","string","this.fil","upload","url","url:str"],"classes/Util.html":["0","1","area","arr","arr.reduce((a","array","array1.length","array2","array2.length","array[0","array[i","bitstr","boolean","class","collect","context","count","counter","countoccurr","counton","countones(array","descript","equal","equals(array1","fals","file","findsmallestelmtbiggerthan","findsmallestelmtbiggerthan(n","findsmallestgap","findsmallestgap(array","function","give","hepl","info","input","mani","match","max","maxofpositivelist","maxofpositivelist(array","method","min","minelmtbiggerthann","minelmtbiggerthann[i","minoflist","minoflist(array","n","number","occur","on","properti","public","result","return","smallestelmtbiggerthan","sourc","src/app/core/model/util.t","this.findsmallestelmtbiggerthan(min,array","this.maxofpositivelist(array","this.minoflist(array","tool","true","two","util","v","val","valu","var","void","within","xor","xor(array1"],"interfaces/Bounds.html":["0","absolut","action","and/or","array","assign","be","befor","boolean","bound","cell","column","column/warp","commun","const","context","coordin","correspond","current","de","densityunit","describ","descript","draft","draft.visiblerow","draft.visiblerows[si","draw","drawdown","exampl","export","far","file","frame","given","height","hide","icon","import","index","info","interfac","interlac","interlacementv","j","left","locat","loom","loomcoord","loomtyp","loomupd","match","materialtyp","menu","mous","ndx","number","param","place","point","posit","properti","rectanbl","rectangl","referenc","repres","respons","result","return","row","row/weft","screen","sett","si","sourc","src/app/core/model/datatypes.t","stage","string","thread","tieup","toolmod","top","topleft","treadl","treadle:numb","type","updat","us","val","valu","view","viewmod","viewvalu","well","width","within","x","x,i","y"],"interfaces/DensityUnits.html":["0","absolut","action","and/or","array","assign","be","befor","boolean","bound","cell","column","column/warp","commun","const","context","coordin","correspond","current","de","densityunit","describ","draft","draft.visiblerow","draft.visiblerows[si","draw","drawdown","exampl","export","far","file","frame","given","height","hide","icon","import","index","info","interfac","interlac","interlacementv","j","left","locat","loom","loomcoord","loomtyp","loomupd","match","materialtyp","menu","mous","ndx","number","param","place","point","posit","properti","rectanbl","rectangl","referenc","repres","respons","result","return","row","row/weft","screen","sett","si","sourc","src/app/core/model/datatypes.t","stage","string","thread","tieup","toolmod","top","topleft","treadl","treadle:numb","type","updat","us","val","valu","view","viewmod","viewvalu","well","width","within","x","x,i","y"],"interfaces/DesignActions.html":["0","1","100","10cm","2","80","absolut","ada","adjust","alt","anglar","angular","angular/cdk/overlay","angular/cor","angular/material/dialog","app","area","array","arrow","assign","base","below","bitmap","bmp","boolean","break","brush","c","call","canva","care","case","cell","cell(b","chang","changedetectionstrategi","check","circuit","class","clear","clearlocalstorag","click","clone","clonecol(i","clonedeep","clonerow(i","cm","collapsed:boolean","come","compon","conduct","connect","connectionmod","consol","console.log","console.log(","console.log(\"design","console.log(\"i","console.log(\"loc","console.log(\"next","console.log(\"on","console.log(\"prev","console.log(\"reinit","console.log(\"upd","console.log(\"zoom","console.log(d","console.log(i","console.log(result","const","constructor","constructor(priv","control","copi","core/modal/init/init.mod","core/model/cel","core/model/datatyp","core/model/draft","core/model/pattern","core/model/timelin","core/provider/pattern.servic","creat","creatematerial(","createshuttle(","createwarpsystem(","createweftsystem(","current","d","d_log","d_log[0].timestamp","d_log[d].timestamp","data","default_patterns:ani","delet","deletecol(i","deleterow(i","delt","density_unit","densityunit","descript","design","design_act","design_mod","designact","designmod","dialog","dialogref","dialogref.afterclosed().subscribe(result","diff","dims:ani","direct","directives/weave.direct","disabl","down","downloadlocalstorag","draft","draft(json.parse(d","draft({weft","draftelement:ani","drawdown","e","e.bitmap","e.epi","e.id","e.loomtyp","e.nam","e.pattern","e.typ","e.unit","e.warp","e.weft","elementref","empti","enableprodmod","end","epichange(e:ani","eras","event","export","extend","fa","fals","false,true],[false,tru","far","faster","file","fill","flip","flip_i","flip_x","for(var","frame","framechange(e:ani","front","function","h","heddl","height","hideshuttle(e:ani","hidewarpsystem(e:ani","hideweftsystem(e:ani","horizont","hostlisten","hostlistener('window:keydown.","hostlistener('window:keydown.c","hostlistener('window:keydown.d","hostlistener('window:keydown.p","hostlistener('window:keydown.shift.o","hostlistener('window:keydown.shift.p","hostlistener('window:keydown.x","icon","id","if(d","if(d_log[d].timestamp","if(e.sourc","if(e.typ","if(e.warp","if(result","if(this.draft.loom.typ","if(this.render.isyarnbasedview","if(this.render.showingfram","if(this.render.view_fram","implement","import","inch","index","info","initi","initmod","insert","insertcol(i","insertrow(i:numb","interfac","invert","jacquard","jpg","key","keyeventcopy(","keyeventerase(","keyeventinvert(","keyeventpaste(","keyeventpoint(","keyeventselect(","keyeventzoomin(","keyeventzoomout(","label","labelmod","left","list","load","loadrawlog","local","localstorag","localstorage.length","localstorage.removeitem(x","lodash","loom","loom:tru","loomchange(e:ani","loomtyp","mask","match","matdialog","matdialogconfig","materi","material_typ","materialtyp","mechan","modal","modal/connection/connection.mod","modal/label/label.mod","mode","modul","name","name:'toggl","new","newest_stamp","ngafterviewinit","ngondestroy","ngoninit","non","noteschanged(e:ani","now","null","object","oldest_stamp","onclear(b:boolean","oncopi","ondesignmodechange(e:ani","ondestroy","onfill(","oninit","onmask(","onpaste(","onsave(","onscrol","onwindowscroll(data","open","openconnectiondialog","openlabeldialog","oper","origin","out","over","p","p:pattern","param","past","pattern","pattern(res.body[i","pattern({width","patternservic","per","perform","pic","point","popup","press","print(","privat","properti","provid","ps","public","redo","refer","reflect","region","reinit(result","render","render(fals","renderchange(","res.bodi","resist","result","return","row","rxj","rxjs/oper","s","save","screen","scroll","scrolldispatch","scrollingsubscript","select","selector","servic","set","shaft","shift","shift+o","shift+p","shift_left","shift_up","showshuttle(e:ani","showwarpsystem(e:ani","showweftsystem(e:ani","shut","shutf","shuttl","shuttle,system","shuttle:numb","shuttlecolorchang","size","slider","sourc","squar","src/app/weaver/weaver.component.t","state","static","stitch","storag","string","styleurl","subject","subscrib","subscribe((data","support","switch(this.weaveref.selection.target.id","sy","system","system:numb","takeuntil","tell","templateurl","thicknesschange(e:ani","thing","this.bitmap","this.collaps","this.copi","this.default_pattern","this.default_patterns.push(new","this.density_unit","this.design_mod","this.design_mode.id","this.design_mode.nam","this.dialog.open(connectionmod","this.dialog.open(initmod","this.dialog.open(labelmod","this.draft","this.draft.addmaterial(e.materi","this.draft.addshuttle(e.shuttl","this.draft.addwarpsystem(e.system","this.draft.clonecol(i","this.draft.clonerow(i","this.draft.computeyarnpath","this.draft.connections.push(result","this.draft.deletecol(i","this.draft.deleterow(i","this.draft.epi","this.draft.fillarea(this.weaveref.select","this.draft.insertcol(i","this.draft.insertrow(i","this.draft.loom.setminframes(e.valu","this.draft.loom.setmintreadles(e.valu","this.draft.loom.typ","this.draft.nam","this.draft.not","this.draft.pattern","this.draft.patterns[e.id","this.draft.patterns[e.id].pattern","this.draft.recomputeloom","this.draft.recomputewidth","this.draft.reload(d","this.draft.reload(result","this.draft.shuttl","this.draft.unit","this.draft.updateconnections(i","this.draft.updatevis","this.draft.updatewarpshuttlesfrompattern(pattern","this.draft.updatewarpsystemsfrompattern(pattern","this.draft.updateweftshuttlesfrompattern(pattern","this.draft.updateweftsystemsfrompattern(pattern","this.draft.warp","this.draft.weft","this.getdraftfromlocalstor","this.loomtyp","this.onaddrow.emit","this.oncopi","this.onpast","this.onwindowscroll(data","this.pattern","this.ps.getpatterns().subscribe((r","this.redraw","this.reinit(result","this.render.setcurrentview(valu","this.render.setfront(e.check","this.render.setzoom(e.valu","this.render.toggleviewfram","this.render.view_fram","this.render.zoomin","this.render.zoomout","this.scrol","this.scrollingsubscript","this.timeline.addhistorystate(this.draft","this.timeline.restorenexthistoryst","this.timeline.restoreprevioushistoryst","this.unsubscribe$.complet","this.unsubscribe$.next","this.weaveref.copi","this.weaveref.copyarea","this.weaveref.maskarea(p","this.weaveref.onnewdraftload","this.weaveref.recomputeloom","this.weaveref.redraw","this.weaveref.redraw({drawdown","this.weaveref.redraw({drawdown:tru","this.weaveref.redraw({loom","this.weaveref.redraw({loom:tru","this.weaveref.redrawloom","this.weaveref.rescal","this.weaveref.saveada(e.nam","this.weaveref.savebmp(e.nam","this.weaveref.saveprintabledraft(e.nam","this.weaveref.savewif(e.nam","this.weaveref.unsetselect","those","timelin","toggl","togglecollaps","toggleviewfram","total","treadlechange(e:ani","true","type","undefin","undo","unitchange(e:ani","unsubscrib","up","updat","updatepatterns(","updateselection(e:ani","updatewarpshuttles(pattern","updatewarpsystems(pattern","updateweftshuttles(pattern","updateweftsystems(pattern","us","v","valu","var","variabl","version","vertic","view","view_mod","viewchange(valu","viewchild","viewchild('bitmapimag","viewchild(weavedirect","viewmod","viewvalu","visual","void","want","warp","warp_materi","warp_materials:tru","warp_system","warp_systems:tru","warpnumchange(e:ani","we'll","weav","weavecompon","weavedirect","weaver","weaver.component.html","weaver.component.scss","weaver/model/rend","weavercompon","weaveref","weft","weft_materi","weft_materials:tru","weft_system","weft_systems:tru","wif","within","write","x","yarn","zoom"],"interfaces/DesignMode.html":["1","alt","angular/cor","array","arrow","ask","associ","boolean","both","check","child","child.select","children","circl","class","clear","clearselect","collect","compon","console.log(\"select","const","constructor","coorespond","correspond","creat","current","deep","deisgnmod","describ","design","designmod","designmodesservic","draw","el.valu","elementat","enabl","enable_ink","enabled:boolean","etc","expand","export","fa","fals","far","file","fill","fill_circl","fill_rect","found","found:designmod","free","freehand","function","getmode(nam","getselected():array","icon","if(child.valu","if(mode.valu","import","info","inject","interfac","isselected(name:string):boolean","line","look","made","match","merg","mode","mode.children.foreach(child","mode.enable_ink","mode.select","modes.foreach(mod","more","move","name","nest","noth","null","object","outlin","param","paramet","parent","pen","polygon","previou","properti","providedin","rectangl","result","retreiv","return","root","rxjs/oper","select","select(nam","selected:fals","selectedhasinkenabled():boolean","set","shape","shapes:array","slash","sourc","specifi","squar","src/app/mixer/provider/designmodes.service.t","string","stroke_circl","stroke_rect","this.clearselect","this.getselect","this.mod","this.modes.foreach","this.select","this.select('draw","this.selected.find(el","this.selected.foreach","this.selected.push(child","this.selected.push(mod","track","true","type","undefin","user","valu","viewvalu","we'r","whether","work"],"interfaces/DesignModes.html":["0","1","100","10cm","2","80","absolut","ada","adjust","alt","anglar","angular","angular/cdk/overlay","angular/cor","angular/material/dialog","app","area","array","arrow","assign","base","below","bitmap","bmp","boolean","break","brush","c","call","canva","care","case","cell","cell(b","chang","changedetectionstrategi","check","circuit","class","clear","clearlocalstorag","click","clone","clonecol(i","clonedeep","clonerow(i","cm","collapsed:boolean","come","compon","conduct","connect","connectionmod","consol","console.log","console.log(","console.log(\"design","console.log(\"i","console.log(\"loc","console.log(\"next","console.log(\"on","console.log(\"prev","console.log(\"reinit","console.log(\"upd","console.log(\"zoom","console.log(d","console.log(i","console.log(result","const","constructor","constructor(priv","control","copi","core/modal/init/init.mod","core/model/cel","core/model/datatyp","core/model/draft","core/model/pattern","core/model/timelin","core/provider/pattern.servic","creat","creatematerial(","createshuttle(","createwarpsystem(","createweftsystem(","current","d","d_log","d_log[0].timestamp","d_log[d].timestamp","data","default_patterns:ani","delet","deletecol(i","deleterow(i","delt","density_unit","densityunit","design","design_act","design_mod","designact","designmod","dialog","dialogref","dialogref.afterclosed().subscribe(result","diff","dims:ani","direct","directives/weave.direct","disabl","down","downloadlocalstorag","draft","draft(json.parse(d","draft({weft","draftelement:ani","drawdown","e","e.bitmap","e.epi","e.id","e.loomtyp","e.nam","e.pattern","e.typ","e.unit","e.warp","e.weft","elementref","empti","enableprodmod","end","epichange(e:ani","eras","event","export","extend","fa","fals","false,true],[false,tru","far","faster","file","fill","flip","flip_i","flip_x","for(var","frame","framechange(e:ani","front","function","h","heddl","height","hideshuttle(e:ani","hidewarpsystem(e:ani","hideweftsystem(e:ani","horizont","hostlisten","hostlistener('window:keydown.","hostlistener('window:keydown.c","hostlistener('window:keydown.d","hostlistener('window:keydown.p","hostlistener('window:keydown.shift.o","hostlistener('window:keydown.shift.p","hostlistener('window:keydown.x","icon","id","if(d","if(d_log[d].timestamp","if(e.sourc","if(e.typ","if(e.warp","if(result","if(this.draft.loom.typ","if(this.render.isyarnbasedview","if(this.render.showingfram","if(this.render.view_fram","implement","import","inch","index","info","initi","initmod","insert","insertcol(i","insertrow(i:numb","interfac","invert","jacquard","jpg","key","keyeventcopy(","keyeventerase(","keyeventinvert(","keyeventpaste(","keyeventpoint(","keyeventselect(","keyeventzoomin(","keyeventzoomout(","label","labelmod","left","list","load","loadrawlog","local","localstorag","localstorage.length","localstorage.removeitem(x","lodash","loom","loom:tru","loomchange(e:ani","loomtyp","mask","match","matdialog","matdialogconfig","materi","material_typ","materialtyp","mechan","modal","modal/connection/connection.mod","modal/label/label.mod","mode","modul","name","name:'toggl","new","newest_stamp","ngafterviewinit","ngondestroy","ngoninit","non","noteschanged(e:ani","now","null","object","oldest_stamp","onclear(b:boolean","oncopi","ondesignmodechange(e:ani","ondestroy","onfill(","oninit","onmask(","onpaste(","onsave(","onscrol","onwindowscroll(data","open","openconnectiondialog","openlabeldialog","oper","origin","out","over","p","p:pattern","param","past","pattern","pattern(res.body[i","pattern({width","patternservic","per","perform","pic","point","popup","press","print(","privat","properti","provid","ps","public","redo","refer","reflect","region","reinit(result","render","render(fals","renderchange(","res.bodi","resist","result","return","row","rxj","rxjs/oper","s","save","screen","scroll","scrolldispatch","scrollingsubscript","select","selector","servic","set","shaft","shift","shift+o","shift+p","shift_left","shift_up","showshuttle(e:ani","showwarpsystem(e:ani","showweftsystem(e:ani","shut","shutf","shuttl","shuttle,system","shuttle:numb","shuttlecolorchang","size","slider","sourc","squar","src/app/weaver/weaver.component.t","state","static","stitch","storag","string","styleurl","subject","subscrib","subscribe((data","support","switch(this.weaveref.selection.target.id","sy","system","system:numb","takeuntil","tell","templateurl","thicknesschange(e:ani","thing","this.bitmap","this.collaps","this.copi","this.default_pattern","this.default_patterns.push(new","this.density_unit","this.design_mod","this.design_mode.id","this.design_mode.nam","this.dialog.open(connectionmod","this.dialog.open(initmod","this.dialog.open(labelmod","this.draft","this.draft.addmaterial(e.materi","this.draft.addshuttle(e.shuttl","this.draft.addwarpsystem(e.system","this.draft.clonecol(i","this.draft.clonerow(i","this.draft.computeyarnpath","this.draft.connections.push(result","this.draft.deletecol(i","this.draft.deleterow(i","this.draft.epi","this.draft.fillarea(this.weaveref.select","this.draft.insertcol(i","this.draft.insertrow(i","this.draft.loom.setminframes(e.valu","this.draft.loom.setmintreadles(e.valu","this.draft.loom.typ","this.draft.nam","this.draft.not","this.draft.pattern","this.draft.patterns[e.id","this.draft.patterns[e.id].pattern","this.draft.recomputeloom","this.draft.recomputewidth","this.draft.reload(d","this.draft.reload(result","this.draft.shuttl","this.draft.unit","this.draft.updateconnections(i","this.draft.updatevis","this.draft.updatewarpshuttlesfrompattern(pattern","this.draft.updatewarpsystemsfrompattern(pattern","this.draft.updateweftshuttlesfrompattern(pattern","this.draft.updateweftsystemsfrompattern(pattern","this.draft.warp","this.draft.weft","this.getdraftfromlocalstor","this.loomtyp","this.onaddrow.emit","this.oncopi","this.onpast","this.onwindowscroll(data","this.pattern","this.ps.getpatterns().subscribe((r","this.redraw","this.reinit(result","this.render.setcurrentview(valu","this.render.setfront(e.check","this.render.setzoom(e.valu","this.render.toggleviewfram","this.render.view_fram","this.render.zoomin","this.render.zoomout","this.scrol","this.scrollingsubscript","this.timeline.addhistorystate(this.draft","this.timeline.restorenexthistoryst","this.timeline.restoreprevioushistoryst","this.unsubscribe$.complet","this.unsubscribe$.next","this.weaveref.copi","this.weaveref.copyarea","this.weaveref.maskarea(p","this.weaveref.onnewdraftload","this.weaveref.recomputeloom","this.weaveref.redraw","this.weaveref.redraw({drawdown","this.weaveref.redraw({drawdown:tru","this.weaveref.redraw({loom","this.weaveref.redraw({loom:tru","this.weaveref.redrawloom","this.weaveref.rescal","this.weaveref.saveada(e.nam","this.weaveref.savebmp(e.nam","this.weaveref.saveprintabledraft(e.nam","this.weaveref.savewif(e.nam","this.weaveref.unsetselect","those","timelin","toggl","togglecollaps","toggleviewfram","total","treadlechange(e:ani","true","type","undefin","undo","unitchange(e:ani","unsubscrib","up","updat","updatepatterns(","updateselection(e:ani","updatewarpshuttles(pattern","updatewarpsystems(pattern","updateweftshuttles(pattern","updateweftsystems(pattern","us","v","valu","var","variabl","version","vertic","view","view_mod","viewchange(valu","viewchild","viewchild('bitmapimag","viewchild(weavedirect","viewmod","viewvalu","visual","void","want","warp","warp_materi","warp_materials:tru","warp_system","warp_systems:tru","warpnumchange(e:ani","we'll","weav","weavecompon","weavedirect","weaver","weaver.component.html","weaver.component.scss","weaver/model/rend","weavercompon","weaveref","weft","weft_materi","weft_materials:tru","weft_system","weft_systems:tru","wif","within","write","x","yarn","zoom"],"interfaces/DraftInterface.html":["0","1","10","2","3","333333","4","61c97d","8","_","acc","acc.concat([idx","active_cel","ad","adacad","anoth","area","array","associ","assum","automat","bar","base","belong","between","boolean","bottom","bottom_hasvalu","boundari","c","c.end.i","c.start.i","call","came","case","cell","cell.isset","chang","class","col","collect","colmaterialmap","color","colshuttlemap","colshuttlepattern","colsystemmap","colsystempattern","conduct","conflict","connect","console.log(\"fil","console.log(\"row","console.log(\"row/last.row","console.log(select","const","constructor({...param","contain","creat","cycl","datatyp","date.now","defin","definit","delet","delete_bottom","delete_top","deletenrowsfromback(n","deletenrowsfromfront(n","descript","design","doesn't","draft","draft_j","draftinterfac","draw","each","east","end","epi","export","fals","file","fill","fill_pattern","fillarea","find","for(i","for(let","for(var","format","frame","futur","getcolor(index","getcolorcol(index","getwarpsystemcode(index","getweftsystemcode(index","go","h","happen","haseastneighbor(i:numb","id","idx","if(j","if(moving_left","if(next_path.row","if(overs.length","if(params.loom","if(params.loom.thread","if(params.loom.tieup","if(params.loom.treadl","if(params.shuttl","if(params.warp_system","if(rowmap[ndx","if(selection.target.id","if(start","if(this.haseastneighbor(i,j","if(this.haseastneighbor(ndx,j","if(this.haswestneighbor(ndx,j","if(this.pattern[i][ndx].isup","if(this.pattern[ndx][j].isup","if(this.rowshuttlemapping[ndx","if(updates[u].i","ii","implement","import","index","info","insert","insert:fals","insertrows(amount","intefac","interfac","interlac","isup(i:numb","j","j+1","j:number","k","k%2","label","last.ndx","last.ndx+1","last.row","list","load","lodash","logic","looki","loom","loom('fram","loom(params.loom.typ","make","mani","map","mask","match","mateial","materi","math.ceil(selection.height","math.ceil(selection.width","math.floor(math.random()*16777215).tostring(16","math.max(max_ndx","math.min(max","math.min(min_ndx","math.min(selection.start.j","math.min(selection.start.si","max_ndx","max_ndx+1","max_ndx:numb","min_ndx","min_ndx:numb","more","moving_left:boolean","n","n,n","n:number","name","ndx","new","next","next_max_ndx","next_max_ndx:numb","next_min_ndx","next_min_ndx:numb","next_path","next_path.overs[0","next_path.overs[next_path.overs.length","north","note","noth","now","number","object","offset","on","over","overs.concat([idx","overs.length","overs.pop","overs.shift","param","params.connect","params.epi","params.label","params.loom.num_fram","params.loom.num_treadl","params.loom.thread","params.loom.tieup","params.loom.treadl","params.mask","params.nam","params.not","params.pattern","params.shuttl","params.unit","params.visiblerow","params.warp","params.warp_system","params.weft","path","path[k].ov","pattern","pattern(patterns[i","pattern(single_pattern","pattern.height","pattern.length","pattern.width","pattern[0].length","patterns[i","point","properti","pt","pts.push(format","pts.push(new","public","push","randomcolor","refer","remov","render","repopul","requir","result","return","revers","row","row.filter(cel","row/col","row/column","rowmap","rowmap.push(active_cells.length","rowmaterialmap","rowshuttlemap","rowshuttlepattern","rowsystemmap","rowsystempattern","s","s0","s1","s2","s3","same","save","scan","screen","screen_i","sd","sd.push(","sd.push(si","search","see","seem","select","selection.end.j","selection.end.si","sent","set","setnorthneighbors(i:numb","setwestneighbors(i:numb","shoudl","shown","shuttl","shuttle(shuttles[i","shuttle({id","shuttle.color","shuttle.id","shuttle.insert","shuttle_id","si","singl","smaller","someth","sourc","specif","splicepatterncol(i","src/app/core/model/draft.t","store","string","string.fromcharcode(97","subpattern","switch","sy","system","system(systems[i","system({id","system.id","thickness:50","this.colshuttlemapping[index","this.colshuttlepattern","this.colsystemmapping[index","this.colsystempattern","this.connect","this.epi","this.getnextpath(path","this.id","this.label","this.loom","this.loom.getaffecteddrawdownpoints({warp","this.loom.num_treadl","this.loom.thread","this.loom.tieup","this.loom.treadl","this.loom.treadling.splic","this.loom.treadling.splice(0,n","this.makerandompattern(this.loom.num_fram","this.mask","this.mask.splice(i","this.mask.splice(idx,0,data[i","this.nam","this.not","this.pattern","this.pattern.foreach(row","this.pattern.splic","this.pattern.splice(0","this.pattern[i][ndx].seteast","this.pattern[i][ndx].unseteast","this.recalculatedraft(params.loom.tieup","this.rowshuttlemapping.splic","this.rowshuttlemapping.splice(0","this.rowshuttlemapping.splice(idx,0,shuttle.id","this.rowshuttlemapping[row","this.rowshuttlepattern","this.rowsystemmapping.splic","this.rowsystemmapping.splice(0","this.rowsystemmapping[row","this.rowsystempattern","this.seteast(row","this.setnorth(row","this.setnorthsouth(j","this.setsouth(row","this.setsouth(row,max_ndx+1","this.setwest(row","this.shuttl","this.shuttles[col","this.shuttles[id","this.unit","this.updatevis","this.visiblerow","this.visiblerows[index","this.warp","this.warp_system","this.warp_systems[col","this.weft","this.weft_systems[id","thread","through","to_delet","top","top_hasvalu","track","trimunsetcol","true","turn","type","u","undefin","uniqu","unit","unset","unsetwestneighbors(i:numb","until","updat","updatedraftfromthreading(upd","updates[u].i","updates[u].j","update{i","upward","us","user","v","v.isup","val","val:ani","var","visibl","visible:tru","visiblerow","void","w","w,h","warp","warp_system","weaver/model/select","weft","weft_system","west","western","while(this.warp_systems.length","width","within"],"interfaces/HistoryState.html":["0","1","10","1000","10000","activ","active_id","add","addhistorystate(draft:draft):void","alway","array","avail","big","boolean","call","class","clonedeep","clonedeep(draft","console.log(\"restor","console.log('restor","constructor","definit","draft","element","end","eras","export","fals","file","front","histori","historyst","hit","if(draft.warps*draft.weft","if(len","if(thejson.length","if(this.active_id","if(this.timeline.length","import","info","interfac","json.stringify(draft","lag","len","lodash","logstate(draft","look","match","math.floor(date.now","max_siz","new","now","null","object","posit","properti","public","push","recent","redo","redo_dis","restor","restorenexthistoryst","restoreprevioushistorystate():draft","result","return","row","sourc","src/app/core/model/timeline.t","state","thejson","this.active_id","this.logstate(draft","this.max_s","this.redo_dis","this.timelin","this.timeline.length","this.timeline.pop","this.timeline.splice(0","this.timeline.unshift(st","this.timeline[this.active_id].draft","this.undo_dis","timelin","timestamp","true","type","undo","undo_dis","until","var","you'v"],"interfaces/Ink.html":["adjust","angular/cor","area","array","ask","associ","atop","black","boolean","bottom","cell","check","class","clear","clearselect","compar","const","constructor","coorespond","copi","correspond","current","describ","down","draft","draw","dx","equal","eras","export","fa","fals","far","file","found","function","getink(nam","getinks():array","getselected():str","heddl","icon","if(ink.valu","import","info","inject","ink","ink.select","inkservic","inlay","interfac","isselected(name:string):boolean","look","made","mask","match","matter","mode","mode.uses_mask","mode:ink","name","neq","noth","null","overlay","param","paramet","pattern","place","plu","previou","privat","properti","providedin","remov","result","retreiv","return","return(nam","reveal","revers","root","select","select(nam","selectedhasmask():boolean","set","shape","sourc","specifi","squar","src/app/mixer/provider/ink.service.t","string","this.clearselect","this.getink(this.getselect","this.ink","this.inks.foreach","this.inks.foreach(ink","this.select","this.select('neq","this.selected.valu","time","true","type","under","underneight","underneith","unset","up","us","user","uses_mask","uses_mask:fals","uses_mask:tru","valu","viewvalu","we'r","weav","whether","within"],"interfaces/Interlacement.html":["0","absolut","action","and/or","array","assign","be","befor","boolean","bound","cell","column","column/warp","commun","const","context","coordin","correspond","current","de","densityunit","describ","descript","draft","draft.visiblerow","draft.visiblerows[si","draw","drawdown","exampl","export","far","file","frame","given","height","hide","icon","import","index","info","interfac","interlac","interlacementv","j","left","locat","loom","loomcoord","loomtyp","loomupd","match","materialtyp","menu","mous","ndx","number","param","place","point","posit","properti","rectanbl","rectangl","referenc","repres","respons","result","return","row","row/weft","screen","sett","si","sourc","src/app/core/model/datatypes.t","stage","string","thread","tieup","toolmod","top","topleft","treadl","treadle:numb","type","updat","us","val","valu","view","viewmod","viewvalu","well","width","within","x","x,i","y"],"interfaces/InterlacementVal.html":["0","absolut","action","and/or","array","assign","be","befor","boolean","bound","cell","column","column/warp","commun","const","context","coordin","correspond","current","de","densityunit","describ","descript","draft","draft.visiblerow","draft.visiblerows[si","draw","drawdown","exampl","export","far","file","frame","given","height","hide","icon","import","index","info","interfac","interlac","interlacementv","j","left","locat","locationus","loom","loomcoord","loomtyp","loomupd","match","materialtyp","menu","mous","ndx","number","param","place","point","posit","properti","rectanbl","rectangl","referenc","repres","respons","result","return","row","row/weft","screen","sett","si","sourc","src/app/core/model/datatypes.t","stage","string","thread","tieup","toolmod","top","topleft","treadl","treadle:numb","type","updat","us","val","valu","view","viewmod","viewvalu","well","width","within","x","x,i","y"],"interfaces/LoomCoords.html":["0","absolut","action","and/or","array","assign","be","befor","boolean","bound","cell","column","column/warp","commun","const","context","coordin","correspond","current","de","densityunit","describ","descript","draft","draft.visiblerow","draft.visiblerows[si","draw","drawdown","exampl","export","far","file","frame","given","height","hide","icon","import","index","info","interfac","interlac","interlacementv","j","left","locat","loom","loomcoord","loomtyp","loomupd","match","materialtyp","menu","mous","ndx","number","param","place","point","posit","properti","rectanbl","rectangl","referenc","repres","respons","result","return","row","row/weft","screen","sett","si","sourc","src/app/core/model/datatypes.t","stage","string","thread","tieup","toolmod","top","topleft","treadl","treadle:numb","type","updat","us","val","valu","view","viewmod","viewvalu","well","width","within","x","x,i","y"],"interfaces/LoomTypes.html":["0","absolut","action","and/or","array","assign","be","befor","boolean","bound","cell","column","column/warp","commun","const","context","coordin","correspond","current","de","densityunit","describ","draft","draft.visiblerow","draft.visiblerows[si","draw","drawdown","exampl","export","far","file","frame","given","height","hide","icon","import","index","info","interfac","interlac","interlacementv","j","left","locat","loom","loomcoord","loomtyp","loomupd","match","materialtyp","menu","mous","ndx","number","param","place","point","posit","properti","rectanbl","rectangl","referenc","repres","respons","result","return","row","row/weft","screen","sett","si","sourc","src/app/core/model/datatypes.t","stage","string","thread","tieup","toolmod","top","topleft","treadl","treadle:numb","type","updat","us","val","valu","view","viewmod","viewvalu","well","width","within","x","x,i","y"],"interfaces/LoomUpdate.html":["0","absolut","action","and/or","array","assign","be","befor","boolean","bound","cell","column","column/warp","commun","const","context","coordin","correspond","current","de","densityunit","describ","descript","draft","draft.visiblerow","draft.visiblerows[si","draw","drawdown","exampl","export","far","file","frame","given","height","hide","icon","import","index","info","interfac","interlac","interlacementv","j","left","locat","loom","loomcoord","loomtyp","loomupd","match","materialtyp","menu","mous","ndx","number","param","place","point","posit","properti","rectanbl","rectangl","referenc","repres","respons","result","return","row","row/weft","screen","sett","si","sourc","src/app/core/model/datatypes.t","stage","string","thread","tieup","toolmod","top","topleft","treadl","treadle:numb","type","updat","us","val","valu","view","viewmod","viewvalu","well","width","within","x","x,i","y"],"interfaces/MaterialTypes.html":["0","absolut","action","and/or","array","assign","be","befor","boolean","bound","cell","column","column/warp","commun","const","context","coordin","correspond","current","de","densityunit","describ","draft","draft.visiblerow","draft.visiblerows[si","draw","drawdown","exampl","export","far","file","frame","given","height","hide","icon","import","index","info","interfac","interlac","interlacementv","j","left","locat","loom","loomcoord","loomtyp","loomupd","match","materialtyp","menu","mous","ndx","number","param","place","point","posit","properti","rectanbl","rectangl","referenc","repres","respons","result","return","row","row/weft","screen","sett","si","sourc","src/app/core/model/datatypes.t","stage","string","thread","tieup","toolmod","top","topleft","treadl","treadle:numb","type","updat","us","val","valu","view","viewmod","viewvalu","well","width","within","x","x,i","y"],"interfaces/Point.html":["0","absolut","action","and/or","array","assign","be","befor","boolean","bound","cell","column","column/warp","commun","const","context","coordin","coordinatesoften","correspond","current","de","densityunit","describ","descript","draft","draft.visiblerow","draft.visiblerows[si","draw","drawdown","exampl","export","far","file","frame","given","height","hide","icon","import","index","info","interfac","interlac","interlacementv","j","left","locat","loom","loomcoord","loomtyp","loomupd","match","materialtyp","menu","mous","ndx","number","param","place","point","posit","properti","rectanbl","rectangl","referenc","repres","respons","result","return","row","row/weft","screen","sett","si","sourc","src/app/core/model/datatypes.t","stage","string","thread","tieup","toolmod","top","topleft","treadl","treadle:numb","type","updat","us","val","valu","view","viewmod","viewvalu","well","width","within","x","x,i","y"],"interfaces/StartOptions.html":["0","ada","adacad","angular/cor","angular/material/dialog","app","begin","bitmap","bmp","cell","class","color","compon","console.log(data","constructor(priv","core/model/cel","core/model/loom","core/model/shuttl","d3","data","data.density_unit","data.loomtyp","density_unit","dialogref","draft","e","e.data","e.height","e.typ","e.width","export","fals","file","form","getrowtoshuttlemapping(","handlefile(","i=0","imag","img","implement","import","info","init","init.modal.html","init.modal.scss","initmod","inject","inject(mat_dialog_data","input","interfac","load","lodash","loom","loomtyp","loomtype:str","mat_dialog_data","match","matdialogref","new","ngoninit","null","obj.data","oninit","opt","privat","processimagedata(obj","properti","rest","result","return","reversedmap","reversedmapping.push(coltoshuttlemapping[i","rowtoshuttlemap","selected:str","selector","shuttl","sourc","src/app/core/modal/init/init.modal.t","startopt","string","styleurl","templateurl","this.density_unit","this.draft.warp","this.draft.weft","this.loomtyp","this.processdraftdata(","this.processimagedata(","this.processwifdata(","this.valid","true","type","valid:boolean","valu","var","viewvalu","wif"],"interfaces/ViewModes.html":["0","absolut","action","and/or","array","assign","be","befor","boolean","bound","cell","column","column/warp","commun","const","context","coordin","correspond","current","de","densityunit","describ","draft","draft.visiblerow","draft.visiblerows[si","draw","drawdown","exampl","export","far","file","frame","given","height","hide","icon","import","index","info","interfac","interlac","interlacementv","j","left","locat","loom","loomcoord","loomtyp","loomupd","match","materialtyp","menu","mous","ndx","number","param","place","point","posit","properti","rectanbl","rectangl","referenc","repres","respons","result","return","row","row/weft","screen","sett","si","sourc","src/app/core/model/datatypes.t","stage","string","thread","tieup","toolmod","top","topleft","treadl","treadle:numb","type","updat","us","val","valu","view","viewmod","viewvalu","well","width","within","x","x,i","y"],"miscellaneous.html":["___karma__","canvastobmp","context","default","drafttowif","environ","firebaseconfig","generateid","httpoption","match","miscellan","requir","result","secret","utilinst","valu","variabl"],"coverage.html":["0","0/1","0/10","0/12","0/13","0/2","0/20","0/21","0/22","0/24","0/26","0/28","0/29","0/3","0/30","0/34","0/4","0/5","0/6","0/9","1/1","1/3","1/6","1/7","1/8","10/31","100","12","13/52","14","16","2/8","21","25","28/83","3/41","32","33","47/69","5/8","5/9","55","6","6/98","62","68","7","9/41","aboutmod","adacadweaverpag","appcompon","bound","cell","class","compon","connect","connectioncompon","coverag","densityunit","designact","designmod","designmodesservic","document","draft","draftinterfac","e2e/app.po.t","file","filterpip","form.component.t","form/upload","historyst","identifi","initmod","inject","ink","inkservic","interfac","interlac","interlacementv","labelmod","layersservic","loom","loomcompon","loomcoord","loomtyp","loomupd","maskscompon","match","materialmod","materialscompon","materialtyp","mixercompon","mixerdesigncompon","mixerpatternscompon","mixerviewcompon","notescompon","operationcompon","palettecompon","pattern","patternmod","patternscompon","patternservic","pipe","point","project","render","result","schematiccompon","select","shape","shuttl","shuttlesmod","snackbarcompon","src/app/app.component.t","src/app/core/modal/about/about.modal.t","src/app/core/modal/init/init.modal.t","src/app/core/modal/material/material.modal.t","src/app/core/modal/pattern/pattern.modal.t","src/app/core/modal/shuttles/shuttles.modal.t","src/app/core/model/cell.t","src/app/core/model/datatypes.t","src/app/core/model/draft.t","src/app/core/model/loom.t","src/app/core/model/pattern.t","src/app/core/model/shuttle.t","src/app/core/model/system.t","src/app/core/model/timeline.t","src/app/core/model/util.t","src/app/core/pipe/filter.pipe.t","src/app/core/provider/pattern.service.t","src/app/core/tool/materials/materials.component.t","src/app/core/tool/notes/notes.component.t","src/app/core/tool/patterns/patterns.component.t","src/app/core/tool/systems/systems.component.t","src/app/core/topbar/topbar.component.t","src/app/core/uploads/upload","src/app/core/uploads/upload.service.t","src/app/core/uploads/upload.t","src/app/mixer/mixer.component.t","src/app/mixer/model/shape.t","src/app/mixer/palette/connection/connection.component.t","src/app/mixer/palette/operation/operation.component.t","src/app/mixer/palette/palette.component.t","src/app/mixer/palette/snackbar/snackbar.component.t","src/app/mixer/palette/subdraft/subdraft.component.t","src/app/mixer/provider/designmodes.service.t","src/app/mixer/provider/ink.service.t","src/app/mixer/provider/layers.service.t","src/app/mixer/tool/mixerdesign/mixerdesign.component.t","src/app/mixer/tool/mixerpatterns/mixerpatterns.component.t","src/app/mixer/tool/mixerview/mixerview.component.t","src/app/weaver/modal/connection/connection.modal.t","src/app/weaver/modal/label/label.modal.t","src/app/weaver/model/render.t","src/app/weaver/model/selection.t","src/app/weaver/tool/loom/loom.component.t","src/app/weaver/tool/masks/masks.component.t","src/app/weaver/tool/schematic/schematic.component.t","src/app/weaver/tool/weaverdesign/weaverdesign.component.t","src/app/weaver/tool/weaverpatterns/weaverpatterns.component.t","src/app/weaver/tool/weaverview/weaverview.component.t","src/app/weaver/weaver.component.t","startopt","statement","subdraftcompon","system","systemscompon","timelin","topbarcompon","type","upload","uploadformcompon","uploadservic","util","viewmod","weavercompon","weaverdesigncompon","weaverpatternscompon","weaverviewcompon"]},"length":81},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"docs":{}},"docs":{}},"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}},"docs":{}},"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.008414239482200648},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.008290155440414507},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.016317016317016316},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.045871559633027525},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.015948422124194096},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.022556390977443608},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.014705882352941176},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.026785714285714284},"classes/Render.html":{"ref":"classes/Render.html","tf":0.021377672209026127},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.03940886699507389},"classes/Util.html":{"ref":"classes/Util.html","tf":0.036231884057971016},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.015810276679841896},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.01639344262295082},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.030757097791798107},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.044585987261146494},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.015873015873015872},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.01532567049808429},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.015151515151515152},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.01639344262295082},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.015503875968992248},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.01639344262295082},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.01556420233463035},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.01639344262295082},"coverage.html":{"ref":"coverage.html","tf":0.1440677966101695}},".":{"5":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}},"b":{"0":{"0":{"0":{"0":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}},"1":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.008298755186721992}}},"docs":{}},"1":{"0":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}},"1":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}},"docs":{}},"docs":{}},"1":{"0":{"0":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.008298755186721992}}},"1":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}},"docs":{}},"1":{"0":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"0":{"0":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}},"1":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}},"docs":{}},"1":{"0":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}},"docs":{}},"docs":{}},"1":{"0":{"0":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.00847457627118644}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.00847457627118644}}},"2":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.031073446327683617}}},"3":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.022598870056497175}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.014124293785310734}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011299435028248588}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011299435028248588}}},"docs":{}}},"1":{"0":{"0":{"0":{"0":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}},"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}},"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Render.html":{"ref":"classes/Render.html","tf":0.009501187648456057},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"c":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"/":{"3":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}},"2":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}},"3":{"docs":{},"/":{"5":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}},"5":{"0":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"8":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.005773672055427252},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.005177993527508091},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.011398963730569948},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.018648018648018648},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.00725689404934688},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.007804546996946046},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.008298755186721992},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.013880855986119144},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.02297794117647059},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.029411764705882353},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414},"classes/System.html":{"ref":"classes/System.html","tf":0.015873015873015872},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.010259917920656635},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0102880658436214},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.01892744479495268},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}},"docs":{}}},"2":{"0":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"5":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}},"8":{"docs":{},"/":{"8":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.07142857142857142},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.018518518518518517},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142}},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.005429250084832033},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"1":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}},"docs":{}}}}},"/":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{}}},"3":{"0":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"3":{"3":{"3":{"3":{"3":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}},"5":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"9":{"3":{"9":{"3":{"9":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"/":{"2":{"7":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}},"4":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}},"d":{"3":{"docs":{},"d":{"3":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"docs":{}}},"docs":{}}},"4":{"0":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"5":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"7":{"docs":{},"/":{"6":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}},"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}},"5":{"0":{"0":{"0":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}},"docs":{}},"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Render.html":{"ref":"classes/Render.html","tf":0.009501187648456057},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.07142857142857142},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},")":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}},"/":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{}}},"6":{"0":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"1":{"docs":{},"c":{"9":{"7":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"docs":{}},"docs":{}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"4":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"5":{"0":{"docs":{},"p":{"docs":{},"x":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}}}}},"docs":{}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"/":{"9":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}},"7":{"5":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}},".":{"3":{"docs":{},".":{"8":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}},"docs":{}}},"docs":{}}},"8":{"0":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"5":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}},"9":{"0":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"docs":{},"*":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144}}},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}},"/":{"4":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.027522935779816515},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"i":{"docs":{},"d":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.014778325123152709},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"a":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.012396694214876033},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.019867549668874173}},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.022123893805309734},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":5.0588235294117645},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292}}}}}}},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365}},":":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}},"f":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}},"d":{"docs":{},"k":{"docs":{},"/":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02830188679245283}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.007692307692307693},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}},"i":{"docs":{},"p":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.007692307692307693},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"2":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}},"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.013888888888888888}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.013888888888888888}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.013888888888888888}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0975609756097561},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.03333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.018867924528302}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.03333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02830188679245283},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":5.038461538461538}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.04716981132075472},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.048780487804878},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}}},"e":{"docs":{},"a":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.006362058993637941},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},"a":{"docs":{},"y":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}}}}}},"2":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.021739130434782608}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}}}}}},"docs":{"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004207119741100324},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0038703434929850023},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.008620689655172414},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.022556390977443608},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.008272058823529412},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"classes/Util.html":{"ref":"classes/Util.html","tf":0.036231884057971016},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.019762845849802372},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.020491803278688523},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0047879616963064295},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.010582010582010581},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.004801097393689987},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.030757097791798107},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.01984126984126984},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.019157088122605363},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.01893939393939394},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.020491803278688523},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.01937984496124031},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.020491803278688523},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.019455252918287938},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.020491803278688523}},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},">":{"docs":{},")":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}},"'":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}},"[":{"0":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}},"docs":{},"i":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.021739130434782608}}}}},"w":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}},"g":{"docs":{"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.03773584905660377}},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.023076923076923078},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":5.036363636363636},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636}}}}}}}}}}}}}}},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.016580310880829015},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}},"f":{"docs":{},"r":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.007352941176470588},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.011363636363636364},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.008620689655172414},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.010282776349614395},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}}}}},"u":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"k":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0055147058823529415},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"o":{"docs":{},"p":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}}}}}},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.005501618122977346}},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.015810276679841896},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.01639344262295082},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.015873015873015872},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.01532567049808429},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.015151515151515152},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.01639344262295082},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.015503875968992248},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.01639344262295082},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.01556420233463035},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.01639344262295082}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"n":{"docs":{},"g":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004530744336569579},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886}}}}}}}},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.010679611650485437},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.016580310880829015},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.023706896551724137},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.028277634961439587},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.043568464730290454},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.010410641989589358},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.008272058823529412},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.044642857142857144},"classes/Render.html":{"ref":"classes/Render.html","tf":0.019002375296912115},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.021551724137931036},"classes/System.html":{"ref":"classes/System.html","tf":0.031746031746031744},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.019704433497536946},"classes/Util.html":{"ref":"classes/Util.html","tf":0.028985507246376812},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.012738853503184714},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.03164556962025317},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}},"u":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.011003236245954692},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.015544041450777202},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.06422018348623854},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.05583756345177665},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":5.011857707509882},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.013539651837524178},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0022653721682847896},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"/":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"/":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894}}}}}},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.16666666666666666}},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"modules.html":{"ref":"modules.html","tf":0.16666666666666666},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02830188679245283},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.005805515239477504},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.003236245954692557},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.027972027972027972},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.030405405405405407},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.004750593824228029},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.022123893805309734}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.025},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.010135135135135136}}}}}}}}}}}},"g":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}},"a":{"docs":{},"r":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"s":{"docs":{},"e":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.003883495145631068},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}},"*":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"+":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"_":{"docs":{},"i":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}},"i":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}},"c":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"i":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}},"g":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292}}}}}}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.007712082262210797},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.00949367088607595}}}}},"o":{"docs":{},"b":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}}}}}},"c":{"2":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}},"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.005177993527508091},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0051813471502590676},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.012738853503184714}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521}}}}}}},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004207119741100324},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0051813471502590676},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.01694915254237288},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.01493043773328809},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.025380710659898477},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"s":{"docs":{},"_":{"docs":{},"z":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"2":{"docs":{},"d":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}},"docs":{}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.01694915254237288}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.01694915254237288}}}}}}}},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"m":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.003883495145631068},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.02564102564102564},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.030405405405405407},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.006107906345436036},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"'":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"m":{"docs":{},"e":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.013856812933025405},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0022653721682847896},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0020359687818120122},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.007119741100323625},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0055147058823529415},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.00646551724137931},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.023706896551724137},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.03439153439153439}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}}}},"p":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584}},"c":{"docs":{},"k":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.03488372093023256},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.041666666666666664},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.03773584905660377},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":5.0588235294117645},"classes/Cell.html":{"ref":"classes/Cell.html","tf":5.004149377593361},"classes/Connection.html":{"ref":"classes/Connection.html","tf":5.051282051282051},"classes/Draft.html":{"ref":"classes/Draft.html","tf":5.0017351069982645},"classes/Loom.html":{"ref":"classes/Loom.html","tf":5.0036764705882355},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":5.026785714285714},"classes/Point.html":{"ref":"classes/Point.html","tf":5.051282051282051},"classes/Render.html":{"ref":"classes/Render.html","tf":5.004750593824228},"classes/Selection.html":{"ref":"classes/Selection.html","tf":5.022058823529412},"classes/Shape.html":{"ref":"classes/Shape.html","tf":5.020304568527918},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":5.008620689655173},"classes/System.html":{"ref":"classes/System.html","tf":5.015873015873016},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":5.014778325123153},"classes/Upload.html":{"ref":"classes/Upload.html","tf":5.041666666666667},"classes/Util.html":{"ref":"classes/Util.html","tf":5.0144927536231885},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.012738853503184714},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"coverage.html":{"ref":"coverage.html","tf":0.0423728813559322}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.05454545454545454},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.04225352112676056},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.03409090909090909},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.03},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}},"n":{"docs":{},"e":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0038703434929850023},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.00646551724137931},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.007712082262210797},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}},"e":{"docs":{},"v":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},"a":{"docs":{},"y":{"docs":{"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.039473684210526314}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"(":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"(":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"(":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.030973451327433628},"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":5.054545454545455},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.073170731707317},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":5.088235294117647},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":5.034883720930233},"components/InitModal.html":{"ref":"components/InitModal.html","tf":5.012396694214876},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":5.042253521126761},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":5.011111111111111},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":5.0476190476190474},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":5.034090909090909},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":5.021739130434782},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":5.006928406466512},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":5.025},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":5.017045454545454},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":5.02970297029703},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":5.0476190476190474},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":5.052631578947368},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":5.0187702265372165},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":5.03},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":5.017647058823529},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":5.0375},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":5.027027027027027},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":5.042253521126761},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":5.007253886010362},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":5.006993006993007},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":5.0108303249097474},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":5.012711864406779},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":5.0087082728592165},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":5.010135135135135},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":5.017647058823529},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":5.015873015873016},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.02564102564102564},"classes/Point.html":{"ref":"classes/Point.html","tf":0.02564102564102564},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.007523939808481532},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781},"coverage.html":{"ref":"coverage.html","tf":0.08192090395480225}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}},"u":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}},"a":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"e":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.005501618122977346},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.018475750577367205},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.009192065795839382},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.008207934336525308},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0075445816186556925}}}}},"i":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.004411265693926026},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"x":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.02394822006472492},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.004750593824228029},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.00646551724137931},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.005205320994794679},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.015228426395939087},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.007936507936507936},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.007097791798107256},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}},"o":{"docs":{},"r":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.04411764705882353},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.011111111111111112},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.047619047619047616},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.0297029702970297},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.047619047619047616},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.05263157894736842},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.02702702702702703},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.015873015873015872},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.00646551724137931},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.007712082262210797},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.039473684210526314},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.014778325123152709},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521}}}}}},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"@":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"v":{"docs":{},"c":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332}}}}}},"a":{"docs":{},"f":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/System.html":{"ref":"classes/System.html","tf":0.015873015873015872}}}}}}}}}}}},"{":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332}},"e":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"\"":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}},"c":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}},"p":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"o":{"docs":{},"t":{"docs":{"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333}}}}}},"a":{"docs":{},"l":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},"r":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}}},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165}}}}}},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}},"n":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"n":{"docs":{"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}}},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}}}}}}},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"z":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.06976744186046512},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Connection.html":{"ref":"classes/Connection.html","tf":5.076923076923077},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"classes/Point.html":{"ref":"classes/Point.html","tf":0.0641025641025641},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.03529411764705882},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":5.029411764705882},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.020942408376963352},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":5.023255813953488},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.02030456852791878}}}}}},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"i":{"docs":{},"g":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.03333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":5.007692307692308},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.03529411764705882},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.015706806282722512}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"2":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"docs":{}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"1":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"docs":{}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}}}}}},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.00578368999421631},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.025380710659898477},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.007097791798107256}},"o":{"docs":{},"r":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.03017241379310345},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}},"e":{"docs":{},"(":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"/":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}}}}}}}}}},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.00822447992259313},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.003053953172718018},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.007523939808481532},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0075445816186556925},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}},"e":{"docs":{},"v":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"i":{"docs":{},"n":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.012435233160621761},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.01160541586073501},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.039473684210526314},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},"e":{"docs":{},"r":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406}}}}}}},"n":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.002824858757062}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004207119741100324},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.008620689655172414},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.004595588235294118},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.015228426395939087},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662}}}}}}}},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00508992195453003}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0040719375636240245}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144}}},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144}}}}},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.009061488673139158},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Cell.html":{"ref":"classes/Cell.html","tf":5.018672199170124},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.004626951995373048},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.004595588235294118},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.03571428571428571},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.04060913705583756},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.011857707509881422},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.012295081967213115},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.006309148264984227},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.011904761904761904},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.01893939393939394},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.012295081967213115},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.011627906976744186},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.012295081967213115},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.011673151750972763},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.012295081967213115},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"(":{"docs":{},"b":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.021739130434782608},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.017045454545454544},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.006796116504854369},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.01764705882352941},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.01764705882352941},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0020359687818120122},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.03773584905660377},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.039473684210526314}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.0625}}}}}}},"e":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.008620689655172414},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.010582010582010581}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"/":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.004750593824228029},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"/":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}},"docs":{}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0040719375636240245}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"+":{"docs":{},"j":{"docs":{},"*":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"(":{"docs":{},"x":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"*":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"docs":{}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"+":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}},"/":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0037326094333220224}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"(":{"docs":{},"x":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"*":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"docs":{}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}},"+":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},",":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}},"/":{"2":{"docs":{},",":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"+":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"/":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}},"/":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"+":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"[":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"/":{"2":{"0":{"docs":{},",":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"/":{"4":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165}}},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0033932813030200203}},"(":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0033932813030200203}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}},"d":{"docs":{},"k":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}},"t":{"docs":{},"x":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"0":{"docs":{},",":{"0":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}},"docs":{}}},"docs":{}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"z":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"\"":{"1":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}},"docs":{}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}},"d":{"3":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.011547344110854504},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0025889967637540453},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.005805515239477504},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006858710562414266}},"e":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.010392609699769052},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0022653721682847896},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.006773101112723754},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0047879616963064295},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.004801097393689987},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.013513513513513514},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.015086206896551725},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":5.015873015873016},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":5.002057613168724},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007}}}}}}},"(":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.025},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":5.004310344827586},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":5.002051983584131},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}},"e":{"docs":{},"(":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876}}}},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.006433823529411764},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.011857707509881422},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.011673151750972763},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.035398230088495575}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.007692307692307693},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.023529411764705882},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0020359687818120122}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.008290155440414507},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.030303030303030304}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506}},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0040719375636240245},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"i":{"docs":{},"t":{"docs":{"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.041666666666666664},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.012396694214876033},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":5.012295081967213},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"s":{"docs":{},",":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}},"i":{"docs":{},"s":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262}},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}}}}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}}}}}},"e":{"docs":{},"p":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}},"i":{"docs":{},"r":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584},"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":5.036697247706422},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":5.001017984390906},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"|":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"|":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"|":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00508992195453003},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},".":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.007465218866644045}},"/":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.004750593824228029}}},"docs":{}}},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0040719375636240245}},"/":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101}}},"docs":{}}}}},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"v":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0020359687818120122}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}},"f":{"docs":{},"f":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"/":{"5":{"0":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"docs":{}},"docs":{}},"e":{"docs":{},"r":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"\"":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0020359687818120122},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292}}}}},"b":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.01444043321299639}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292}}}}}}},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"l":{"1":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"docs":{}}}}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.01652892561983471},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.009061488673139158},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.013471502590673576},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.006289308176100629},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.05504587155963303},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.011197828299966068},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.010282776349614395},"classes/Draft.html":{"ref":"classes/Draft.html","tf":5.011567379988433},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.004595588235294118},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.03553299492385787},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.06403940886699508},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.015810276679841896},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.01639344262295082},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.006155950752393981},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006172839506172839},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.011829652996845425},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.08280254777070063},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.012658227848101266},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.01984126984126984},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.019157088122605363},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.015151515151515152},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.01639344262295082},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.015503875968992248},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.01639344262295082},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.01556420233463035},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.01639344262295082},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"e":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}},"(":{"docs":{},"{":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},")":{"docs":{},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"i":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":5.002365930599369},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061}}}}}}}}},"g":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}}},"w":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.006928406466512702},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.008090614886731391},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.004411265693926026},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.010775862068965518},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.010582010582010581},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.017463235294117647},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.023715415019762844},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.02459016393442623},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.023809523809523808},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.022988505747126436},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.03409090909090909},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.02459016393442623},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.023255813953488372},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.02459016393442623},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.023346303501945526},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.02459016393442623}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627}}}},"w":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0025889967637540453},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"e":{"docs":{},"r":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.012396694214876033},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.045454545454545456},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.05405405405405406},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.056338028169014086},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.029661016949152543},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}}}}}}}}}}}}}}},"docs":{}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}}},"docs":{}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"e":{"docs":{"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.0625}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"3":{"6":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0022653721682847896}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}},"u":{"docs":{},"e":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}}}}}}}}}},"docs":{},"d":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}},"x":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.017994858611825194},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.028481012658227847}}},"b":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.018518518518518517}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}},"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.02066115702479339},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.012702078521939953},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.013546202225447508},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.012311901504787962},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.012345679012345678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.008143875127248049},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}},"u":{"docs":{},"p":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.011655011655011656},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.018050541516245487},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"a":{"docs":{},"t":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}},"(":{"docs":{},"b":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353}}}}}}}}}}}}}},"[":{"docs":{},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.017699115044247787},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"s":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.017241379310344827}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.12121212121212122}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}},"i":{"docs":{},"r":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627}}}}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.023706896551724137},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.03439153439153439}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}},"t":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.02564102564102564},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Point.html":{"ref":"classes/Point.html","tf":0.02564102564102564},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.009237875288683603},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.009192065795839382},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.003053953172718018},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.012995896032831737},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.013031550068587106}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.012396694214876033},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.019867549668874173}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"i":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"p":{"docs":{},"i":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0055147058823529415},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"f":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.025925925925925925},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.021739130434782608},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.02424942263279446},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.022727272727272728},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.009385113268608414},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.023529411764705882},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.008290155440414507},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.013986013986013986},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.018050541516245487},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.025157232704402517},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.02702702702702703},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.023529411764705882},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.047619047619047616},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.013573125212080081},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.021203830369357045},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.021262002743484224}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.040740740740740744},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.028985507246376812},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.025},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.028409090909090908},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.029411764705882353},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0375},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.00932642487046632},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.011655011655011656},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.021660649819494584},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.030405405405405407},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.029411764705882353},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.05291005291005291},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.009671179883945842}}}}}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}},"i":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165}},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}},"a":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}},"c":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}},"a":{"docs":{},"s":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"1":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406}}},"docs":{}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.01652892561983471},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0040719375636240245},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.018518518518518517},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.125},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.026490066225165563},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}},"[":{"0":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662}}},"docs":{}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.0211864406779661}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.027522935779816515},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.05660377358490566}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.019230769230769232},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":5.037735849056604},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.007518796992481203},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.015228426395939087},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061}}}}}}}},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},"(":{"docs":{},"n":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"_":{"docs":{},"i":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.04411764705882353},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.01893939393939394},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294}}}}}},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}},"u":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.005773672055427252},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644}}}}}},"t":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.02097902097902098}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}}}}}}},"a":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0020359687818120122},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.006940427993059572},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.008272058823529412},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.00946372239747634}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.003470213996529786},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.00473186119873817}}}}},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.023706896551724137},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.02056555269922879},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.05660377358490566},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.022151898734177215}},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}}}}}}}},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}},"a":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.014507772020725389},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.010643444605708756},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.03879310344827586},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.028277634961439587},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.015047879616963064},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.047619047619047616},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.015089163237311385},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.03481012658227848}},"l":{"docs":{},"s":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.006928406466512702},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.005177993527508091},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.008290155440414507},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.018648018648018648},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.0211864406779661},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.003386550556361877},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.003053953172718018},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.034482758620689655},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.02570694087403599},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.029045643153526972},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.004626951995373048},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.004595588235294118},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.03968253968253968},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.006309148264984227},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.012738853503184714},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.028481012658227847},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"e":{"docs":{},",":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}}}},"f":{"docs":{},"a":{"docs":{},"f":{"docs":{},"a":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"r":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.026785714285714284}}}}}}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.014814814814814815}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.014814814814814815}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.014814814814814815}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.022222222222222223}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.018518518518518517}}}}}}}}}}}}}},"f":{"4":{"0":{"8":{"1":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"g":{"docs":{"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.022123893805309734},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061}}}}}}}}}},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"t":{"docs":{},"o":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176}}}}}}}},"p":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.01293103448275862}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"s":{"docs":{},"(":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766}},"i":{"docs":{},"d":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766}}}}}}}}},"y":{"docs":{},"p":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.01293103448275862}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"(":{"docs":{},"v":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.01293103448275862}},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/System.html":{"ref":"classes/System.html","tf":0.023809523809523808}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"(":{"docs":{},"v":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.007712082262210797}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.015228426395939087}}}}}}}}}},"d":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.01293103448275862}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"v":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"s":{"docs":{},"(":{"docs":{},"c":{"1":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}},"docs":{}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.027522935779816515}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.0625}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.08823529411764706}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.01293103448275862}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.011948529411764705},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.011857707509881422},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.012295081967213115},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.011904761904761904},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.015151515151515152},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.012295081967213115},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.015503875968992248},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.012295081967213115},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.011673151750972763},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.012295081967213115}}}}}},".":{"docs":{},"j":{"docs":{"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}},"h":{"1":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353}}}}}}}}}}}}}},"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"classes/Render.html":{"ref":"classes/Render.html","tf":0.011876484560570071},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.026785714285714284},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.019762845849802372},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.012295081967213115},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.011904761904761904},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.011363636363636364},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.012295081967213115},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.011627906976744186},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.012295081967213115},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.011673151750972763},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.012295081967213115}},":":{"0":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"docs":{}}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.012448132780082987},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}},"p":{"docs":{},"l":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},":":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},".":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"c":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}},"p":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"x":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"u":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0022653721682847896},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"4":{"2":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.0211864406779661},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.0625},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.032407407407407406}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061}}}}}}}}}},"m":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.009161859518154056},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.007125890736342043},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0067865626060400405}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"e":{"docs":{},"(":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"(":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":5.012738853503185},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0022653721682847896},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.009324009324009324},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.006362058993637941},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.008675078864353312},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}},"i":{"docs":{},"c":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}},"f":{"docs":{},"o":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"n":{"docs":{},"o":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}},"n":{"docs":{},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534}}}}}},"i":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.02586206896551724},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262}},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},":":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":5.047430830039525},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":5.049180327868853},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":5.002051983584131},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":5.005291005291006},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":5.002057613168724},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":5.003943217665615},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":5.012738853503185},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":5.006329113924051},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":5.0476190476190474},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":5.045977011494253},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":5.045454545454546},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":5.049180327868853},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":5.046511627906977},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":5.049180327868853},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":5.046692607003891},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":5.013245033112582},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":5.049180327868853},"coverage.html":{"ref":"coverage.html","tf":0.05084745762711865}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004530744336569579},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.00932642487046632},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.006107906345436036},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.01011029411764706},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.03676470588235294},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.015810276679841896},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.01639344262295082},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005802707930367505},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":5.01984126984127},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.01532567049808429},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.026515151515151516},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.01639344262295082},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.015503875968992248},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.01639344262295082},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.01556420233463035},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.01639344262295082},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.006433823529411764},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":5.011494252873563},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.031007751937984496},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.011650485436893204},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}}}}},"l":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":5.006465517241379},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":5.007712082262211},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":5.0394736842105265},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":5.0625},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":5.013888888888889},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"coverage.html":{"ref":"coverage.html","tf":0.014124293785310734}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.023076923076923078},"components/InitModal.html":{"ref":"components/InitModal.html","tf":5.008264462809917},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}}}}},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.04814814814814815},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.028985507246376812},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.025},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.022727272727272728},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.0297029702970297},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.047619047619047616},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.07017543859649122},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0022653721682847896},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.023529411764705882},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.007253886010362694},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.02097902097902098},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.036101083032490974},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.01694915254237288},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.023529411764705882},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.042328042328042326},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.003053953172718018},"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.01160541586073501},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}},"k":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.008737864077669903},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.10796915167095116},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":5.091772151898734},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007}}}}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.025},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":5.005141388174807},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}},"i":{"docs":{},"s":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.16981132075471697},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.09615384615384616},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.1576923076923077},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.16470588235294117},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.20418848167539266},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.028925619834710745},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.045454545454545456},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.036231884057971016},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.012702078521939953},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.041666666666666664},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.03409090909090909},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.05263157894736842},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.005177993527508091},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.04},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.03529411764705882},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0375},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.04504504504504504},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.07042253521126761},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.007253886010362694},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.027972027972027972},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.01444043321299639},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.025423728813559324},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.008708272859216255},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.013513513513513514},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.03529411764705882},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.027522935779816515},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0040719375636240245},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.0625},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.041666666666666664},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.02564102564102564},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.005205320994794679},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Point.html":{"ref":"classes/Point.html","tf":0.02564102564102564},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.012311901504787962},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.012345679012345678},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.006309148264984227},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.012738853503184714},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.046357615894039736},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}},"a":{"docs":{},"g":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.013888888888888888}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939}}}}}}}}},"g":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.015228426395939087}}}}}}}}},"=":{"0":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}},"docs":{}},"f":{"docs":{},"(":{"docs":{},"!":{"docs":{},"f":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{},"i":{"docs":{},":":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{},"i":{"docs":{},":":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"[":{"0":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"docs":{}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"t":{"docs":{},"x":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},",":{"docs":{},"j":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},",":{"docs":{},"j":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176}}}}}}}}}},"y":{"docs":{},"p":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.028503562945368172}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.019704433497536946},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.025477707006369428}}}}}}}}}}}}}},"e":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Render.html":{"ref":"classes/Render.html","tf":0.014251781472684086}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}}}},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"[":{"docs":{},"d":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"*":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"*":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.002912621359223301}}},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}},"c":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144}}}}}}}}}}}}}},"i":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534}}}}}}}}}}}},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.004595588235294118}}}}},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}},"p":{"1":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"docs":{},".":{"docs":{},"i":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"g":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}}}}},"r":{"1":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"o":{"docs":{},"w":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}}}}}}}}}}}}}}}},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142}}}},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"[":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"u":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165}}}},"n":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"u":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}},"d":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.047619047619047616},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.04950495049504951},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0025889967637540453},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.005805515239477504},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.026455026455026454},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.013888888888888888},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.006362058993637941},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.026785714285714284},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.03017241379310345},"classes/System.html":{"ref":"classes/System.html","tf":0.05555555555555555},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.006155950752393981},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006172839506172839},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.007886435331230283}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}},",":{"docs":{},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}},"s":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.011003236245954692}},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534}}}}}}}},"[":{"0":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"]":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}},"docs":{}},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"(":{"docs":{},"p":{"1":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}},"docs":{}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}}}}}}},"(":{"docs":{},"p":{"1":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}},"docs":{}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"(":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/System.html":{"ref":"classes/System.html","tf":0.023809523809523808}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.03773584905660377}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886}}}}}}},"r":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.008290155440414507},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.006773101112723754},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.023706896551724137},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.017994858611825194},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.01094391244870041},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.03439153439153439},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.010973936899862825},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.028481012658227847},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.002912621359223301},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00508992195453003},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.015037593984962405},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.015625},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.015810276679841896},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.01639344262295082},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.007736943907156673},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.007097791798107256},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.023809523809523808},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.022988505747126436},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.015151515151515152},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.01639344262295082},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.015503875968992248},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.01639344262295082},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.01556420233463035},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.01639344262295082}},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}}}}}}}},"p":{"docs":{},"g":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},":":{"0":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505}}},"docs":{},"j":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142}}}}}}},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366}}}}}},"+":{"1":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"docs":{}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}},"l":{"1":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"2":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784}},"_":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627}},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}},".":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142}},"+":{"1":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"docs":{}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.07042253521126761},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":5.028169014084507},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":5.026315789473684},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}},"g":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"4":{"2":{"0":{"0":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"x":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.023715415019762844},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.02459016393442623},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.027777777777777776},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.02681992337164751},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.022727272727272728},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.02459016393442623},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.027131782945736434},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.02459016393442623},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.023346303501945526},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.02459016393442623}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726}}}}}}}}}},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.018518518518518517},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.005205320994794679},"classes/Loom.html":{"ref":"classes/Loom.html","tf":5.013786764705882},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.007886435331230283},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.011627906976744186},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.015706806282722512},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":5.007407407407407},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":5.011363636363637},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.02066115702479339},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.014814814814814815},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.008083140877598153},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0038703434929850023},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":5.012295081967213},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.00822447992259313},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.011627906976744186},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.011659807956104253}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":5.011627906976744},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}},"k":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"a":{"docs":{},"d":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.012396694214876033},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.019867549668874173}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}}},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.003236245954692557},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.012894468951476078},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}},"+":{"1":{"docs":{},")":{"docs":{},"*":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.003053953172718018}}}}}}}}}}},"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"/":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}},"docs":{}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}},"n":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}}},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}}},"m":{"docs":{},"e":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}},"i":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}},"k":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.007712082262210797},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.003470213996529786},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.00473186119873817},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.00949367088607595}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.015706806282722512},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":5.031746031746032},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"overview.html":{"ref":"overview.html","tf":0.07142857142857142},"modules.html":{"ref":"modules.html","tf":0.06666666666666667},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.007692307692307693},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.023529411764705882},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.041666666666666664},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259},"routes.html":{"ref":"routes.html","tf":0.15384615384615385},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.03773584905660377},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.058823529411764705},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.02564102564102564},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856},"classes/Point.html":{"ref":"classes/Point.html","tf":0.02564102564102564},"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414},"classes/System.html":{"ref":"classes/System.html","tf":0.015873015873015872},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.041666666666666664},"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.012738853503184714},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.02097902097902098}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}},"i":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}},"i":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.021739130434782608},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.017045454545454544},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.01764705882352941},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0375},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.010135135135135136},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.01764705882352941},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.02564102564102564},"classes/Point.html":{"ref":"classes/Point.html","tf":0.02564102564102564},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.010135135135135136},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.019230769230769232},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":5.0144927536231885},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":5.0227272727272725},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":5.012295081967213},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"(":{"1":{"0":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}},"docs":{}},"docs":{}},"f":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},"*":{"1":{"6":{"7":{"7":{"7":{"2":{"1":{"5":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"6":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588}}},"s":{"docs":{},"i":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"3":{"6":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"2":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588}}},"s":{"docs":{},"i":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.007352941176470588},"classes/Render.html":{"ref":"classes/Render.html","tf":0.05463182897862233},"classes/Util.html":{"ref":"classes/Util.html","tf":0.028985507246376812}},"m":{"docs":{},"s":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}},"_":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},"+":{"1":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}},"docs":{}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.014778325123152709},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}},"o":{"docs":{},"f":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}},"i":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}},"n":{"docs":{},"a":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627}}}}},"i":{"docs":{"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}}},"p":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142}},"[":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"i":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}}}}}}}},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.022123893805309734},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.03333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02830188679245283},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":5.023529411764706}}}}}}},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.03529411764705882},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":5.002309468822171},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.03529411764705882},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":5.016666666666667},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.03529411764705882},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":5.011363636363637},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.03529411764705882},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":5.01980198019802},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}},"x":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}},"n":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0055147058823529415},"classes/Render.html":{"ref":"classes/Render.html","tf":0.05938242280285035},"classes/Util.html":{"ref":"classes/Util.html","tf":0.021739130434782608}},"_":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.005205320994794679},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.007097791798107256}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294}}}}}}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406}},"[":{"docs":{},"i":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.030303030303031}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.016166281755196306},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.003883495145631068},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0603448275862069},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.010282776349614395},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.042328042328042326},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.00646551724137931},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.007936507936507936}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}}}}}}}},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"modules.html":{"ref":"modules.html","tf":10.033333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.009433962264151},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":5.019230769230769},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":5.003846153846154},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":5.011764705882353},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":5.005235602094241},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"a":{"docs":{},"l":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.017699115044247787},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"u":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.006472491909385114},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0037326094333220224},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}}},"v":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004530744336569579},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.008290155440414507},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0033932813030200203},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.009671179883945842},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"r":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004530744336569579},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}}}}}}},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.007518796992481203},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.01025236593059937}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.015011547344110854},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.01444043321299639},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.005805515239477504},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.04956896551724138},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.061696658097686374},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.007518796992481203},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.026785714285714284},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.02586206896551724},"classes/System.html":{"ref":"classes/System.html","tf":0.047619047619047616},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.041666666666666664},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.006155950752393981},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.037037037037037035},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006172839506172839},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.01025236593059937},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.04113924050632911}},":":{"docs":{},"'":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332}}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.08823529411764706}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.03488372093023256},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.025925925925925925},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.028985507246376812},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.028409090909090908},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.029411764705882353},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.007253886010362694},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.018648018648018648},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.018050541516245487},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.003386550556361877},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.02702702702702703},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.029411764705882353},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.047619047619047616},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.003053953172718018},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.038461538461538464},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.007518796992481203},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0055147058823529415},"classes/Point.html":{"ref":"classes/Point.html","tf":0.038461538461538464},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0047879616963064295},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.004801097393689987},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.00946372239747634},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.012738853503184714},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781}},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105}}}}}},"e":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}},"q":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"x":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},".":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.030973451327433628}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.007692307692307693},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.023529411764705882},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}},"x":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.04814814814814815},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.06349206349206349},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.006362058993637941},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.02586206896551724},"classes/System.html":{"ref":"classes/System.html","tf":0.047619047619047616},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.008675078864353312}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.019230769230769232},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":5.031746031746032},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.047619047619047616}}}}}}}}}}}}}},"h":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"e":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101}}}},"w":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}},"u":{"docs":{},"m":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}},"b":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},"e":{"docs":{},"r":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.05813953488372093},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.003883495145631068},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.011398963730569948},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.009324009324009324},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0038703434929850023},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.06578947368421052},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.014522821576763486},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.0641025641025641},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.0670908039329092},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.05974264705882353},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.05357142857142857},"classes/Point.html":{"ref":"classes/Point.html","tf":0.0641025641025641},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0665083135391924},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.029411764705882353},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.050761421319796954},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.05172413793103448},"classes/System.html":{"ref":"classes/System.html","tf":0.031746031746031744},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332},"classes/Util.html":{"ref":"classes/Util.html","tf":0.021739130434782608},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.07905138339920949},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.06557377049180328},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005802707930367505},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.03627760252365931},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.0873015873015873},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.07662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.07575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.06557377049180328},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.06201550387596899},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.07377049180327869},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.07782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.06557377049180328}},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}}}}}}}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.004595588235294118}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.056338028169014086},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.010032362459546926},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.00646551724137931},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.010282776349614395},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.01867219917012448},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.00949367088607595},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781}}}}},"d":{"docs":{},"x":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004207119741100324},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.009253903990746095},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.007352941176470588},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.012618296529968454},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.011363636363636364},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.009191176470588236},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"x":{"docs":{},"i":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}},",":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}},"o":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"_":{"docs":{},"i":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.02564102564102564},"classes/Point.html":{"ref":"classes/Point.html","tf":0.02564102564102564},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781}}}},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.03}}}}}}}},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}},"l":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406}}}}}}}}}}}}}}},"o":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}},"d":{"docs":{},"o":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}},"(":{"docs":{},"b":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}},"e":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}},"e":{"docs":{},"(":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.03333333333333333},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.047619047619047616},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.036231884057971016},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.03333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.03409090909090909},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.0297029702970297},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.047619047619047616},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.03529411764705882},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.05},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0062176165803108805},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.013986013986013986},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.02527075812274368},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.03529411764705882},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.0582010582010582},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.009671179883945842}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.005825242718446602},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.035714285714286}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784}}},"y":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"[":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.04411764705882353},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.07017543859649122},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.03529411764705882},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":5.035087719298246},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0375},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0375},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292}}}}}}}}}}}}}}}}},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.012396694214876033},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}},"b":{"docs":{},"j":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.01444043321299639},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.016891891891891893},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"i":{"docs":{},"d":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428}}}}}}}}}}},"docs":{}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.010135135135135136},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}},"f":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0035598705501618125},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.004595588235294118},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.026785714285714284},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},".":{"docs":{},"a":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.013888888888888888}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"l":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}}},"p":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"2":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}},"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.00932642487046632},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0038703434929850023},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0047879616963064295},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.004801097393689987}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.017699115044247787},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.007692307692307693},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.041666666666666664},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0035598705501618125},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0038703434929850023},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.008143875127248049},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005471956224350205},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0054869684499314125},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.041666666666666664}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.026558891454965358},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.008737864077669903},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.015269765863590091},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.010282776349614395},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.05555555555555555},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.007523939808481532},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0075445816186556925},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}},"n":{"docs":{},"t":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},"(":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.006472491909385114}}},"y":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.006928406466512702},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.005321722302854378},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}}}}},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}},"o":{"docs":{},"u":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.017321016166281754},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.017616580310880828},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.02888086642599278},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.04837929366231253},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.03669724770642202},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.014591109602986088},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.03940886699507389},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.03419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.03429355281207133},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.025477707006369428}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":5.09433962264151},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.03773584905660377}}}}}}}}}}}}},"c":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}},"n":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}},"x":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}},"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"routes.html":{"ref":"routes.html","tf":0.07692307692307693}}}}}}},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},".":{"docs":{},"o":{"docs":{},"v":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.006928406466512702},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.03977272727272727},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.11},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.052941176470588235},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0051813471502590676},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.012094823415578132},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.041176470588235294},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00848320325755005},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.012853470437017995},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.041666666666666664},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.01735106998264893},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":5.080357142857143},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.012995896032831737},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.013031550068587106},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.02050473186119874},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.015822784810126583},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.023076923076923078},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":5.02},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":5.041666666666667},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":5.011764705882353},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},"[":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},"[":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},"{":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}},"docs":{}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.008083140877598153},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.002912621359223301}},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.03529411764705882},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":5.000647249190939},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"0":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262}}},"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.011547344110854504},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.012944983818770227},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.007253886010362694},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.008708272859216255},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.00646551724137931},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.007712082262210797},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.016597510373443983},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.02297794117647059},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.02030456852791878},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.03557312252964427},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.036885245901639344},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.012311901504787962},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.007936507936507936},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.012345679012345678},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.00949367088607595},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.03571428571428571},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.034482758620689655},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.03409090909090909},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.036885245901639344},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.03488372093023256},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.036885245901639344},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.03501945525291829},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.036885245901639344}},"e":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.008414239482200648},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.00932642487046632},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.00725689404934688},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.006447234475738039},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.010775862068965518},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.012853470437017995},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.008298755186721992},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.008272058823529412},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.015228426395939087},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}}}},"u":{"docs":{},"p":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}},"o":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0051813471502590676},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0038703434929850023},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.05813953488372093},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.010355987055016181},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.021761658031088083},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.005768578215134035},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.0641025641025641},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Point.html":{"ref":"classes/Point.html","tf":5.076923076923077},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.023715415019762844},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.01639344262295082},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.015873015873015872},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.01532567049808429},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.015151515151515152},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.01639344262295082},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.015503875968992248},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.01639344262295082},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":5.023346303501945},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.01639344262295082},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}}},"t":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0035598705501618125},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.014507772020725389},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.011857707509881422},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.012295081967213115},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.013539651837524178},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.011904761904761904},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.011363636363636364},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.012295081967213115},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.011627906976744186},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.012295081967213115},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.01556420233463035},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.012295081967213115}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}},"e":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.008298755186721992}}}}},"e":{"docs":{},"r":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}}}}}}}},"n":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}},"s":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}},"u":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}}}}},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}},"r":{"1":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"2":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}},"a":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939}},"m":{"docs":{"index.html":{"ref":"index.html","tf":5.004424778761062}}},"e":{"docs":{},"r":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}}}}}}}}}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}}}}}}},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}},"l":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.011904761904761904},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0025889967637540453},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"overview.html":{"ref":"overview.html","tf":0.07142857142857142},"modules.html":{"ref":"modules.html","tf":0.06666666666666667},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.007692307692307693},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.023529411764705882},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.028985507246376812},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.022727272727272728},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.003236245954692557},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.023529411764705882},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.023529411764705882},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.041666666666666664},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259},"routes.html":{"ref":"routes.html","tf":0.15384615384615385},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.07547169811320754},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.058823529411764705},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.02564102564102564},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856},"classes/Point.html":{"ref":"classes/Point.html","tf":0.02564102564102564},"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414},"classes/System.html":{"ref":"classes/System.html","tf":0.015873015873015872},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.041666666666666664},"classes/Util.html":{"ref":"classes/Util.html","tf":0.028985507246376812},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.012738853503184714},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"o":{"docs":{},"r":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.014778325123152709},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"z":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.015228426395939087}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"(":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"(":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.058823529411764705},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.07024793388429752},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.02962962962962963},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.021739130434782608},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.03233256351039261},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.025},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.028409090909090908},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.04627831715210356},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.05},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.029411764705882353},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.049740932642487044},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.013986013986013986},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.02888086642599278},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0401548137397194},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.029411764705882353},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.021164021164021163},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.027522935779816515},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.03189684424838819},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.036637931034482756},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.04627249357326478},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.06578947368421052},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.041666666666666664},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.046296296296296294},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.11764705882352941},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.10580912863070539},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.05668016194331984},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.03860294117647059},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856},"classes/Render.html":{"ref":"classes/Render.html","tf":0.10688836104513064},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.10294117647058823},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.030456852791878174},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.06896551724137931},"classes/System.html":{"ref":"classes/System.html","tf":0.05555555555555555},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.04433497536945813},"classes/Util.html":{"ref":"classes/Util.html","tf":0.07971014492753623},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.015047879616963064},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.015089163237311385},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.02050473186119874},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.03184713375796178},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.03164556962025317},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}},"(":{"docs":{},"p":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}},"p":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.008620689655172414},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.010282776349614395},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"i":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}},"d":{"docs":{},"o":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.014778325123152709},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0020359687818120122}},"(":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{"routes.html":{"ref":"routes.html","tf":0.07692307692307693}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.009324009324009324},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.007712082262210797},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.00949367088607595}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0043541364296081275},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0020359687818120122},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Render.html":{"ref":"classes/Render.html","tf":5.009501187648456},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"e":{"docs":{},"v":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007}}}}}}}}}}},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}},"e":{"docs":{},"r":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}},"n":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}}}},"g":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0035598705501618125},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.011857707509881422},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.008737864077669903},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.030973451327433628},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.057692307692307696},"routes.html":{"ref":"routes.html","tf":10.076923076923077}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}},"w":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.008290155440414507},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.005768578215134035},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.010410641989589358},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.015228426395939087},"classes/System.html":{"ref":"classes/System.html","tf":0.015873015873015872},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.015810276679841896},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.01639344262295082},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.013406940063091483},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.015873015873015872},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.01532567049808429},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.015151515151515152},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.01639344262295082},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.015503875968992248},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.01639344262295082},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.01556420233463035},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.01639344262295082}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}}}}}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}}}}}}}}}}}}}},"x":{"docs":{},"j":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.003883495145631068},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}}}}},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}},"g":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}},"s":{"0":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}},"1":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}},"2":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}},"3":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}},"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.006928406466512702},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"a":{"docs":{},"f":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}},"l":{"docs":{},"e":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.027522935779816515},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.04568527918781726},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}},"y":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}}}}}}},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.005773672055427252},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004207119741100324},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.008290155440414507},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.015810276679841896},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.012295081967213115},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.011904761904761904},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.011363636363636364},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.012295081967213115},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.011627906976744186},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.012295081967213115},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.01556420233463035},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.012295081967213115}},"u":{"docs":{},"s":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}},"_":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0020359687818120122}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.015706806282722512},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":5.025},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"_":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894}}}},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}},"c":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.006928406466512702},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0062176165803108805},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.00725689404934688},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.012853470437017995},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.024896265560165973},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.004048582995951417},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.006839945280437756},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.005520504731861199},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.012658227848101266}},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176}},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353}}}}}}}},"n":{"docs":{},"t":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},"e":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"o":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588}},"(":{"docs":{},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}}}}}}},"s":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}}}}},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}},"e":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}}}}}}}}}}}}}}},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}},"u":{"docs":{},"p":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"i":{"docs":{},"d":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996}}}}}}},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},"(":{"docs":{},"z":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}}}}}}},"i":{"docs":{},"d":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414},"classes/System.html":{"ref":"classes/System.html","tf":0.015873015873015872}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/System.html":{"ref":"classes/System.html","tf":0.015873015873015872}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.09090909090909091}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.005773672055427252},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.025},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.008090614886731391},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0062176165803108805},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.009324009324009324},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.011127237542331882},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.02027027027027027},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.03669724770642202},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.009501187648456057},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.06896551724137931},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.06940874035989718},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.008097165991902834},"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043},"classes/Selection.html":{"ref":"classes/Selection.html","tf":5.029411764705882},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.008891928864569083},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0582010582010582},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.008916323731138546},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.00473186119873817},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.056962025316455694},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.023529411764705882},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.056338028169014086},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":5.018348623853211}}}}}}}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}},"_":{"docs":{},"i":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"n":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005802707930367505},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.015873015873015872},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801}}}}}},"d":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}},"z":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.006433823529411764},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.015228426395939087},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.07920792079207921},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.047619047619047616},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.029411764705882353},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}},"m":{"docs":{},"e":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"i":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}},"e":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}},"c":{"docs":{},"e":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"t":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.003470213996529786},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.00473186119873817}}},"a":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.013888888888888888}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/System.html":{"ref":"classes/System.html","tf":0.015873015873015872}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.01652892561983471},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.0297029702970297},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.003883495145631068},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.030303030303030304},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0043541364296081275},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.021164021164021163},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.021551724137931036},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.030848329048843187},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.018518518518518517},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.012145748987854251},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.009191176470588236},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856},"classes/Render.html":{"ref":"classes/Render.html","tf":0.021377672209026127},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.05172413793103448},"classes/System.html":{"ref":"classes/System.html","tf":0.031746031746031744},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.08333333333333333},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.043478260869565216},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.06147540983606557},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.008891928864569083},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.031746031746031744},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.008916323731138546},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.014195583596214511},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.04746835443037975},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.04365079365079365},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0421455938697318},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.041666666666666664},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.06147540983606557},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.04263565891472868},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.05327868852459016},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.042801556420233464},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.039735099337748346},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.06147540983606557}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"9":{"7":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"a":{"docs":{},"w":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0022653721682847896},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0020359687818120122},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.012396694214876033},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":5.0198675496688745},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.017241379310344827}}}}}}}}},"t":{"docs":{},"e":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.04433497536945813},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.050955414012738856}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}},"i":{"docs":{},"c":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.018648018648018648},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.01444043321299639},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}},"u":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}},"g":{"docs":{},"e":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584},"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"modules.html":{"ref":"modules.html","tf":0.16666666666666666},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.04411764705882353},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.020711974110032363},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.04225352112676056},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.008290155440414507},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.007736943907156673}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.047058823529411764},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.012944983818770227},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.056338028169014086},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":5.002072538860103},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"|":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0022653721682847896},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.003053953172718018}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03571428571428571},"modules.html":{"ref":"modules.html","tf":0.16666666666666666},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144}},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705},"coverage.html":{"ref":"coverage.html","tf":0.02824858757062147}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}},"t":{"docs":{"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"coverage.html":{"ref":"coverage.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"coverage.html":{"ref":"coverage.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}}}}}}}}}}}},"y":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.00725689404934688},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0037326094333220224},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.013302486986697512},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176},"classes/System.html":{"ref":"classes/System.html","tf":5.0476190476190474},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0047879616963064295},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.004801097393689987},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.01971608832807571},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.019230769230769232},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":5.004662004662005},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}}}}}}}}}}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"(":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}},"{":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}},"i":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.047058823529411764},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":5.028169014084507},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},"/":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}},"(":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.04225352112676056},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.03409090909090909},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.03},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0037326094333220224},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"(":{"docs":{},"f":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678}}}},"a":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}},"(":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}},"b":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}},"(":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}},"(":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}}}},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}},"(":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}}},"d":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}},"b":{"docs":{},"m":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"t":{"docs":{},"l":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.06818181818181818},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.057971014492753624},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.08108108108108109},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.005805515239477504},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.007804546996946046},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.010410641989589358},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":5.021551724137931},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.014195583596214511},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}},"e":{"docs":{},"(":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":5.018018018018018},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018}}}}}}}}}}}}}},",":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}}}}}}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0037326094333220224}},"(":{"docs":{},")":{"docs":{},"+":{"docs":{},"\"":{"1":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0037326094333220224}}},"docs":{}},"docs":{}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"/":{"1":{"0":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0037326094333220224}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}},"i":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.003470213996529786},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}},"{":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}}}}}}}},"f":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"p":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.003883495145631068},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.008620689655172414},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Shape.html":{"ref":"classes/Shape.html","tf":5.0456852791878175},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.010582010582010581},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},"s":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"v":{"docs":{},"t":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"2":{"docs":{},"d":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}},"docs":{}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"+":{"docs":{},"o":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"u":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}},"u":{"docs":{},"p":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}},"o":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.004411265693926026}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"s":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.007712082262210797},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.00949367088607595}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.007352941176470588}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}},"m":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.03636363636363636},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.023255813953488372},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.031746031746031744},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.031746031746031744},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.03508771929824561},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.028169014084507043},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}}},"x":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101}},"'":{"docs":{},"}":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0037326094333220224},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.011029411764705883},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.011627906976744186},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364}}}}}}}}}}}}}}},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.013513513513513514},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"$":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.015228426395939087},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0051813471502590676},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0051813471502590676},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0038703434929850023},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005471956224350205},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0054869684499314125}}}}}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856}},"s":{"docs":{},"[":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"]":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},"d":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005802707930367505}}}}}}},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"x":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"x":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"x":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}},"o":{"docs":{},"v":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}},"b":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}}},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}},"t":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}},"b":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"}":{"docs":{},"/":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.014705882352941176}}}},"a":{"docs":{},"m":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}},"i":{"docs":{},"l":{"docs":{"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.01444043321299639}}}}}}},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428}}}}}}}}},"t":{"docs":{},"o":{"docs":{"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"2":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"docs":{}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.004595588235294118}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.021551724137931036}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.005805515239477504},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.008207934336525308},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00823045267489712}}}}}}},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}},"docs":{}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.012738853503184714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"2":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"docs":{}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"2":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"docs":{}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}},"[":{"docs":{},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.01293103448275862}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"=":{"1":{"0":{"0":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.01293103448275862}},"=":{"docs":{},"\"":{"docs":{},"#":{"6":{"6":{"6":{"6":{"6":{"6":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.06578947368421052}}}}}},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"2":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}},"docs":{}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}},"_":{"docs":{},"z":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"2":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"docs":{}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.003053953172718018},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784}}},"docs":{}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"(":{"0":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"j":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"t":{"docs":{},"x":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.011876484560570071}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.011627906976744186},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.01282051282051282},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Point.html":{"ref":"classes/Point.html","tf":0.01282051282051282},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}},"i":{"docs":{},"d":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"t":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}},"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"j":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.008090614886731391},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.015544041450777202},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.029013539651837523}},"e":{"docs":{},"/":{"2":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}},"docs":{}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.008620689655172414},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.010582010582010581},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}},"s":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"0":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}},"docs":{}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}}}}}}}}},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}}}}}},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"x":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"j":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},",":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"+":{"1":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"docs":{}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.002074688796680498}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}}},"g":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/SnackbarComponent.html":{"ref":"components/SnackbarComponent.html","tf":0.014084507042253521}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"s":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}},"s":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366}}}}}}}},"r":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}},"v":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"{":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"s":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534}},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},".":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}},"b":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182}}}}}}}}}}}}}}},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"]":{"docs":{},".":{"docs":{},"f":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"(":{"0":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"docs":{}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.02027027027027027}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.06639004149377593}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}},"c":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},".":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}}}}}}}}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.009501187648456057}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}}}},"s":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.01293103448275862},"classes/System.html":{"ref":"classes/System.html","tf":0.031746031746031744}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"[":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"1":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"1":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"3":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"3":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"4":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"5":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"6":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"7":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"8":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"9":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"j":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176}}},"s":{"docs":{},"i":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}},"i":{"docs":{},"d":{"docs":{"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.014492753623188406}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"(":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.01444043321299639}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"$":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.014778325123152709},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.01910828025477707}}}}}}}}},"p":{"docs":{},"s":{"docs":{},"v":{"docs":{},"c":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002891844997108155},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142}},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"2":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"docs":{}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"2":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"docs":{}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.004048582995951417},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.005520504731861199}},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"2":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"docs":{}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"2":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}},"docs":{}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0038703434929850023},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005471956224350205},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0054869684499314125}},"(":{"docs":{},"{":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0077406869859700045},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.01094391244870041},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.010973936899862825}},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00205761316872428}},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006858710562414266}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}},"b":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},"e":{"docs":{},"s":{"docs":{},"*":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0033932813030200203}}}}}}}}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}}}}}}}}}},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.007465218866644045}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0013573125212080082}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.029411764705882353}}}}},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},".":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505}},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0051813471502590676},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.009671179883945842}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005802707930367505}}},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005802707930367505}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0051813471502590676},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.009671179883945842}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},".":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.010135135135135136}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}},"i":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"x":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"x":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}},"w":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}}},"i":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}},"i":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}},"/":{"1":{"0":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}},"docs":{}},"docs":{}}}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00508992195453003}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}},"s":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}}}}}}}}}}},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}},"o":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.019704433497536946},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.025477707006369428}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"(":{"0":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"(":{"0":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"docs":{}}}}}}}}},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333}}}}}}}}}}}}}},"'":{"docs":{},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.009501187648456057}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414}}}}}}},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.017241379310344827},"classes/System.html":{"ref":"classes/System.html","tf":0.031746031746031744},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939}}}}}}}}},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.02074688796680498}}}}},"u":{"docs":{},"p":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.026970954356846474}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.008620689655172414},"classes/System.html":{"ref":"classes/System.html","tf":0.015873015873015872},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"a":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.021551724137931036},"classes/System.html":{"ref":"classes/System.html","tf":0.031746031746031744},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.007352941176470588}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.007352941176470588}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"s":{"docs":{},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"s":{"docs":{},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"+":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"i":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}},"x":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.01037344398340249}}}}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"d":{"docs":{},"x":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"_":{"docs":{},"s":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}},"o":{"docs":{},"f":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}},"z":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.014251781472684086}},"/":{"1":{"0":{"0":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"docs":{}},"docs":{}},"docs":{}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},".":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.03940886699507389},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.050955414012738856}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.029411764705882353}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.02586206896551724}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},":":{"5":{"0":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}},"docs":{}},"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"i":{"docs":{},"d":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203}}}}}}}}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}},"k":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.007692307692307693},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}}}}}}},"p":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0048543689320388345},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.01832371903630811},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.019230769230769232},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":5.007220216606498},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.015810276679841896},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}},":":{"docs":{},"{":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"+":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"/":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}}}}}}},"i":{"docs":{},"*":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},".":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}},"a":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144}}}}}},"w":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.07317073170731707}}}},"m":{"docs":{},"e":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.011547344110854504},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":5.024630541871921},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.012738853503184714},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}}},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.011029411764705883},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.011627906976744186},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.016166281755196306},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004530744336569579},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.013986013986013986},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.01444043321299639},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.026124818577648767},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.03017241379310345},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.022821576763485476},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.007518796992481203},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.01293103448275862},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.024630541871921183},"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.036935704514363885},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.037037037037037035},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.037037037037037035},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.01025236593059937},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.03184713375796178},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.006329113924050633},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}},"/":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.004750593824228029},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.042279411764705885},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.01893939393939394},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.015503875968992248},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0038910505836575876},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0062176165803108805},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005802707930367505}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.002365930599369085}}}}},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.014084507042253521},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.025925925925925925},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.03409090909090909},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.036231884057971016},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.022727272727272728},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.0297029702970297},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/OperationComponent.html":{"ref":"components/OperationComponent.html","tf":0.017543859649122806},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.023529411764705882},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.02702702702702703},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.00932642487046632},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.02564102564102564},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.032490974729241874},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.03389830508474576},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.037162162162162164},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.023529411764705882},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.06349206349206349},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0040719375636240245},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.006940427993059572},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.013786764705882353},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.034482758620689655},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.015810276679841896},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.012295081967213115},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005471956224350205},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.015873015873015872},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0054869684499314125},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.026813880126182965},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0189873417721519},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.015873015873015872},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.01532567049808429},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.01893939393939394},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.012295081967213115},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.01937984496124031},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.012295081967213115},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.011673151750972763},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.013245033112582781},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.012295081967213115},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0016181229773462784},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.00932642487046632},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.007736943907156673}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0023752969121140144}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"u":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.03982300884955752},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.002912621359223301},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.007465218866644045},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.006940427993059572},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.004595588235294118},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.005076142131979695},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.015810276679841896},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.01639344262295082},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.006309148264984227},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.015873015873015872},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.01532567049808429},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.015151515151515152},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.01639344262295082},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.015503875968992248},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.01639344262295082},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.023346303501945526},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.01639344262295082}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.008620689655172414},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}}}}}}},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.00949367088607595}},":":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.012853470437017995},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.015822784810126583}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}}}}}}},"p":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.003386550556361877},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.003053953172718018},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0047879616963064295},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.004801097393689987},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.0423728813559322},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.046296296296296294},"classes/Upload.html":{"ref":"classes/Upload.html","tf":5.041666666666667},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.019230769230769232},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":5.008474576271187},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.011538461538461539},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":5.0092592592592595},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662}}}}}}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.013888888888888888}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.004048582995951417},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.016544117647058824},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.003943217665615142},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.011627906976744186},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786}},"s":{"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01}},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.02}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01}},"(":{"docs":{"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.01}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}},"s":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"u":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"[":{"docs":{},"u":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"u":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"j":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"{":{"docs":{},"i":{"docs":{},":":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0055147058823529415}}}}}}}}}}}}}}}},"[":{"docs":{},"u":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}},"j":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}}}}}}}}},"{":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"classes/System.html":{"ref":"classes/System.html","tf":0.007936507936507936}}}}}}}}}}}}}}},"{":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}},"s":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"v":{"docs":{},"c":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}},"o":{"docs":{},"n":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.004595588235294118},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}},"q":{"docs":{},"u":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.002912621359223301},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.003386550556361877},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.01037344398340249},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.012145748987854251},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.03571428571428571},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.004310344827586207},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0047879616963064295},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.004801097393689987},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.016561514195583597}}}}},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004530744336569579},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}},"t":{"docs":{},"h":{"docs":{"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}}}}}},"o":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.007220216606498195}}}}}},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.014778325123152709},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"e":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.012448132780082987},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006224066390041493}},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}},"u":{"docs":{},"s":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}},"u":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.008928571428571428}}}}}},"r":{"docs":{},"l":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.041666666666666664}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.020833333333333332}}}}}}}},"i":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Util.html":{"ref":"classes/Util.html","tf":5.0144927536231885},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01327433628318584},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.008849557522123894}}},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.022123893805309734},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.006148867313915857},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0067865626060400405},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.02066115702479339},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.012702078521939953},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.008290155440414507},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.012094823415578132},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.023706896551724137},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.017994858611825194},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.019762845849802372},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.028688524590163935},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.018467852257181942},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.03439153439153439},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.018518518518518517},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.028481012658227847},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.01984126984126984},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.019157088122605363},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.01893939393939394},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.028688524590163935},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.01937984496124031},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.028688524590163935},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.019455252918287938},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.046357615894039736},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.028688524590163935}}}}}},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.009501187648456057}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}},"v":{"docs":{},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}},"i":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}},"i":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00423728813559322}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}},"e":{"docs":{},"(":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.007662835249042145},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":5.012295081967213},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}},"(":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}},"b":{"docs":{},"l":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.039603960396039604},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.026455026455026454},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.004048582995951417},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.03017241379310345},"classes/System.html":{"ref":"classes/System.html","tf":0.047619047619047616},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.005520504731861199}},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}}}}}},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AboutModal.html":{"ref":"components/AboutModal.html","tf":0.01818181818181818},"components/ConnectionComponent.html":{"ref":"components/ConnectionComponent.html","tf":0.029411764705882353},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.06611570247933884},"components/LabelModal.html":{"ref":"components/LabelModal.html","tf":0.028169014084507043},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.02962962962962963},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.022727272727272728},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.021739130434782608},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.03117782909930716},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.025},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.028409090909090908},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/NotesComponent.html":{"ref":"components/NotesComponent.html","tf":0.015873015873015872},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.010032362459546926},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.06},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.029411764705882353},"components/SchematicComponent.html":{"ref":"components/SchematicComponent.html","tf":0.025},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.018018018018018018},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.019689119170984457},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.013986013986013986},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.02888086642599278},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.038703434929850025},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.029411764705882353},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.021164021164021163},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.024092297251442144},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.0021551724137931034},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.013157894736842105},"injectables/PatternService.html":{"ref":"injectables/PatternService.html","tf":0.020833333333333332},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.032407407407407406},"classes/AdaCADWeaverPage.html":{"ref":"classes/AdaCADWeaverPage.html","tf":0.058823529411764705},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.04771784232365145},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.035280508964719494},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.014705882352941176},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.017857142857142856},"classes/Render.html":{"ref":"classes/Render.html","tf":0.030878859857482184},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.058823529411764705},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939},"classes/Shuttle.html":{"ref":"classes/Shuttle.html","tf":0.04741379310344827},"classes/System.html":{"ref":"classes/System.html","tf":0.03968253968253968},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"classes/Util.html":{"ref":"classes/Util.html","tf":0.050724637681159424},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.013717421124828532},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}},"}":{"docs":{},"/":{"docs":{},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.03773584905660377},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.01532567049808429},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.007575757575757576},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}},"u":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.024793388429752067},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.013856812933025405},"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.016666666666666666},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.005501618122977346},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.021761658031088083},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.012578616352201259},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.015873015873015872},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.01834862385321101},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.023706896551724137},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.017994858611825194},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.03773584905660377},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.022821576763485476},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.009852216748768473},"classes/Util.html":{"ref":"classes/Util.html","tf":0.021739130434782608},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.03162055335968379},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.040983606557377046},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.018467852257181942},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.03439153439153439},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.018518518518518517},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.028481012658227847},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.031746031746031744},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.034482758620689655},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.030303030303030304},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.040983606557377046},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.031007751937984496},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.040983606557377046},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.0311284046692607},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.046357615894039736},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.040983606557377046},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.030303030303030304}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.008264462809917356},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704},"components/MaterialModal.html":{"ref":"components/MaterialModal.html","tf":0.011363636363636364},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.009009009009009009}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.004132231404958678},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.006622516556291391}}}}}}}}}}}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}}}}},"r":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.02066115702479339},"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MasksComponent.html":{"ref":"components/MasksComponent.html","tf":0.015873015873015872},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.017045454545454544},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567},"components/PatternModal.html":{"ref":"components/PatternModal.html","tf":0.03},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.01764705882352941},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.02702702702702703},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.01444043321299639},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.038135593220338986},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.002902757619738752},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.016891891891891893},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.01764705882352941},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.020699015948422123},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.017929438982070563},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.015625},"classes/Render.html":{"ref":"classes/Render.html","tf":0.009501187648456057},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.019704433497536946},"classes/Util.html":{"ref":"classes/Util.html","tf":0.057971014492753624},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.02444794952681388},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.025477707006369428},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.033112582781456956}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.004149377593360996},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.030303030303030304}}}}},"o":{"docs":{},"u":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}},"c":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}},"t":{"docs":{},"x":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"classes/Render.html":{"ref":"classes/Render.html","tf":0.011876484560570071},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.007125890736342043},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006858710562414266},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.02654867256637168},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.002051983584131327},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.005235602094240838}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.03333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02830188679245283},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":5.010471204188482}}}}}}},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009433962264150943}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.019230769230769232}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.015706806282722512},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":5.000967585873246},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.015706806282722512},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":5.006756756756757},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.015706806282722512},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":5.011764705882353},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.015706806282722512},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":5.01058201058201},"coverage.html":{"ref":"coverage.html","tf":0.002824858757062147}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.001451378809869376},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.015706806282722512},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":5.006447234475738},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.009237875288683603},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.009192065795839382},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.012995896032831737},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.013031550068587106}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.004411265693926026},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.004626951995373048},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.016544117647058824},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176},"classes/System.html":{"ref":"classes/System.html","tf":0.015873015873015872},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.006309148264984227}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006858710562414266}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.004837929366231253},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}}}}},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}},"i":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}},"t":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}},"'":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}},"r":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}},"l":{"docs":{},"l":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.007905138339920948},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.00819672131147541},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.007936507936507936},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.011363636363636364},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.00819672131147541},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.007751937984496124},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.00819672131147541},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.00819672131147541}}}}},"i":{"docs":{},"f":{"docs":{"components/InitModal.html":{"ref":"components/InitModal.html","tf":0.01652892561983471},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.0036101083032490976},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.012711864406779662},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/StartOptions.html":{"ref":"interfaces/StartOptions.html","tf":0.026490066225165563}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TopbarComponent.html":{"ref":"components/TopbarComponent.html","tf":0.010830324909747292}}}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/MaterialsComponent.html":{"ref":"components/MaterialsComponent.html","tf":0.007246376811594203},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0016966406515100101},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.003676470588235294},"classes/Pattern.html":{"ref":"classes/Pattern.html","tf":0.026785714285714284},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.022058823529411766},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.019762845849802372},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.012295081967213115},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0038684719535783366},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.011904761904761904},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.011494252873563218},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.011363636363636364},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.012295081967213115},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.011627906976744186},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.012295081967213115},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.011673151750972763},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.012295081967213115}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.004145077720207254},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.006107906345436036},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.002570694087403599},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0027573529411764708},"classes/Shape.html":{"ref":"classes/Shape.html","tf":0.01015228426395939},"classes/Util.html":{"ref":"classes/Util.html","tf":0.014492753623188406},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.011857707509881422},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.012295081967213115},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.015873015873015872},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.01532567049808429},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.011363636363636364},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.012295081967213115},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.011627906976744186},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.012295081967213115},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.011673151750972763},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.012295081967213115}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}}}},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/ShuttlesModal.html":{"ref":"components/ShuttlesModal.html","tf":0.02702702702702703},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"components/UploadFormComponent.html":{"ref":"components/UploadFormComponent.html","tf":0.00847457627118644},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0040719375636240245},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.007518796992481203},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.015625},"classes/Selection.html":{"ref":"classes/Selection.html","tf":0.014705882352941176},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0027359781121751026},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0027434842249657062},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.01025236593059937}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.011111111111111112}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0024189646831156266},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.003386550556361877},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0047879616963064295},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.004801097393689987}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.003464203233256351},"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.004837929366231253},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.002313475997686524},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.006858710562414266},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0031545741324921135}},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}}},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}},"(":{"docs":{},")":{"docs":{},"+":{"docs":{},"\"":{"1":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}},"docs":{}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"/":{"1":{"0":{"0":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.002331002331002331}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}},")":{"docs":{},"/":{"2":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206}}},"docs":{}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.003703703703703704}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{"components/LoomComponent.html":{"ref":"components/LoomComponent.html","tf":0.007407407407407408}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061}}}}}}}}}}}}}}}}},"m":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235}}}},"y":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"s":{"docs":{},"h":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.006993006993006993}}},"i":{"docs":{"components/SystemsComponent.html":{"ref":"components/SystemsComponent.html","tf":0.004662004662004662}}}},"n":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.004310344827586207},"injectables/InkService.html":{"ref":"injectables/InkService.html","tf":0.005141388174807198},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.0009191176470588235},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.0026455026455026454},"interfaces/Ink.html":{"ref":"interfaces/Ink.html","tf":0.0031645569620253164}}}}},"e":{"docs":{},"v":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0027146250424160165}}}},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.009259259259259259},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},",":{"docs":{},"h":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/DesignmodesService.html":{"ref":"injectables/DesignmodesService.html","tf":0.008620689655172414},"interfaces/DesignMode.html":{"ref":"interfaces/DesignMode.html","tf":0.005291005291005291}}}}}},"z":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.07142857142857142},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.038461538461538464},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.007692307692307693},"modules/MixerModule.html":{"ref":"modules/MixerModule.html","tf":0.023529411764705882},"modules/WeaverModule.html":{"ref":"modules/WeaverModule.html","tf":0.010471204188481676},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007},"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.019801980198019802},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0019351717464925011},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.010582010582010581},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0010179843909060061},"classes/Render.html":{"ref":"classes/Render.html","tf":0.009501187648456057},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0013679890560875513},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0013717421124828531}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}},"e":{"docs":{},"(":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/MixerViewComponent.html":{"ref":"components/MixerViewComponent.html","tf":0.009900990099009901},"components/WeaverViewComponent.html":{"ref":"components/WeaverViewComponent.html","tf":0.005291005291005291}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.004750593824228029}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.007125890736342043}}}}}}}},"n":{"docs":{},"d":{"docs":{},"x":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647}}}}}},"x":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.03488372093023256},"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.004618937644341801},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.005825242718446602},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0051813471502590676},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0038703434929850023},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.038461538461538464},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001735106998264893},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"classes/Point.html":{"ref":"classes/Point.html","tf":0.038461538461538464},"classes/Render.html":{"ref":"classes/Render.html","tf":0.009501187648456057},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.003419972640218878},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.003429355281207133},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.011673151750972763},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}}}}},":":{"0":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.00032362459546925567}}},"docs":{}},"*":{"2":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"docs":{}},"o":{"docs":{},"r":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"1":{"docs":{"classes/Util.html":{"ref":"classes/Util.html","tf":0.007246376811594203}}},"docs":{}}}}}}}}},",":{"docs":{},"i":{"docs":{"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.007782101167315175},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}}}}},"y":{"docs":{"components/ConnectionModal.html":{"ref":"components/ConnectionModal.html","tf":0.03488372093023256},"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.004207119741100324},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0031088082901554403},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Connection.html":{"ref":"classes/Connection.html","tf":0.038461538461538464},"classes/Point.html":{"ref":"classes/Point.html","tf":0.038461538461538464},"classes/Render.html":{"ref":"classes/Render.html","tf":0.009501187648456057},"interfaces/Bounds.html":{"ref":"interfaces/Bounds.html","tf":0.003952569169960474},"interfaces/DensityUnits.html":{"ref":"interfaces/DensityUnits.html","tf":0.004098360655737705},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.005802707930367505},"interfaces/Interlacement.html":{"ref":"interfaces/Interlacement.html","tf":0.003968253968253968},"interfaces/InterlacementVal.html":{"ref":"interfaces/InterlacementVal.html","tf":0.0038314176245210726},"interfaces/LoomCoords.html":{"ref":"interfaces/LoomCoords.html","tf":0.003787878787878788},"interfaces/LoomTypes.html":{"ref":"interfaces/LoomTypes.html","tf":0.004098360655737705},"interfaces/LoomUpdate.html":{"ref":"interfaces/LoomUpdate.html","tf":0.003875968992248062},"interfaces/MaterialTypes.html":{"ref":"interfaces/MaterialTypes.html","tf":0.004098360655737705},"interfaces/Point.html":{"ref":"interfaces/Point.html","tf":0.011673151750972763},"interfaces/ViewModes.html":{"ref":"interfaces/ViewModes.html","tf":0.004098360655737705}},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0040719375636240245},"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}},":":{"0":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0012944983818770227},"directives/SelectionComponent.html":{"ref":"directives/SelectionComponent.html","tf":0.009174311926605505}}},"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"y":{"docs":{},"+":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.000970873786407767}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}},"e":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}},"o":{"docs":{},"u":{"docs":{},"'":{"docs":{},"v":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.00033932813030200206},"classes/Timeline.html":{"ref":"classes/Timeline.html","tf":0.0049261083743842365},"interfaces/HistoryState.html":{"ref":"interfaces/HistoryState.html","tf":0.006369426751592357}}}}}},"*":{"2":{"docs":{"classes/Render.html":{"ref":"classes/Render.html","tf":0.0023752969121140144}}},"docs":{}}},"k":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},"e":{"docs":{},"y":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.012702078521939953},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.005805515239477504},"injectables/UploadService.html":{"ref":"injectables/UploadService.html","tf":0.004629629629629629},"pipes/FilterPipe.html":{"ref":"pipes/FilterPipe.html","tf":0.018867924528301886},"classes/Upload.html":{"ref":"classes/Upload.html","tf":0.0625},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.004103967168262654},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.00411522633744856}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}},"e":{"docs":{},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}},"e":{"docs":{},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503}},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0023094688221709007}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"e":{"docs":{},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.0011547344110854503},"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}},"i":{"docs":{},"n":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0004837929366231253}},"(":{"docs":{"components/WeaverComponent.html":{"ref":"components/WeaverComponent.html","tf":0.0009675858732462506},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0006839945280437756},"interfaces/DesignModes.html":{"ref":"interfaces/DesignModes.html","tf":0.0006858710562414266}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MixerComponent.html":{"ref":"components/MixerComponent.html","tf":0.006928406466512702}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113}}}}}}}},"e":{"docs":{},"p":{"docs":{"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.0010362694300518134},"injectables/LayersService.html":{"ref":"injectables/LayersService.html","tf":0.02631578947368421},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/WeaveDirective.html":{"ref":"directives/WeaveDirective.html","tf":0.0006786562606040041}}}}},"%":{"2":{"docs":{"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.001156737998843262},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0015772870662460567}}},"docs":{}}},"_":{"docs":{"components/MixerDesignComponent.html":{"ref":"components/MixerDesignComponent.html","tf":0.008333333333333333},"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.005681818181818182},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.0058823529411764705},"components/WeaverDesignComponent.html":{"ref":"components/WeaverDesignComponent.html","tf":0.0033783783783783786},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.0058823529411764705},"classes/Draft.html":{"ref":"classes/Draft.html","tf":0.000578368999421631},"interfaces/DraftInterface.html":{"ref":"interfaces/DraftInterface.html","tf":0.0007886435331230284}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/MixerPatternsComponent.html":{"ref":"components/MixerPatternsComponent.html","tf":0.011363636363636364},"components/PatternsComponent.html":{"ref":"components/PatternsComponent.html","tf":0.011764705882352941},"components/WeaverPatternsComponent.html":{"ref":"components/WeaverPatternsComponent.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.001941747572815534}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"_":{"docs":{},"_":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06060606060606061}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PaletteComponent.html":{"ref":"components/PaletteComponent.html","tf":0.0006472491909385113},"components/SubdraftComponent.html":{"ref":"components/SubdraftComponent.html","tf":0.002072538860103627},"classes/Loom.html":{"ref":"classes/Loom.html","tf":0.001838235294117647},"interfaces/DesignActions.html":{"ref":"interfaces/DesignActions.html","tf":0.0019342359767891683}}}}}}}}}}},"length":10922},"corpusTokens":["0","0.5","0/1","0/10","0/12","0/13","0/2","0/20","0/21","0/22","0/24","0/26","0/28","0/29","0/3","0/30","0/34","0/4","0/5","0/6","0/9","000","000000","0b0000","0b0001","0b0010","0b0011","0b0100","0b0101","0b0110","0b1000","0b1001","0b1010","0b1100","1","1/1","1/3","1/6","1/7","1/8","10","10/31","100","1000","10000","10cm","12","13/52","14","15","150","16","18","2","2)===1","2/8","20","21","25","28/83","2d","3","3/27","3/41","30","32","33","333333","35","393939","3d3d3d","4","40","45","47/69","5","5)).touppercas","5/8","5/9","50","5000","55","6","6/98","60","61c97d","62","64","650px","68","7","7.3.8","75","8","80","85","9*dims.h","9*dims.w","9/41","90","_","_.clonedeep(this.pattern","___karma__","_snackbar","a:boolean","about.modal.html","about.modal.scss","aboutmod","abov","absolut","acc","acc.bounds.height","acc.bounds.width","acc.concat([idx","acc.gettopleft().i","acc.gettopleft().x","accord","accordingli","account","action","activ","active_cel","active_id","ad","ada","adacad","adacadweaverpag","adalink","add","add(ev","addhistoryst","addhistorystate(draft","addhistorystate(draft:draft):void","addign","addlabel","addlabel(row","addshuttl","addshuttle(shuttl","addwarpsystem","addwarpsystem(system","addweftsystem","addweftsystem(system","adjust","af","affect","against","allfruit","allow","allwarpshuttl","allwarpsystem","allweftshuttl","allweftsystem","alt","alway","anchor","and/or","andd","andmerg","anglar","angular","angular/cdk/drag","angular/cdk/keycod","angular/cdk/overlay","angular/cdk/scrol","angular/common","angular/common/http","angular/cor","angular/form","angular/http","angular/material/autocomplet","angular/material/button","angular/material/card","angular/material/checkbox","angular/material/chip","angular/material/dialog","angular/material/divid","angular/material/expans","angular/material/form","angular/material/icon","angular/material/input","angular/material/list","angular/material/menu","angular/material/radio","angular/material/select","angular/material/sidenav","angular/material/slid","angular/material/snack","angular/material/tab","angular/material/toolbar","angular/material/tooltip","angular/platform","angular/rout","angularfire2","angularfire2/auth","angularfire2/databas","angularfire2/storag","angularfireauth","angularfireauthmodul","angularfiredatabas","angularfiredatabasemodul","angularfirelist","angularfiremodul","angularfiremodule.initializeapp(firebaseconfig","angularfirestorag","angularfirestoragemodul","anonym","anoth","anotherus","anytim","app","app.compon","app.component.html","app.component.scss","appcompon","appl","appli","appmodul","approutingmodul","area","area.fil","arg","args[key","arr","arr.reduce((a","arr.resolvetovalue(p","arraw","array","array'","array):boolean","array):draft","array1.length","array2","array2.length","array>):loomcoord","array[0","array[i","arrow","arrray","artifact","ask","assign","associ","assum","atop","attribut","automat","avail","avoid","b","b_array.reduce((acc:boolean","b_array:array","back","bar","barray","base","base.max","base.min","base_cel","base_clear_i","base_clear_x","base_dim","base_dims.h","base_dims.h*(this.weave.visiblerows.length+2","base_dims.w","base_fill.h","base_fill.i","base_fill.w","base_fill.x","base_fill_i","base_fill_x","basepath","basepath:str","be","befor","begin","belong","below","betetween","better","between","beyond","big","bigger","bitmap","bitstr","black","blob","bm","bm.bounds.height","bm.gettopleft().i","bmp","bmplink","bool","boolean","boolean):boolean","booolean","bootstrap","both","bottom","bottom_hasvalu","bottomright","boudari","bound","boundari","bounds.bottom","bounds.height","bounds.height/this.scal","bounds.left","bounds.right","bounds.top","bounds.topleft","bounds.topleft.i","bounds.topleft.x","bounds.width","bounds.width/this.scal","bounds:bound","branch","break","brine","bring","brows","browser","browser.get","browser/anim","browseranimationsmodul","browsermodul","brush","bug","build","button_color","c","c+\"10","c.end.i","c.isset","c.setheddle(fals","c.setheddle(newv","c.setheddle(tru","c.start.i","c2","calcul","call","came","canva","canvas.getcontext('2d","canvas.height","canvas.width","canvas_zndx","canvas_zndx:numb","canvasel","canvastobmp","care","case","case'maskinvert","catch(error","categori","cccccc","cdkdragdrop","cell","cell(b","cell.isset","center","chang","changedesignmod","changedesignmode(nam","changedetectionstrategi","check","child","child.select","children","chip","circl","circle.arc(left+dims.w/2","circuit","class","clear","clearalldata","clearalldata(warp","clearev","clearevent(b","clearevent(b:boolean","clearlay","clearlocalstorag","clearselect","clearset","cleartieupcol","cleartieupcol(i","cleartieuprow","cleartieuprow(i","cli","click","clone","clonecol","clonecol(i","clonedeep","clonedeep(draft","clonedeep(this.preview.draft.pattern","clonedeep(this.weave.pattern","clonerow","clonerow(i","close","closesnackbar","closest","cm","code","col","col.find((el","col/row","collaps","collapsed:boolean","collect","colmaterialmap","color","colorchang","colorchange(","colorpickermodul","colshuttlemap","colshuttlepattern","colsystemmap","colsystempattern","coltoshuttl","coltoshuttle(col","coltosystem","coltosystem(col","column","column/warp","combin","come","comma","commonmodul","commun","compar","compon","componentfactoryresolv","comput","computecellcolor","computecellcolor(ink","computecellvalu","computecellvalue(ink","computefilt","computefilter(ink","computeheddlevalu","computeheddlevalue(p","computeheddlevalue(p:point","computeyarnpath","condens","conduct","config","config.fram","config.treadl","conflict","connect","connection.component.html","connection.component.scss","connection.modal.html","connection.modal.scss","connection/connection.compon","connectioncompon","connectionmod","consol","console.log","console.log(","console.log(\"cal","console.log(\"chang","console.log(\"compon","console.log(\"cr","console.log(\"delet","console.log(\"design","console.log(\"draw","console.log(\"el","console.log(\"fil","console.log(\"had","console.log(\"i","console.log(\"in","console.log(\"interp","console.log(\"loc","console.log(\"loom","console.log(\"next","console.log(\"not","console.log(\"on","console.log(\"open","console.log(\"prev","console.log(\"reinit","console.log(\"restor","console.log(\"row","console.log(\"row/last.row","console.log(\"select","console.log(\"send","console.log(\"set","console.log(\"unit","console.log(\"upd","console.log(\"valu","console.log(\"warn","console.log(\"zoom","console.log('restor","console.log(c","console.log(d","console.log(data","console.log(e.target.nam","console.log(error","console.log(event.valu","console.log(i","console.log(obj","console.log(pattern","console.log(result","console.log(select","console.log(this.draft.id","console.log(this.ink","console.log(this.warp_system","console.log(this.zndx","const","construct","constructor","constructor(@inject(mat_snack_bar_data","constructor(af","constructor(data","constructor(design_mod","constructor(dialog","constructor(dialogref","constructor(el","constructor(fil","constructor(file:fil","constructor(http","constructor(ink","constructor(obj","constructor(p","constructor(priv","constructor(set","constructor(shape_canva","constructor(shuttledict","constructor(systemdict","constructor(typ","constructor(undefin","constructor(upsvc","constructor(view_fram","constructor({...param","consum","contain","containi","context","context.getimagedata(bounds.topleft.x","contin","control","convert","coord","coordin","coordinatesoften","coorespond","copi","copyarea","copyev","copyevent(","copyset","copyupd","core","core/core.modul","core/modal/init/init.mod","core/modal/pattern/pattern.mod","core/model/canvas2imag","core/model/cel","core/model/datatyp","core/model/draft","core/model/loom","core/model/pattern","core/model/shuttl","core/model/system","core/model/timelin","core/provider/pattern.servic","coremodul","corner","corners[0].i","corners[0].j","corners[1].i","corners[1].j","correspond","count","counter","counter:numb","counter_limit","countoccurr","counton","countones(array","coverag","creaet","creat","createandsetpreview","createandsetpreview(d","createconnect","createconnection(shuttl","createdat","createimagefromblob","createimagefromblob(imag","createlay","creatematerial(","createpattern","createpattern(","createpattern(obj","createshuttl","createshuttle(","createsubdraft","createsubdraft(d","createwarpsystem","createwarpsystem(","createweftsystem","createweftsystem(","ctx","ctx.drawimage(imag","ctx.getimagedata(0,0","ctx.imagesmoothingen","ctx.mozimagesmoothingen","ctx.msimagesmoothingen","ctx.webkitimagesmoothingen","current","current_view","currentpo","currentpos.i","currentpos.j","currentpos.si","currentpos:interlac","currentupload","cx","cx.arcto(left+dims.w/2","cx.beginpath","cx.fill(circl","cx.fillrect(left","cx.fillrect(left+j*base_dims.w","cx.fillstyl","cx.lineto((x+1)*base_dims.w","cx.lineto(left","cx.lineto(left+dims.w","cx.lineto(left+dims/2","cx.lineto(left+margin","cx.linewidth","cx.moveto((x+1)*base_dims.w","cx.moveto(left","cx.moveto(left+dims.w,top","cx.moveto(left+dims.w/2,top+dims.h/2","cx.moveto(left+dims/2","cx.moveto(left+margin+warp_width","cx.moveto(left,top","cx.setlinedash([dims.w/20,dims.w/4","cx.shadowcolor","cx.shadowoffseti","cx.shadowoffsetx","cx.stroke","cx.stroke(circl","cx.strokestyl","cxthread","cxtieup","cxtreadl","cxwarpmateri","cxwarpsystem","cxweftmateri","cxweftsystem","cycl","d","d.set","d3","d3.select(this.svgel).style('display","d3.select(this.svgselectcol).style('display","d3.select(this.svgselectrow).style('display","d_log","d_log[0].timestamp","d_log[d].timestamp","data","data.density_unit","data.loomtyp","data.material_typ","data.shuttl","data.type).charat(0).touppercas","data.type).slice(1","data.warp","databas","datatyp","date","date.now","date.now().tostring(36","db","de","declar","deep","default","default_pattern","default_patterns:ani","defin","definit","deisgn","deisgnmod","delet","delete_bottom","delete_top","deletecol","deletecol(i","deleteconnect","deleteconnection(lineid","deletefiledata","deletefiledata(key","deletefilestorag","deletefilestorage(nam","deletefilestorage(name:str","deletenrowsfromback","deletenrowsfromback(n","deletenrowsfromfront","deletenrowsfromfront(n","deleterow","deleterow(i","deleterows(amount","deletesinglerow","deletesinglerow(si","deleteupload","deleteupload(upload","delt","densiti","density_unit","densityunit","densityunits,materialtyp","deploy","describ","descript","design","design_act","design_mod","design_tool","designact","designactionchang","designactionchange(","designmod","designmodechang","designmodechange(","designmodechanged(nam","designmodesservic","destori","detail","detectfil","detectfiles(ev","determin","dev","develop","dialog","dialogref","dialogref.afterclosed().subscribe(result","diff","diff/50","differ","dim","dimi","dims.h","dims.h/2","dims.w","dims.w/2","dims:ani","dir","direct","directives/weave.direct","directive|pipe|service|class|modul","directori","disabl","disable_drag","disabledrag","dist","div","div.offsetparent.scrollleft","div.offsetparent.scrolltop","div.style.transform","div:htmlel","divviewfram","divwasi","divwesi","document","document.getelementbyid(\"scratch","document.getelementbyid('scrol","document.getelementbyid(this.draft.id.tostr","document.writ","doesn't","don't","dooverlap","dooverlap(l1","dooverlap(l1:point","down","download","downloadada","downloadbmp","downloadlink","downloadlocalstorag","downloadprint","downloadwif","draft","draft(json.parse(d","draft({id","draft({nam","draft({weft","draft):subdraftcompon","draft.it","draft.visiblerow","draft.visiblerows[si","draft_i","draft_j","draft_width","draftcontain","draftel","draftelement:ani","draftinterfac","drafttowif","dragdropmodul","dragend","dragend($ev","dragmov","dragmove($ev","dragstart","dragstart($ev","draw","drawblank","drawblank(cx","drawcel","drawcell(cx","drawcell(ndx","drawdown","drawdown.map(el","drawdown[ndx.i","drawdraft","drawdrawdown","drawer","drawgrid","drawgrid(cx","drawingif","drawloomst","drawloomstates(upd","drawn","drawondrawdown","drawondrawdown(currentpo","drawonmask","drawonmask(currentpo","drawonthread","drawonthreading(currentpo","drawontieup","drawontieups(currentpo","drawontreadl","drawontreadling(currentpo","drawonwarpmateri","drawonwarpmaterials(currentpo","drawonwarpselector","drawonwarpselectors(currentpo","drawonweftmateri","drawonweftmaterials(currentpo","drawonweftselector","drawonweftselectors(currentpo","drawselect","drawselection(ndx","drawstart","drawwarp","drawwarpmateri","drawwarpmaterialcel","drawwarpmaterialcell(cx","drawwarpmaterials(cx","drawwarps(cx","drawwarpselectorcel","drawwarpselectorcell(cx","drawwarpsov","drawwarpsystem","drawwarpsystems(cx","drawweftbottomleft","drawweftbottomleft(top","drawweftbottomright","drawweftbottomright(top","drawweftend","drawweftend(top","drawweftleftup","drawweftleftup(top","drawweftmateri","drawweftmaterialcel","drawweftmaterialcell(cx","drawweftmaterials(cx","drawweftov","drawweftover(top","drawweftrightup","drawweftrightup(top","drawweftselectorcel","drawweftselectorcell(cx","drawweftstart","drawweftstart(top","drawweftsystem","drawweftsystems(cx","drawweftund","drawweftunder(top","drawweftup","drawweftup(top","drawwithmateri","drawwithmaterial(","drop","due","dx","dyanic","dynam","dynamicallycr","e","e.bitmap","e.data","e.epi","e.height","e.id","e.loomtyp","e.nam","e.pattern","e.sourc","e.target.nam","e.typ","e.unit","e.valu","e.value.loomtyp","e.value.unit","e.warp","e.weft","e.width","e2","e2e/app.po.t","each","eas","east","eddl","el","el.draft.pattern","el.haspoint(p","el.id","el.valu","electron","element","element(by.css('app","element.isset","element.isup","element.ondeletecalled.unsubscrib","element.onsubdraftdrop.unsubscrib","element.onsubdraftmove.unsubscrib","element.onsubdraftstart.unsubscrib","element[j","element[ndx.j","elementat","elementref","elment","emit","empti","enabl","enable_ink","enabled:boolean","enabledrag","enableprodmod","end","endlabel","endposit","endposition.i","endposition.x","endsget","ensur","enter","entir","entrycompon","environ","environments/secret","epi","epichang","epichange(","epichange(e:ani","epichange(f","equal","equals(array1","eras","error","etc","event","event.clientx","event.shiftkey","event.target","event.target.fil","event.target.id","event.target.id===\"drawdown","event.target.id===\"treadl","event.target.localnam","event.typ","event.valu","eventemitt","exampl","execut","exist","expand","experiment","export","extend","f.value.epi","f.value.fram","f.value.treadl","f.value.warp","f.value.weft","f.value.width","fa","fabric","factori","fafafa","fals","false,true],[false,tru","far","faster","favorit","ff4081","ffffff","field","file","file.name.split(\".\").pop","file.name.split(\".\")[0","file:fil","filelist","filenam","fileread","filetyp","fill","fill(id","fill(pattern","fill_circl","fill_pattern","fill_rect","fillarea","fillarea(select","fillev","fillevent(id","filter","filterpip","final","find","findsmallestelmtbiggerthan","findsmallestelmtbiggerthan(n","findsmallestgap","findsmallestgap(array","firebas","firebase/app","firebaseconfig","first","flag","flag_histori","flag_recomput","flip","flip_i","flip_x","fom","for(i","for(let","for(var","form","form.compon","form.component.html","form.component.scss","form.component.t","form/upload","format","formbuild","formcontrol","formgroup","formsmodul","forward","found","found:designmod","frame","frame/threadl","frame_map","framechang","framechange(","framechange(e:ani","frames/treadl","free","freeform","freehand","frequent","fromev","fromevent(event.target","fronott","front","fruit","fulli","function","functionalityto","further","futur","g","g.j","gener","generateid","get","getadjust","getadjusted(p","getaffecteddrawdownpoint","getaffecteddrawdownpoints(obj","getbool","getbool(v","getbottommost","getbottommost(main","getbottommost(main:subdraftcompon","getcelldim","getcelldims(typ","getchar","getcolor","getcolor(index","getcolorcol","getcolorcol(index","getcolort","getcolortable(","getcoltoshuttlemap","getcoltoshuttlemapping(","getcombinedbound","getcombinedbounds(mov","getcombineddraft","getcombineddraft(bound","getconfig","getconfig(ndx","getconfig(ndx:interlac","getcurrentview","getdirect","getdirection(neighbor","getdownloadurl","getdownloadurl(id","getdraft","getdraftfromlocalstor","getdraftid","getemptyfram","getemptytreadl","getfrontlay","getfrontlayer():numb","getheddl","getheddle():boolean","getid","getimagedata","getink","getink(nam","getinks():array","getint","getint(v","getinterpolationdim","getinterpolationdims(typ","getintersectingsubdraft","getintersectingsubdrafts(primari","getintersectingsubdraftsforpoint","getintersectingsubdraftsforpoint(p","getintersectionbound","getintersectionbounds(primari","getleft","getleftmost","getleftmost(main","getleftmost(main:subdraftcompon","getmaskid","getmod","getmode(nam","getnam","getnextpath","getnextpath(path","getoffset","getoffset(typ","getparagraphtext","getpattern","getpol","getrightmost","getrightmost(main","getrowtoshuttlemap","getrowtoshuttlemapping(","getscratchpadbound","getscratchpadproduct","getscratchpadproduct(ndx","getselect","getselected():array","getselected():str","getselectionbound","getselectionbounds(c1","getstr","getstring(v","getsubdraft","getsubdraft(id","getsubdraft(id:numb","getsubdraftsintersectingselect","getsubdraftsintersectingselection(select","getsubstringaft","getsubstringafter(v","gettarget","gettargetid","gettextinterv","getthick","getthread","getthreading(","gettieup","gettieups(","getto","getto():ani","gettop","gettopleft","gettopmost","gettopmost(main","gettreadl","gettreadling(","gettyp","getwarpsystemcod","getwarpsystemcode(index","getweftsystemcod","getweftsystemcode(index","getzoom","give","given","go","grid","guid","h","h1')).gettext","hack","had_merg","hammer_gesture_config","hammergestureconfig","handl","handlefil","handlefile(","handlescrol","handlescroll(data","happen","has_mask","hascel","hascell(i","haseast","haseast():boolean","haseastneighbor","haseastneighbor(i","haseastneighbor(i:numb","hasnorth","hasnorth():boolean","hasnorthneighbor","hasnorthneighbor(i","haspoint","haspoint(p","haspoint(p:point","haspreview","haspreview():boolean","hasselect","hassouth","hassouth():boolean","hassouthneighbor","hassouthneighbor(i","hastieup","hastieup(ndx","haswest","haswest():boolean","haswestneighbor","haswestneighbor(i","header","heddl","height","height:0","help","hepl","hide","hideshuttle(e:ani","hidewarpsystem","hidewarpsystem(","hidewarpsystem(e:ani","hideweftsystem","hideweftsystem(","hideweftsystem(e:ani","histori","historyst","hit","hold","horizont","host","hostlisten","hostlistener('mousedown","hostlistener('mouseleav","hostlistener('mousemov","hostlistener('mouseup","hostlistener('window:keydown.","hostlistener('window:keydown.c","hostlistener('window:keydown.d","hostlistener('window:keydown.m","hostlistener('window:keydown.p","hostlistener('window:keydown.shift.o","hostlistener('window:keydown.shift.p","hostlistener('window:keydown.x","html","htmlcanvasel","htmlelement","http","http://localhost:4200","httpclient","httpclientmodul","httpheader","httpmodul","httpoption","httprespons","https://adacad","https://unstabledesign.github.io","https://unstabledesign.github.io/adacad","i,j","i=0","i_pattern","i_pattern[ndx].isup","ibound","icon","id","id.tostr","identifi","idfromstr","idfromstring(","idx","if(!f.value.epi","if(!f.value.fram","if(!f.value.treadl","if(!f.value.warp","if(!f.value.weft","if(!f.value.width","if(!found","if(!had_merg","if(!mode.enable_ink","if(!this.design_modes.isselected('fre","if(!this.inthreadingrange({i:ndx.i","if(!this.intreadlingrange({i:ndx.i","if(!this.is_set","if(!this.render.isfront","if(!this.render.view_fram","if((isect.gettopleft().i","if((isect.gettopleft().x","if((this.weave.loom.num_treadles)*dims.w","if(a","if(b","if(b_array.length","if(c1.i","if(child.valu","if(config.fram","if(coords.i","if(ctrl","if(currentpos.i","if(currentpos.j","if(currentpos.si","if(d","if(d_log[d].timestamp","if(draft.warps*draft.weft","if(e.check","if(e.sourc","if(e.typ","if(e.warp","if(el.issameboundsas(ibound","if(event.shiftkey","if(event.target","if(fram","if(front","if(i","if(idx","if(ink","if(ink.valu","if(is_up","if(isect.gettopleft().i","if(isect.gettopleft().x","if(isect.length","if(j","if(left","if(len","if(math.abs(this.shape_bounds.width","if(mode.valu","if(mov","if(moving_left","if(ndx.val","if(next_path.row","if(obj","if(obj.pattern","if(overs.length","if(p.i","if(p.x","if(p1","if(p1.i","if(p1.j","if(p_grn","if(params.loom","if(params.loom.thread","if(params.loom.tieup","if(params.loom.treadl","if(params.shuttl","if(params.warp_system","if(r","if(r1","if(result","if(rowmap[ndx","if(selection.target.id","if(set","if(shift","if(start","if(status[old_index","if(target","if(thejson.length","if(this.active_id","if(this.design_mode.nam","if(this.design_modes.isselected(\"draw","if(this.design_modes.isselected(\"mov","if(this.design_modes.isselected(\"select","if(this.design_modes.isselected(\"shap","if(this.design_modes.isselected('draw","if(this.design_modes.isselected('fre","if(this.design_modes.isselected('lin","if(this.design_modes.isselected('mov","if(this.design_modes.isselected('select","if(this.draft.loom.typ","if(this.flag_histori","if(this.flag_recomput","if(this.haseastneighbor(i,j","if(this.haseastneighbor(ndx,j","if(this.haspreview","if(this.haswestneighbor(ndx,j","if(this.height","if(this.inks.getselect","if(this.is_set","if(this.issame(currentpo","if(this.issamendx(this.last","if(this.last","if(this.num_fram","if(this.num_treadl","if(this.pattern[i][ndx].isup","if(this.pattern[ndx][j].isup","if(this.preview","if(this.preview_ref","if(this.render.getcurrentview","if(this.render.isyarnbasedview","if(this.render.showingfram","if(this.render.view_fram","if(this.rowshuttlemapping[ndx","if(this.scratch_pad","if(this.scratch_pad[0","if(this.select","if(this.selection.active)this.processselect","if(this.selection.hasselect","if(this.selection.target.id","if(this.shape_vtxs.length","if(this.shape_vtxs[i].x","if(this.target","if(this.target.id","if(this.threading[ndx.j","if(this.timeline.length","if(this.treadling[ndx.i","if(this.typ","if(this.warp_lock","if(this.weave.warp_systems[system_id].isvis","if(this.zoom","if(treadl","if(typ","if(updates[u].i","if(val","if(valu","if(warp","if(weft","ii","iif","imag","image.crossorigin","image.naturalheight","image.naturalwidth","image.onload","image.src","imagedata","imagetoshow","img","img_data","implement","import","inact","inbound","inch","includ","index","indic","info","inform","informatino","information.it","inherti","init","init.modal.html","init.modal.scss","initail","initi","initmod","inject","inject(mat_dialog_data","ink","ink.select","inkactionchang","inkactionchange(nam","inkchang","inkchanged(","inkchanged(e:ani","inkchanged(nam","inkservic","inlay","input","input('design_mod","input('draft","input('rend","input('timelin","insert","insert:fals","insertcol","insertcol(i","insertrow","insertrow(i","insertrow(i:numb","insertrows(amount","insertsinglerow","insertsinglerow(si","insid","instal","instanc","intefac","integr","interact","interfac","interlac","interlacementv","interlacementval):array","interpol","interpolate(bas","intersect","intersectionpreview","interselct","inthreadingrang","inthreadingrange(ndx","intieuprang","intieuprange(ndx","intreadlingrang","intreadlingrange(ndx","invert","invis","is_preview","is_set","is_up","isbuff","iseast","iseast():boolean","iseastwest","iseastwest():boolean","isect","isect).gettopleft().i","isect).gettopleft().x","isect.bounds.height","isect.bounds.width","isect.filter(el","isect.foreach(el","isect.push(sr","isect:array","isect[0","isect[0].resolvetovalue(p","isects.reduce((acc","isects:array):subdraftcompon","isfront","isinfram","isinframe(warp","isintreadl","isintreadle(weft","ismask","ismask(i","isnortheast","isnortheast():boolean","isnorthsouth","isnorthsouth():boolean","isnorthwest","isnorthwest():boolean","issam","issame(p1","issameboundsa","issameboundsas(bound","issamendx","issamendx(p1","isselect","isselected(nam","isselected(name:string):boolean","isset","isset(i","issoutheast","issoutheast():boolean","issouthwest","issouthwest():boolean","isup","isup():boolean","isup(i","isup(i:numb","isvis","iswest","iswest():boolean","isyarnbasedview","item","item[key","iter","j","j+1","j:0","j:j","j:ndx.j","j:number","j=col","j_pattern","j_pattern[ndx].isup","jacquard","jpg","json.stringify(draft","k","k%2","keep","key","keyboard","keychangetodrawmod","keychangetodrawmode(","keychangetomov","keychangetomove(","keychangetoselect","keychangetoselect(","keyeventcopy(","keyeventeras","keyeventerase(","keyeventinvert","keyeventinvert(","keyeventpast","keyeventpaste(","keyeventpoint","keyeventpoint(","keyeventselect","keyeventselect(","keyeventzoomin","keyeventzoomin(","keyeventzoomout","keyeventzoomout(","keypress","kind","l1","l1.i","l1.x","l2","l2.i","l2.x","l2:point","label","label.modal.html","label.modal.scss","labelmod","lag","larger","last","last.ndx","last.ndx+1","last.row","last_ndx","last_ndx:interlac","lastpo","layer","layer.createlay","layersservic","ld","leav","left","left+1)*dims.w","left+dims.w","left+dims.w/2","lemon","len","lime","limit","line","link","list","listen","load","loadnew","loadnew(typ","loadrawlog","local","localhost:4200/mix","localhost:4200/weav","localstorag","localstorage.length","localstorage.removeitem(x","locat","locationus","lodash","logic","logstat","logstate(draft","look","looki","loom","loom('fram","loom(params.loom.typ","loom.component.html","loom.component.scss","loom:tru","loomchang","loomchange(","loomchange(e:ani","loomcompon","loomcoord","loomtyp","loomtype:str","loomupd","lower","made","main","main.resolvetovalue(p","maintain","make","makerandompattern","makerandompattern(w","mana","manag","mani","manipul","manual","map","map[i","margin","margin_clear_i","margin_clear_x","margin_fill_i","margin_fill_x","mask","mask_id","maskarea","maskarea(pattern","maskeras","maskev","maskevent(","maskpoint","masks.component.html","masks.component.scss","maskscompon","master","mat_dialog_data","mat_snack_bar_data","matautocomplet","matautocompletemodul","matautocompleteselectedev","matautocompletewash","matautocompletewasi","matautocompletewesh","matautocompletewesi","matbuttonmodul","matbuttontogglemodul","matcardmodul","match","matcheckboxmodul","matchipinputev","matchipsmodul","matdialog","matdialogconfig","matdialogmodul","matdialogref","matdividermodul","mateial","materi","material.modal.html","material.modal.scss","material_typ","material_types:this.material_typ","materialmod","materials.component.html","materials.component.scss","materialscompon","materialtyp","matexpansionmodul","matformfieldmodul","math.abs(this.start.j","math.abs(this.start.si","math.ceil((10","math.ceil(f.value.fram","math.ceil(f.value.treadl","math.ceil(f.value.width","math.ceil(selection.height","math.ceil(selection.width","math.floor((event.offseti","math.floor((event.offsetx","math.floor((p.i","math.floor((p.x","math.floor(bounds.height","math.floor(bounds.width","math.floor(bounds.width/scal","math.floor(date.now","math.floor(event.offseti","math.floor(math.random()*16777215).tostring(16","math.max(max_ndx","math.max(scalex","math.max(this.shape_bounds.width","math.min(max","math.min(min_ndx","math.min(scalex","math.min(selection.start.i","math.min(selection.start.j","math.min(selection.start.si","math.min(this.selection.start.j","math.min(this.selection.start.si","math.min(this.start.j","math.min(this.start.si","math.pi","math.random().tostring(36).substr(2","math.random().tostring(36).substring(2","maticonmodul","matinputmodul","matlistmodul","matmenumodul","matradiomodul","matselectmodul","matsidenavmodul","matslidermodul","matslidetogglemodul","matsnackbar","matsnackbarmodul","mattabsmodul","matter","mattoolbarmodul","mattooltipmodul","max","max_ndx","max_ndx+1","max_ndx:numb","max_siz","maxmsp","maxofpositivelist","maxofpositivelist(array","mechan","menu","merg","mergesubdraft","mergesubdrafts(primari","metadata","method","min","min:numb","min_fram","min_ndx","min_ndx:numb","min_treadl","minelmtbiggerthann","minelmtbiggerthann[i","minimum","minoflist","minoflist(array","mirrori","mirrorx","miscellan","mixer","mixer.compon","mixer.component.html","mixer.component.scss","mixer/mixer.compon","mixer/mixer.modul","mixer/provider/designmodes.servic","mixer/provider/ink.servic","mixer/provider/layers.servic","mixercompon","mixerdesign","mixerdesign.component.html","mixerdesign.component.scss","mixerdesigncompon","mixermodul","mixerpattern","mixerpatterns.component.html","mixerpatterns.component.scss","mixerpatternscompon","mixerview","mixerview.component.html","mixerview.component.scss","mixerviewcompon","modal","modal/about/about.mod","modal/connection/connection.mod","modal/init/init.mod","modal/label/label.mod","modal/material/material.mod","modal/pattern/pattern.mod","modal/shuttles/shuttles.mod","mode","mode.children.foreach(child","mode.enable_ink","mode.select","mode.uses_mask","mode:ink","model","model/shap","modes.foreach(mod","modul","more","mous","mouse.i","mouse.x","mouse:point","mousedown","mouseleav","mousemov","mousemove').subscribe(","mousestart","mouseup","move","moveiteminarray","movesubscript","moving.drawdraft","moving_left:boolean","mutip","n","n,n","n:number","name","name:'toggl","name:str","navig","navigateto","ndx","ndx.i","ndx.i*this.scal","ndx.j","ndx.val","ndx:ani","ndx:interlac","ndxcheck","nearest","neccessari","need","neq","nest","never","new","new_draft","new_epi","new_warp","newest_stamp","newlay","newval","newval:boolean","next","next_max_ndx","next_max_ndx:numb","next_min_ndx","next_min_ndx:numb","next_path","next_path.overs[0","next_path.overs[next_path.overs.length","ng","ngafterviewinit","ngform","ngmodul","ngondestroy","ngoninit","ngx","non","none","north","note","notes.component.html","notes.component.scss","noteschang","noteschanged(","noteschanged(e:ani","notescompon","notesvaluechang","noth","now","npm","null","num","num:numb","num_fram","num_treadl","numb","number","number):array","nxi","o","obj","obj.data","obj.favorit","obj.id","obj.id.tostr","obj.nam","obj.pattern","obj.pattern.length","obj.pattern[0].length","obj.typ","obj:ani","object","object.a","observ","occur","offer","offset","offset.i","offset.x","offset_i","offset_x","old","old_index","oldest_stamp","on","onaboutcr","onal","onchang","onclear","onclear(b","onclear(b:boolean","oncolorchang","onconnectioncr","oncopi","oncreatepattern","oncreateshuttl","oncreatewarpsystem","oncreateweftsystem","ondata","ondeletecal","ondeletesubdraftcal","ondeletesubdraftcalled(obj","ondesignmodechang","ondesignmodechange(","ondesignmodechange(e:ani","ondestroy","ondrag","ondrag(ev","onend","onend(ev","onepinumchang","onfil","onfill(","onframechang","onhidewarpsystem","onhideweftsystem","oninit","oninkchang","onlabelcr","onloomtypechang","onmask","onmask(","onmov","onmove(ev","onnewdraftload","onnewselect","onnoclick","onpast","onpaste(","onpatternchang","onredo","onreinit","onremovepattern","onsav","onsave(","onscrol","onshowwarpsystem","onshowweftsystem","onstart","onstart(ev","onsubdraftdrop","onsubdraftmov","onsubdraftstart","onthicknesschang","onto","ontreadlechang","onundo","onundoredo","onunitchang","onupdatewarpshuttl","onupdatewarpsystem","onupdateweftshuttl","onupdateweftsystem","onviewchang","onviewfront","onwarpnumchang","onweftnumchang","onwindowscrol","onwindowscroll(data","onzoomchang","open","openaboutdialog","openconnectiondialog","opendialog","opendialog(shuttl","openlabeldialog","opennewfiledialog","openpatterndialog","openpatterndialog(pattern","oper","operation.component.html","operation.component.scss","operationcompon","opt","orang","order","origin","other","out","outbound","outlin","output","outsid","over","over.getheddl","overlap","overlay","overs.concat([idx","overs.length","overs.pop","overs.shift","overs[o","overshot","overview","p","p.i","p.pipe","p.x","p1.i","p1.j","p2","p2.i","p2.j","p2:ani","p2:interlac","p:number","p:pattern","pad","palett","palette.component.html","palette.component.scss","palette/connection/connection.compon","palette/operation/operation.compon","palette/palette.compon","palette/selection/selection.compon","palette/snackbar/snackbar.compon","palette/subdraft/subdraft.compon","palettecompon","param","param0","paramet","params.connect","params.epi","params.is_set","params.is_up","params.label","params.loom.num_fram","params.loom.num_treadl","params.loom.thread","params.loom.tieup","params.loom.treadl","params.mask","params.mask_id","params.nam","params.not","params.pattern","params.pol","params.shuttl","params.unit","params.visiblerow","params.warp","params.warp_system","params.weft","parent","past","pasteev","pasteevent(","pasteevent(typ","path","path2d","path[k].ov","pathmatch","pattern","pattern(patterns[i","pattern(res.body[i","pattern(single_pattern","pattern({nam","pattern({pattern","pattern({width","pattern.height","pattern.length","pattern.modal.html","pattern.modal.scss","pattern.setpattern(this.select","pattern.width","pattern[0].length","patternmod","patterns.component.html","patterns.component.scss","patterns[i","patternscompon","patternservic","pen","per","percentag","perform","pic","picker","pingneighbor","pingneighbors(i","pipe","pipe/filter.pip","pipetransform","pixel","place","placehold","plu","point","poistion","poitn","pole","polygon","popup","posit","possibl","present","press","presstrigg","prev","preview","preview_ref","previou","primari","primary.bounds.height","primary.bounds.width","primary.draft.id","primary.draft.id.tostr","primary.draft.nam","primary.drawdraft","primary.gettopleft().i","primary.gettopleft().x","primary.scal","primary.setcomponentposition(bounds.topleft","primary.setnewdraft(temp","primary_bottomright","primary_topleft","print","print(","printlink","printpattern","printpattern(pattern","privat","problem","processdata(","processdraftdata","processdraftdata(obj","processdrawingend","processimagedata","processimagedata(obj","processselect","processshapeend","processwifdata","processwifdata(obj","prod","product","progress","progress:numb","project","properti","protractor","protractor.befor","provid","providedin","provider/ink.servic","provider/layers.servic","provider/pattern.servic","proweav","ps","pt","pts.push(format","pts.push(new","public","push","pushupload","pushupload(upload","question","r1","r1.i","r1.x","r1:point","r2","r2.i","r2.x","r2:point","randomcolor","rang","re","reactiveformsmodul","read","reader","reader.addeventlistener(\"load","reader.readasdataurl(imag","reader.result","readm","realtim","recalcul","recalculatedraft","recalculatedraft(tieup","receiv","recent","recomput","recomputeloom","recomputewidth","rectanbl","rectangl","rectangular","redirectto","redo","redo_dis","redoclick","redoclicked(","redoclicked(e:ani","redoitem","redraw","redraw(flag","redrawcol","redrawcol(x","redrawdraft","redrawloom","redrawrow","redrawrow(i","redrawvisualview","redrawyarnview","refer","referenc","reflect","region","reinit","reinit(result","rel","relationship","releas","reload","reload(undefin","reloadcel","reloadcell(param","reloadformix","reloadformixer(undefin","remov","remove(cal","removepattern","removepattern(","removepattern(pattern","removepreview","removesubdraft","removesubdraft(subdraft","removesubscript","render","render(fals","render:ani","renderchang","renderchange(","renderchange(ev","renderer2","reorient","replac","repo","repopul","repres","requir","res.bodi","resampl","resample(row","rescal","rescale(scal","rescale(scale:numb","reset","resetframemap","resetframemapping(fram","resetthread","resetthreading(warp","resettieup","resettieup(fram","resettreadl","resettreadling(weft","resist","resiz","resolv","resolvecoordstondx","resolvecoordstondx(p","resolvendxtopoint","resolvendxtopoint(ndx","resolvendxtopoint(ndx:interlac","resolvepointtoabsolutendx","resolvepointtoabsolutendx(p","resolvepointtoabsolutendx(p:point","resolvepointtondx","resolvepointtondx(p","resolvepointtondx(p:point","resolvetovalu","resolvetovalue(p","resolvetovalue(p:point","respect","respons","responsetyp","rest","restor","restorenexthistoryst","restoreprevioushistoryst","restoreprevioushistorystate():draft","result","results.push(item","retreiv","return","return((p","return((this.pol","return(nam","return(p","reveal","revers","reversedmap","reversedmapping.push(coltoshuttlemapping[i","right","rm","rm.bounds.width","rm.gettopleft().x","root","rout","routermodul","routermodule.forroot(rout","routing.modul","routing.module.t","row","row.filter(cel","row/col","row/column","row/weft","row_values.reduce((ov","rowmap","rowmap.push(active_cells.length","rowmaterialmap","rowshuttlemap","rowshuttlepattern","rowsystemmap","rowsystempattern","rowtoshuttl","rowtoshuttle(screen_row","rowtoshuttlemap","rowtosystem","rowtosystem(screen_row","run","rund","rxj","rxjs/oper","s","s0","s1","s2","s3","same","save","save(f","saveada","saveada(filenam","saveasada","saveasada(","saveasbmp","saveasbmp(","saveasprint","saveasprint(","saveaswif","saveaswif(","savebmp","savebmp(filenam","savefiledata","savefiledata(upload","savepng","savepng(filenam","saveprintabledraft","saveprintabledraft(filenam","savewif","savewif(filenam","sc","sc.disabledrag","sc.drawdraft","sc.setcomponentbounds(bound","sc.setnewdraft(new_draft","sc:subdraftcompon","scaffold","scale","scale:numb","scaletocov","scaletofit","scaley","scan","schemat","schematic.component.html","schematic.component.scss","schematiccompon","scoll","scratch_pad","scratchpad","screen","screen_i","screen_row","screenus","scribbl","scroll","scroll_left","scroll_top","scrolldispatch","scrollingmodul","scrollingsubscript","sd","sd.disabledrag","sd.draft.pattern","sd.enabledrag","sd.push(","sd.push(si","sd.rescale(scal","sd.setaspreview","sd.setcomponentposition(to_right","sd.setcomponentsize(this.preview.bounds.width","sd_draft","search","second","secret","see","seem","segment","select","select(nam","select_i","select_x","selected(sourc","selected:fals","selected:str","selected_ink:str","selectedfil","selectedhasinken","selectedhasinkenabled():boolean","selectedhasmask","selectedhasmask():boolean","selection.bounds.height","selection.bounds.topleft","selection.bounds.topleft.i","selection.bounds.topleft.x","selection.bounds.width","selection.end.i","selection.end.j","selection.end.si","selection/selection.compon","selectioncompon","selectionstart","selector","self","send","sendupd","sendupdates(sourc","sent","separatorkeyscod","sequenc","serci","serv","server","servic","set","setaspreview","setcel","setcell(ndx","setcolor","setcolor(color","setcomponentbound","setcomponentbounds(bound","setcomponentposit","setcomponentposition(point","setcomponents","setcomponentsize(width","setcurrentview","setcurrentview(view","setcurrentview(view:str","seteast","seteast(row","seteastneighbor","seteastneighbors(i","seteastwest","seteastwest(row","setfrom","setfrom(from","setfront","setfront(valu","setfront(value:boolean","setheddl","setheddle(i","setheddle(valu","setheddle(value:boolean","setheddledown","setheddleup","setid","setid(id","setmask","setmask(i","setmaskid","setmaskid(id","setminfram","setminframes(fram","setminframes(frames:numb","setmintreadl","setmintreadles(treadl","setmintreadles(treadles:numb","setnewdraft","setnewdraft(temp","setnorth","setnorth(row","setnorthneighbor","setnorthneighbors(i","setnorthneighbors(i:numb","setnorthsouth","setnorthsouth(row","setparamet","setpattern","setpattern(pattern","setpol","setpoles(pol","setpoles(poles:numb","setposanddraw","setposanddraw(target","setpositionands","setpositionandsize(bound","setsouth","setsouth(row","setstaticpositionandsize(bound","sett","settarget","settarget(t","setthick","setthickness(n","setto","setto(to","setto(to:ani","settyp","settype(typ","setup","setvis","setvisible(bool","setvisible(vis","setvisible(visible:boolean","setwest","setwest(row","setwestneighbor","setwestneighbors(i","setwestneighbors(i:numb","setzoom","setzoom(z","shaft","shape","shape.getdraft","shape_bound","shape_bounds:bound","shape_canva","shape_canvas.getcontext('2d","shape_canvas.todataurl(\"image/png","shape_vtx","shape_vtxs:array","shapedrag","shapedragged(mous","shapes:array","shapestart","shapestarted(mous","shift","shift+o","shift+o.set","shift+p","shift_left","shift_up","shiftleft","shiftup","shoudl","show","showingfram","showingframes():boolean","shown","showshuttle(e:ani","showwarpsystem","showwarpsystem(","showwarpsystem(e:ani","showweftsystem","showweftsystem(","showweftsystem(e:ani","shut","shutf","shuttl","shuttle(shuttles[i","shuttle({id","shuttle,system","shuttle.color","shuttle.getcolor","shuttle.getcolor()+\"10","shuttle.getthickness()/100","shuttle.id","shuttle.insert","shuttle.typ","shuttle:numb","shuttle_id","shuttlecolorchang","shuttledict","shuttleid","shuttleidfromnam","shuttleidfromname(","shuttles.modal.html","shuttles.modal.scss","shuttlesmod","si","side","signal","simul","singl","sit","size","sizes.it","slash","slider","smaller","smallestelmtbiggerthan","snackbar","snackbar.component.html","snackbar.component.scss","snackbar/snackbar.compon","snackbarcompon","snap","snaptogrid","snaptogrid(p","somehow","someth","sourc","specif","specifi","speed","splice","splicepatterncol(i","split","spot","squar","sr","sr.bounds.height","sr.bounds.width","sr.canvas.id.tostr","sr.draft.id.tostr","sr.gettopleft","sr.gettopleft().i","sr.gettopleft().x","sr_bottomright","src/app/app","src/app/app.component.t","src/app/app.module.t","src/app/core/core.module.t","src/app/core/modal/about/about.modal.t","src/app/core/modal/init/init.modal.t","src/app/core/modal/material/material.modal.t","src/app/core/modal/pattern/pattern.modal.t","src/app/core/modal/shuttles/shuttles.modal.t","src/app/core/model/cell.t","src/app/core/model/datatypes.t","src/app/core/model/draft.t","src/app/core/model/loom.t","src/app/core/model/pattern.t","src/app/core/model/shuttle.t","src/app/core/model/system.t","src/app/core/model/timeline.t","src/app/core/model/util.t","src/app/core/ops/oper","src/app/core/pipe/filter.pipe.t","src/app/core/provider/pattern.service.t","src/app/core/tool/materials/materials.component.t","src/app/core/tool/notes/notes.component.t","src/app/core/tool/patterns/patterns.component.t","src/app/core/tool/systems/systems.component.t","src/app/core/topbar/topbar.component.t","src/app/core/uploads/upload","src/app/core/uploads/upload.service.t","src/app/core/uploads/upload.t","src/app/mixer/mixer.component.t","src/app/mixer/mixer.module.t","src/app/mixer/model/shape.t","src/app/mixer/palette/connection/connection.component.t","src/app/mixer/palette/operation/operation.component.t","src/app/mixer/palette/palette.component.t","src/app/mixer/palette/selection/selection.component.t","src/app/mixer/palette/snackbar/snackbar.component.t","src/app/mixer/palette/subdraft/subdraft.component.t","src/app/mixer/provider/designmodes.service.t","src/app/mixer/provider/ink.service.t","src/app/mixer/provider/layers.service.t","src/app/mixer/tool/mixerdesign/mixerdesign.component.t","src/app/mixer/tool/mixerpatterns/mixerpatterns.component.t","src/app/mixer/tool/mixerview/mixerview.component.t","src/app/weaver/directives/weave.directive.t","src/app/weaver/modal/connection/connection.modal.t","src/app/weaver/modal/label/label.modal.t","src/app/weaver/model/render.t","src/app/weaver/model/selection.t","src/app/weaver/tool/loom/loom.component.t","src/app/weaver/tool/masks/masks.component.t","src/app/weaver/tool/schematic/schematic.component.t","src/app/weaver/tool/weaverdesign/weaverdesign.component.t","src/app/weaver/tool/weaverpatterns/weaverpatterns.component.t","src/app/weaver/tool/weaverview/weaverview.component.t","src/app/weaver/weaver.component.t","src/app/weaver/weaver.module.t","sset","st","stage","start","start:interlac","started:boolean","startedcheck","startlabel","startopt","startwith","state","statement","static","statu","stitch","storag","storageref","storageref.child(`${this.basepath}/${name}`).delet","storageref.child(id).getdownloadurl","storageref.put(upload.fil","store","strawberri","string","string.fromcharcode(97","stroke_circl","stroke_rect","stroke_width","struct","structur","style","styleurl","subdraft","subdraft.canvas.id.tostr","subdraft.component.html","subdraft.component.scss","subdraft.hostview","subdraft.inst","subdraft.instance.disabledrag","subdraft.instance.draft","subdraft.instance.ink","subdraft.instance.ondeletecalled.subscribe(this.ondeletesubdraftcalled.bind(thi","subdraft.instance.onsubdraftdrop.subscribe(this.subdraftdropped.bind(thi","subdraft.instance.onsubdraftmove.subscribe(this.subdraftmoved.bind(thi","subdraft.instance.onsubdraftstart.subscribe(this.subdraftstarted.bind(thi","subdraft.instance.pattern","subdraft.instance.scal","subdraft.instance.setaspreview","subdraft.instance.viewport","subdraft/subdraft.compon","subdraft_ref","subdraftcompon","subdraftcomponent|selectioncompon","subdraftdrop","subdraftdropped(obj","subdraftmov","subdraftmoved(obj","subdraftstart","subdraftstarted(obj","subdraftsus","subject","subpattern","subreft","subscrib","subscribe((","subscribe((data","subscript","such","support","sure","svg","svgel","svgselectcol","svgselectrow","switch","switch(e.target.nam","switch(ink","switch(selected_ink","switch(sourc","switch(this.weaveref.selection.target.id","sy","system","system(systems[i","system({id","system.id","system:numb","system_id","systemdict","systemid","systems.component.html","systems.component.scss","systemscompon","t","take","takelast","takeuntil","target","target.id","tell","temp","temp_copi","templateurl","temporari","temppattern","test","text","text'}).subscribe(data","that'","thecompon","thejson","therad","thethread","thick","thickness:50","thickness:numb","thicknesschang","thicknesschange(","thicknesschange(e:ani","thicknesschange(id","thicknesschange(id:numb","thing","this._snackbar.dismiss","this._snackbar.openfromcomponent(snackbarcompon","this.active_id","this.adalink._elementref","this.base_cel","this.base_cell.h.max","this.base_cell.h.min","this.base_cell.margin_clear_x.min","this.base_cell.margin_clear_y.min","this.base_cell.margin_fill_x.min","this.base_cell.margin_fill_y.min","this.base_cell.w.max","this.base_cell.w.min","this.bitmap","this.bitmap.map(el","this.bmplink._elementref","this.bound","this.bounds.height","this.bounds.topleft.i","this.bounds.topleft.x","this.bounds.width","this.brush","this.canva","this.canvas.getcontext(\"2d","this.canvas.height","this.canvas.nativeel","this.canvas.width","this.canvas_zndx","this.canvasel","this.canvasel.getcontext('2d","this.canvasel.height","this.canvasel.width","this.changedesignmode('mov","this.clearevent(fals","this.clearevent(tru","this.clearselect","this.cleartieuprow(i","this.closesnackbar","this.collaps","this.color","this.color=\"#666666","this.colshuttlemapping[index","this.colshuttlepattern","this.colsystemmapping[index","this.colsystempattern","this.computecellcolor(selected_ink","this.computecellvalue(ink","this.computecellvalue(this.inks.getselect","this.computefilter(ink","this.computefilter(main.ink","this.connect","this.connection.end","this.connection.start","this.copi","this.copyarea","this.copyevent(","this.count","this.createandsetpreview(temp","this.createsubdraft(new","this.current_view","this.currentupload","this.currentupload.progress","this.cx","this.cx.clearrect(0","this.cx.fillrect","this.cx.fillrect(0,0,this.canvasel.width,this.canvasel.height","this.cx.fillrect(ndx.j*this.scal","this.cx.fillstyl","this.cx.moveto(this.shape_vtxs[0].x","this.cx.strokerect(bounds.top","this.cx.strokestyl","this.cxthread","this.cxthreading.canvas.height","this.cxthreading.canvas.width","this.cxthreading.clearrect(0,0","this.cxtieup","this.cxtieups.canvas.height","this.cxtieups.canvas.width","this.cxtieups.clearrect(0,0","this.cxtreadl","this.cxtreadling.canvas.height","this.cxtreadling.canvas.width","this.cxtreadling.clearrect(0,0","this.cxwarpmateri","this.cxwarpsystem","this.cxweftmateri","this.cxweftsystem","this.data.shuttl","this.db.list(`${this.basepath}/`).push(upload","this.db.list(`${this.basepath}/`).remove(key","this.default_pattern","this.default_patterns.pattern","this.default_patterns.patterns.filter(pattern","this.default_patterns.push(new","this.deletefiledata(upload.$key","this.deletefilestorage(upload.nam","this.density_unit","this.design_mod","this.design_mode.id","this.design_mode.nam","this.design_modes.getmode(nam","this.design_modes.isselected('shap","this.design_modes.select('draw","this.design_modes.select('mov","this.design_modes.select('select","this.design_modes.select(e.target.nam","this.design_modes.select(nam","this.designmodechang","this.designmodechanged('draw","this.designmodechanged('mov","this.designmodechanged('select","this.dialog.open(aboutmod","this.dialog.open(connectionmod","this.dialog.open(initmod","this.dialog.open(labelmod","this.dialog.open(materialmod","this.dialog.open(patternmod","this.dialogref.clos","this.dialogref.close(nul","this.dialogref.close(this.connect","this.dialogref.close(this.label","this.dialogref.close(this.pattern","this.dialogref.close(this.shuttl","this.divviewfram","this.divwasi","this.divwesi","this.dooverlap","this.dooverlap(primary.gettopleft","this.dooverlap(primary_topleft","this.downloadada","this.downloadbmp","this.downloadprint","this.downloadwif","this.draft","this.draft.addmaterial(e.materi","this.draft.addshuttle(e.shuttl","this.draft.addwarpsystem(e.system","this.draft.clonecol(i","this.draft.clonerow(i","this.draft.computeyarnpath","this.draft.connections.push(result","this.draft.deletecol(i","this.draft.deleterow(i","this.draft.epi","this.draft.fillarea(this.weaveref.select","this.draft.id","this.draft.insertcol(i","this.draft.insertrow(i","this.draft.loom.setminframes(e.valu","this.draft.loom.setmintreadles(e.valu","this.draft.loom.typ","this.draft.nam","this.draft.not","this.draft.pattern","this.draft.patterns[e.id","this.draft.patterns[e.id].pattern","this.draft.recomputeloom","this.draft.recomputewidth","this.draft.reload(d","this.draft.reload(result","this.draft.shuttl","this.draft.unit","this.draft.updateconnections(i","this.draft.updatevis","this.draft.updatewarpshuttlesfrompattern(pattern","this.draft.updatewarpsystemsfrompattern(pattern","this.draft.updateweftshuttlesfrompattern(pattern","this.draft.updateweftsystemsfrompattern(pattern","this.draft.warp","this.draft.weft","this.draftcontain","this.draftcontainer.offsetparent.scrollleft","this.draftcontainer.offsetparent.scrolltop","this.draftcontainer.offsetwidth","this.drawblank(this.cxthreading,this.threadingcanva","this.drawblank(this.cxtieups,this.tieupscanva","this.drawblank(this.cxtreadling,this.treadlingcanva","this.drawcel","this.drawcell(ndx","this.drawdraft","this.drawgrid(this.cxthreading,this.threadingcanva","this.drawgrid(this.cxtieups,this.tieupscanva","this.drawgrid(this.cxtreadling,this.treadlingcanva","this.drawondrawdown(currentpo","this.drawonmask(currentpo","this.drawonthreading(currentpo","this.drawontieups(currentpo","this.drawontreadling(currentpo","this.drawonwarpmaterials(currentpo","this.drawonwarpselectors(currentpo","this.drawonweftmaterials(currentpo","this.drawonweftselectors(currentpo","this.drawselection(ndx","this.drawstart","this.drawwarps(this.cx","this.drawwarpsov","this.drawweftup(i","this.dynamic_s","this.dynamic_tl","this.el.nativeel","this.el.nativeelement.children","this.el.nativeelement.children[0","this.el.nativeelement.children[1","this.el.nativeelement.children[10","this.el.nativeelement.children[11","this.el.nativeelement.children[12","this.el.nativeelement.children[13","this.el.nativeelement.children[2","this.el.nativeelement.children[3","this.el.nativeelement.children[4","this.el.nativeelement.children[5","this.el.nativeelement.children[6","this.el.nativeelement.children[7","this.el.nativeelement.children[8","this.el.nativeelement.children[9","this.end.j","this.end.si","this.endlabel","this.epi","this.favorit","this.fil","this.filenam","this.findsmallestelmtbiggerthan(min,array","this.flag_histori","this.flag_recomput","this.fram","this.from","this.getbottommost(mov","this.getcombinedbounds(mov","this.getcombinedbounds(primari","this.getcombineddraft(bound","this.getdraftfromlocalstor","this.getemptyfram","this.getemptytreadl","this.getink(this.getselect","this.getintersectingsubdrafts(mov","this.getintersectingsubdrafts(primari","this.getintersectingsubdrafts(sc","this.getintersectingsubdraftsforpoint(p","this.getintersectionbounds(mov","this.getintersectionbounds(sc","this.getleftmost(mov","this.getnextpath(path","this.getoffset(type+\"_i","this.getoffset(type+\"_x","this.getrightmost(mov","this.getscratchpadbound","this.getselect","this.getselectionbounds(this.selection.start","this.getsubdraft(obj.id","this.gettopmost(mov","this.height","this.http.get('assets/patterns.json","this.httpclient.get(url","this.httpclient.get(url).subscribe(data","this.id","this.idfromstring(event.option.viewvalu","this.imag","this.imagetoshow","this.img_data","this.ink","this.inks.foreach","this.inks.foreach(ink","this.inks.getselect","this.inks.select('neq","this.inks.select(e.target.nam","this.inks.select(nam","this.insert","this.interpolate({max","this.is_set","this.is_up","this.label","this.last","this.lastpo","this.layer.createlay","this.layers.createlay","this.logstate(draft","this.loom","this.loom.getaffecteddrawdownpoints({warp","this.loom.num_treadl","this.loom.thread","this.loom.tieup","this.loom.treadl","this.loom.treadling.splic","this.loom.treadling.splice(0,n","this.loomtyp","this.makerandompattern(this.loom.num_fram","this.mask","this.mask.splice(i","this.mask.splice(idx,0,data[i","this.mask_id","this.max_s","this.maxofpositivelist(array","this.mergesubdrafts(mov","this.min_fram","this.min_treadl","this.minoflist(array","this.mod","this.modes.foreach","this.movesubscript","this.movesubscription.unsubscrib","this.nam","this.not","this.num_fram","this.num_treadl","this.onaddrow.emit","this.onbrushchange.emit(obj","this.onchange.emit(this.not","this.onclear.emit(b","this.oncolorchange.emit","this.onconnectioncreate.emit","this.oncopi","this.oncopy.emit","this.oncreatepattern.emit(obj","this.oncreatepattern.emit({pattern","this.oncreateshuttle.emit({shuttl","this.ondata.emit(obj","this.ondesignmodechange.emit(e.target.nam","this.ondesignmodechange.emit(nam","this.ondesignmodechange.emit(obj","this.ondrag(","this.onepinumchange.emit({epi","this.onfill.emit(id","this.onfill.emit(obj","this.onfill.emit(p","this.onframechange.emit({valu","this.onhidewarpsystem.emit({systemid","this.onhideweftsystem.emit({systemid","this.oninkchange.emit(e.target.nam","this.onlabelcreate.emit","this.onloomtypechange.emit(e.valu","this.onmask.emit(obj","this.onmove(","this.onnoclick","this.onpast","this.onpaste.emit(obj","this.onpatternchange.emit(obj","this.onredo.emit","this.onreinit.emit(result","this.onremovepattern.emit(pattern","this.onremovepattern.emit({pattern","this.onsave.emit(obj","this.onshowwarpsystem.emit({systemid","this.onshowweftsystem.emit({systemid","this.onthicknesschange.emit","this.ontreadlechange.emit({valu","this.onundo.emit","this.onunitchange.emit(e.valu","this.onupdatewarpshuttles.emit(this.warp_shuttles_pattern","this.onupdatewarpsystems.emit(this.warp_systems_pattern","this.onupdateweftshuttles.emit(this.weft_shuttles_pattern","this.onupdateweftsystems.emit(this.weft_systems_pattern","this.onviewchange.emit(e.valu","this.onviewfront.emit(","this.onwarpnumchange.emit({warp","this.onweftnumchange.emit({weft","this.onwindowscroll(data","this.onzoomchange.emit(","this.palette.designmodechang","this.palette.handlescroll(data","this.palette.inkchang","this.palette.onnewdraftload","this.palette.redraw","this.palette.rescal","this.palette.rescale(scal","this.palette.saveada(e.nam","this.palette.savebmp(e.nam","this.palette.saveprintabledraft(e.nam","this.palette.savewif(e.nam","this.palette.unsetselect","this.pasteevent(","this.pattern","this.pattern.foreach(row","this.pattern.pattern.length","this.pattern.splic","this.pattern.splice(0","this.pattern[i][ndx].seteast","this.pattern[i][ndx].unseteast","this.patterns.findindex(el","this.patterns[ndx].togglefavorit","this.patterns[p].favorit","this.patterns[result.id","this.pol","this.preview","this.preview.bounds.height","this.preview.bounds.width","this.preview.draft.warp","this.preview.draft.weft","this.preview.drawdraft","this.preview.gettopleft","this.preview.scal","this.preview.setcomponentposition(bounds.topleft","this.preview.setnewdraft(temp","this.preview_ref","this.printlink._elementref","this.processdraftdata(","this.processdrawingend","this.processimagedata(","this.processshapeend","this.processwifdata(","this.ps.getpatterns().subscribe((r","this.recalculatedraft(params.loom.tieup","this.redo_dis","this.redraw","this.redrawloom","this.redrawyarnview","this.reinit(result","this.removepreview","this.removesubdraft(el","this.removesubdraft(sd","this.removesubscript","this.render.getcelldims(\"bas","this.render.getcelldims(\"select","this.render.getcelldims(this.design_mode.nam","this.render.getcurrentview","this.render.getzoom","this.render.isfront","this.render.setcurrentview(valu","this.render.setfront(e.check","this.render.setzoom(e.valu","this.render.toggleviewfram","this.render.view_back","this.render.view_fram","this.render.zoom/100","this.render.zoomin","this.render.zoomout","this.resample(math.floor(bounds.height/scal","this.rescal","this.resetframemapping(fram","this.resetframemapping(this.num_fram","this.resetthreading(warp","this.resettieup(fram","this.resettreadling(weft","this.resolvecoordstondx(mous","this.resolvepointtondx(p","this.resolver.resolvecomponentfactory(subdraftcompon","this.rowshuttlemapping.splic","this.rowshuttlemapping.splice(0","this.rowshuttlemapping.splice(idx,0,shuttle.id","this.rowshuttlemapping[row","this.rowshuttlepattern","this.rowsystemmapping.splic","this.rowsystemmapping.splice(0","this.rowsystemmapping[row","this.rowsystempattern","this.savefiledata(upload","this.scal","this.scale/2","this.scratch_pad","this.scratch_pad.length","this.scratch_pad[0].length","this.scratch_pad[ndx.i][ndx.j","this.scrol","this.scrollingsubscript","this.seg","this.select","this.select('draw","this.select('neq","this.select.offset_x.min","this.select.offset_y.min","this.selected.find(el","this.selected.foreach","this.selected.push(child","this.selected.push(mod","this.selected.valu","this.selectedfil","this.selectedfiles.item(0","this.selection.act","this.selection.end","this.selection.end.i","this.selection.end.j","this.selection.end.si","this.selection.height","this.selection.scal","this.selection.setparamet","this.selection.setpositionandsize(bound","this.selection.settarget(this.canvasel","this.selection.settarget(this.threadingcanva","this.selection.settarget(this.tieupscanva","this.selection.settarget(this.treadlingcanva","this.selection.settarget(this.warpmaterialscanva","this.selection.settarget(this.warpsystemscanva","this.selection.settarget(this.weftmaterialscanva","this.selection.settarget(this.weftsystemscanva","this.selection.start","this.selection.start.i","this.selection.start.i*this.scal","this.selection.start.j","this.selection.start.j*this.scal","this.selection.start.si","this.selection.unsetparamet","this.selection.width","this.selectionstart","this.setcell(ndx","this.seteast","this.seteast(row","this.setnorth","this.setnorth(row","this.setnorthsouth(j","this.setposanddraw(event.target","this.setsouth","this.setsouth(row","this.setsouth(row,max_ndx+1","this.setwest","this.setwest(row","this.shape_bound","this.shape_bounds.height","this.shape_bounds.topleft","this.shape_bounds.topleft.i","this.shape_bounds.topleft.x","this.shape_bounds.width","this.shape_bounds.width,this.shape_bounds.height","this.shape_vtx","this.shape_vtxs.length","this.shape_vtxs.push(mous","this.shape_vtxs[0].i","this.shape_vtxs[i].i","this.shape_vtxs[i].x","this.shapedragged(mous","this.shapestarted(mous","this.shuttl","this.shuttleidfromname(event.option.viewvalu","this.shuttles[col","this.shuttles[id","this.shuttles[id].setthickness(thick","this.shuttles[result.id","this.shuttles[warp_id].getcolor","this.shuttles[warp_id].getnam","this.shuttles[weft_id].getcolor","this.shuttles[weft_id].getnam","this.siz","this.st.ref","this.st.ref(id","this.st.ref(nam","this.startlabel","this.static_tl","this.subdraft","this.subdraft_ref","this.subdraft_refs.filter(sr","this.subdraft_refs.find((sr","this.subdraft_refs.find(sr","this.subdraft_refs.findindex((sr","this.subdraft_refs.foreach(el","this.subdraft_refs.foreach(sd","this.subdraft_refs.foreach(sr","this.subdraft_refs.push(subdraft.inst","this.subdraft_refs.splice(ndx","this.svgel","this.svgselectcol","this.svgselectrow","this.target","this.target.id","this.temppattern","this.thick","this.thickness=100","this.threading[j","this.threading[ndx.j","this.threadingcanva","this.threadingcanvas.getcontext('2d","this.threadingcanvas.height","this.threadingcanvas.width","this.tieup.length","this.tieup.splice(i","this.tieup[0].length","this.tieup[i][j","this.tieup[ndx.i][ndx.j","this.tieupscanva","this.tieupscanvas.getcontext('2d","this.tieupscanvas.height","this.tieupscanvas.width","this.timelin","this.timeline.addhistorystate(this.draft","this.timeline.addhistorystate(this.weav","this.timeline.length","this.timeline.pop","this.timeline.restorenexthistoryst","this.timeline.restoreprevioushistoryst","this.timeline.splice(0","this.timeline.unshift(st","this.timeline[this.active_id].draft","this.to","this.treadl","this.treadling[i","this.treadling[j","this.treadling[ndx.i","this.treadlingcanva","this.treadlingcanvas.getcontext('2d","this.treadlingcanvas.height","this.treadlingcanvas.width","this.typ","this.undo_dis","this.unit","this.unsetselect","this.unsubscribe$.complet","this.unsubscribe$.next","this.updateconfig(this.getconfig(ndx","this.updatenumframesfromthread","this.updatenumtreadlesfromtreadl","this.updatetieups","this.updatevariables(shuttledict","this.updatevariables(systemdict","this.updatevis","this.uploadprogress","this.uploadprogress.subscribe((p","this.upsvc.getdownloadurl(this.currentupload.name).subscribe((url","this.upsvc.pushupload(this.currentupload","this.valid","this.vc.clear","this.vc.createcomponent(factori","this.vc.indexof(this.preview_ref","this.vc.remove(ndx","this.view_fram","this.view_front","this.viewport","this.viewport.topleft","this.viewport.topleft.x","this.vis","this.visiblerow","this.visiblerows[index","this.warp","this.warp_shuttles_pattern.length","this.warp_shuttles_pattern.push(warp_id","this.warp_shuttles_pattern.splice(index","this.warp_system","this.warp_systems[col","this.warp_systems_pattern.length","this.warp_systems_pattern.push(warp_sys_id","this.warp_systems_pattern.splice(index","this.warpmaterialscanva","this.warpmaterialscanvas.getcontext('2d","this.warpmaterialscanvas.height","this.warpmaterialscanvas.width","this.warpshuttlectrl.setvalue(nul","this.warpsystemctrl.setvalue(nul","this.warpsystemscanva","this.warpsystemscanvas.getcontext('2d","this.warpsystemscanvas.height","this.warpsystemscanvas.width","this.weave.colshuttlemapping[overs[o","this.weave.colsystemmapping[overs[o","this.weave.computeyarnpath","this.weave.loom.frame_mapping[currentpos.i","this.weave.loom.frame_mapping[fram","this.weave.loom.frame_mapping[i","this.weave.loom.min_fram","this.weave.loom.min_treadl","this.weave.loom.min_treadles*dims.w","this.weave.loom.num_fram","this.weave.loom.num_treadl","this.weave.loom.threading.length","this.weave.loom.tieup.length","this.weave.loom.tieup[0].length","this.weave.loom.tieup[i][j","this.weave.loom.treadling[row","this.weave.shuttles[shuttle_id","this.weave.shuttles[this.weave.colshuttlemapping[left","this.weave.visiblerows.length","this.weave.visiblerows[currentpos.i","this.weave.visiblerows[i","this.weave.warp","this.weave.weft","this.weaveref.copi","this.weaveref.copyarea","this.weaveref.maskarea(p","this.weaveref.onnewdraftload","this.weaveref.recomputeloom","this.weaveref.redraw","this.weaveref.redraw({drawdown","this.weaveref.redraw({drawdown:tru","this.weaveref.redraw({loom","this.weaveref.redraw({loom:tru","this.weaveref.redrawloom","this.weaveref.rescal","this.weaveref.saveada(e.nam","this.weaveref.savebmp(e.nam","this.weaveref.saveprintabledraft(e.nam","this.weaveref.savewif(e.nam","this.weaveref.unsetselect","this.weft","this.weft_shuttles_pattern.length","this.weft_shuttles_pattern.push(weft_id","this.weft_shuttles_pattern.splice(index","this.weft_systems[id","this.weft_systems_pattern.length","this.weft_systems_pattern.push(weft_sys_id","this.weft_systems_pattern.splice(index","this.weftmaterialscanva","this.weftmaterialscanvas.getcontext('2d","this.weftmaterialscanvas.height","this.weftmaterialscanvas.width","this.weftshuttlectrl.setvalue(nul","this.weftsystemctrl.setvalue(nul","this.weftsystemscanva","this.weftsystemscanvas.getcontext('2d","this.weftsystemscanvas.height","this.weftsystemscanvas.width","this.width","this.wiflink._elementref","this.zndx","this.zoom","this.zoom/100","those","thread","threading/treadl","threadingcanva","threadl","three","threshold","thresholdfreedmandiaconi","through","tieup","tieupscanva","time","timelin","timestamp","titl","to_check.foreach(sr","to_check:array","to_delet","to_right","to_right.x","toggl","togglechange(","togglecollaps","togglefavorit","togglefavorite(id","toggleheddl","toggleviewfram","took","tool","tool/loom/loom.compon","tool/masks/masks.compon","tool/materials/materials.compon","tool/mixerdesign/mixerdesign.compon","tool/mixerpatterns/mixerpatterns.compon","tool/mixerview/mixerview.compon","tool/notes/notes.compon","tool/schematic/schematic.compon","tool/systems/systems.compon","tool/weaverdesign/weaverdesign.compon","tool/weaverpatterns/weaverpatterns.compon","tool/weaverview/weaverview.compon","toolmod","top","top+dims.h","top+dims.h/2","top+i*base_dims.h","top_hasvalu","topbar","topbar.component.html","topbar.component.scss","topbar/topbar.compon","topbarcompon","topleft","topleft:{x","tot","total","touch","track","transform(valu","transit","translat","treadl","treadle:numb","treadlechang","treadlechange(","treadlechange(e:ani","treadles:numb","treadlingcanva","trigger","trim","trimunsetcol","trimunsetrow","true","true/fals","true/false/or","turn","two","type","type:string):boolean","u","ui","undefin","under","underneight","underneith","undo","undo/redo","undo_dis","undoclick","undoclicked(","undoclicked(e:ani","undoitem","union","uniqu","unit","unitchang","unitchange(","unitchange(e:ani","unless","unnam","unset","unseteast","unseteastneighbor","unseteastneighbors(i","unsetheddl","unsetmaskid","unsetnorth","unsetparamet","unsetpol","unsetselect","unsetsouth","unsetwest","unsetwestneighbor","unsetwestneighbors(i","unsetwestneighbors(i:numb","unsubscrib","until","unus","unusu","up","updat","updateconfig","updateconfig(config","updateconfig(config:loomcoords):loomupd","updatedraftfromthread","updatedraftfromthreading(upd","updatedraftfromtieup","updatedraftfromtieup(upd","updatedraftfromtreadl","updatedraftfromtreadling(upd","updatefavorit","updatefavorite(p","updatefromdrawdown","updatefromdrawdown(ndx","updateloomfromdraft","updateloomfromdraft(currentpo","updateminfram","updateminframes(f","updatemintreadl","updatemintreadles(f","updatenumframesfromthread","updatenumtreadlesfromtreadl","updatepattern","updatepatterns","updatepatterns(","updatepatterns(obj","updatepatternsize(","updatepatternwidth","updatepatternwidth(","updatepol","updatepoles(i","updates","updates.push({i:fram","updates.push({i:ndx.i","updates.thread","updates.threading[u].i","updates.threading[u].j","updates.tieup","updates.tieup[i][j","updates.tieup[u","updates.tieup[u][j].i","updates.tieup[u][j].j","updates.treadl","updates.treadling[u].i","updates.treadling[u].j","updates:array","updates:loomupd","updates[u].i","updates[u].j","updateselect","updateselection(","updateselection(e:ani","updatesystemvis","updatesystemvisibility(typ","updatethread","updatethreading(ndx","updatetieup","updatetieup(ndx","updatetieups","updatetreadl","updatetreadling(ndx","updateunus","updateunused(struct","updatevari","updatevariables(undefin","updatevariables({id","updatevis","updatewarpshuttl","updatewarpshuttles(pattern","updatewarpshuttlesfrompattern","updatewarpshuttlesfrompattern(pattern","updatewarpsystem","updatewarpsystems(pattern","updatewarpsystemsfrompattern","updatewarpsystemsfrompattern(pattern","updateweftshuttl","updateweftshuttles(pattern","updateweftshuttlesfrompattern","updateweftshuttlesfrompattern(pattern","updateweftsystem","updateweftsystems(pattern","updateweftsystemsfrompattern","updateweftsystemsfrompattern(pattern","update{i","upload","upload(fil","upload.nam","upload.progress","upload.servic","uploadformcompon","uploadprogress","uploads/upload","uploads/upload.servic","uploadservic","uploadsingl","uploadtask","uploadtask.percentagechang","uploadtask.snapshotchang","upon","upsvc","upward","url","url:str","us","useclass","user","uses_mask","uses_mask:fals","uses_mask:tru","util","utilinst","utilinstance.countoccurrences(this.thread","utilinstance.countoccurrences(this.treadl","v","v.isup","val","val:ani","val:boolean","val:fals","val:ndx.val","val:tru","valid","valid:boolean","valu","value:ani","var","variabl","variou","vc","version","vertic","via","view","view_fram","view_front","view_mod","viewchang","viewchange(","viewchange(e:ani","viewchange(valu","viewchild","viewchild('adalink","viewchild('auto_wash","viewchild('auto_wasi","viewchild('auto_wesh","viewchild('auto_wesi","viewchild('bitmapimag","viewchild('bmplink","viewchild('printlink","viewchild('uploadimag","viewchild('vc","viewchild('warpshuttleinput","viewchild('warpsysteminput","viewchild('weftshuttleinput","viewchild('weftsysteminput","viewchild('wiflink","viewchild(mixerdesigncompon","viewchild(palettecompon","viewchild(weavedirect","viewcontainerref","viewfront","viewfront(","viewfront(e:ani","viewmod","viewport","viewport:bound","viewref","viewvalu","visibl","visible:tru","visiblebutton","visiblebutton(id","visiblerow","visit","visual","void","void}//tel","vtx","w","w,h","want","warm","warp","warp_id","warp_lock","warp_materi","warp_materials:tru","warp_obj","warp_shuttl","warp_shuttle.getcolor","warp_shuttle.getcolor()+\"10","warp_shuttle.getthickness()/100","warp_shuttle.typ","warp_shuttles_pattern","warp_shuttles_pattern_str","warp_sys_id","warp_system","warp_systems:tru","warp_systems_pattern","warp_systems_pattern_str","warp_width","warp_width)/2","warpchang","warpchange(f","warpmaterialscanva","warpnumchang","warpnumchange(","warpnumchange(e:ani","warpshuttlectrl","warpshuttleinput","warpsystemctrl","warpsysteminput","warpsystemscanva","wash","wasi","way","we'll","we'r","weav","weavecompon","weavedirect","weaver","weaver.compon","weaver.component.html","weaver.component.scss","weaver.firebaseapp.com","weaver/model/rend","weaver/model/select","weaver/weaver.compon","weaver/weaver.modul","weavercompon","weaverdesign","weaverdesign.component.html","weaverdesign.component.scss","weaverdesigncompon","weaveref","weavermodul","weaverpattern","weaverpatterns.component.html","weaverpatterns.component.scss","weaverpatternscompon","weaverview","weaverview.component.html","weaverview.component.scss","weaverviewcompon","weft","weft_id","weft_materi","weft_materials:tru","weft_obj","weft_shuttles_pattern","weft_shuttles_pattern_str","weft_sys_id","weft_system","weft_systems:tru","weft_systems_pattern","weft_systems_pattern_str","weftchang","weftchange(f","weftmaterialscanva","weftnumchang","weftnumchange(","weftshuttlectrl","weftshuttleinput","weftsystemctrl","weftsysteminput","weftsystemscanva","well","wesh","wesi","west","western","whetev","whether","while(this.warp_systems.length","white","width","widthchang","widthchange(f","wif","wiflink","window","within","without","work","write","wrong","x","x*2","x,i","x:0","xor","xor(array1","xset","y","y*2","y:0","y:i","y:this.viewport.topleft.y+event.clienti","yarn","ye","you'v","z","zero","zndx","zoom","zoomchang","zoomchange(","zoomchange(e:ani","zoomin","zoomout"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nAdaCAD\nAdaCAD is a drafting tool for weavers. It is actively in development and offers specific supports for integrating electronics on jacquard looms. \nYou can use the last release of the tool at https://adacad-weaver.firebaseapp.com/.\nMore more information about the project and user guides, visit https://unstabledesign.github.io.\nDevelopment Notes\nThe master branch is currently hosting two versions of AdaCAD, one called \"Weaver\" and the other \"Mixer\". Weaver is the version currently deployed to Firebase and Mixer is an experimental branch for designing drafts using components (modeled after ProWeave and MaxMSP).\nDevelopment Notes\nThere are three core modules in this repo: \n\nCore: contains components, services, directives, etc. that are used by both weaver and mixer modules. Changes to core will affect both deployments and should be checked before pushing.\n\nWeaver: contains all components, services, directives, etc. that are used by AdaCAD Weaver. This view supports designing on a simulated loom and can be viewed when developing at: localhost:4200/weaver\n\nMixer: contains all components, services, directives, etc. that are used by AdaCAD Mixer. This view supports more freeform experimentation on stitch structures and can be viewed when developing at: localhost:4200/mixer\n\n\nDeveloper Documentation\nYou can use view automatically generated documentation of our project at https://unstabledesign.github.io/AdaCAD.\nDevelopment Setup\nThis project was generated with Angular CLI version 7.3.8.\nTo download the requirements run npm install.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.Before running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            5 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        30 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        15 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        18 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            2 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    AppModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    AppRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    CoreModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    MixerModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    WeaverModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n  Modules\n  AppModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    WeaverModule\n                            \n                            \n                                    MixerModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\n// import {HttpModule} from '@angular/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser'\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { CoreModule } from './core/core.module';\nimport { WeaverModule } from './weaver/weaver.module';\nimport { MixerModule } from './mixer/mixer.module';\nimport { secrets } from '../environments/secrets';\n\n\nexport const firebaseConfig = secrets;\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    WeaverModule,\n    MixerModule,\n    BrowserAnimationsModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    AngularFireStorageModule\n  ],\n  providers: [{ \n    provide: HAMMER_GESTURE_CONFIG, \n    useClass: HammerGestureConfig \n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n  Modules\n  AppRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WeaverComponent } from './weaver/weaver.component';\nimport { MixerComponent } from './mixer/mixer.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'mixer',\n    component: MixerComponent,\n    children: []\n  },\n  {\n    path: 'weaver',\n    component: WeaverComponent,\n    children: []\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n  Modules\n  CoreModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FilterPipe\n                            \n                            \n                                UploadFormComponent\n                            \n                            \n                                TopbarComponent\n                            \n                            \n                                SystemsComponent\n                            \n                            \n                                MaterialsComponent\n                            \n                            \n                                NotesComponent\n                            \n                            \n                                PatternModal\n                            \n                            \n                                InitModal\n                            \n                            \n                                AboutModal\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                PatternService\n                            \n                            \n                                UploadService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FilterPipe\n                            \n                            \n                                    UploadFormComponent\n                            \n                            \n                                    TopbarComponent\n                            \n                            \n                                    SystemsComponent\n                            \n                            \n                                    MaterialsComponent\n                            \n                            \n                                    NotesComponent\n                            \n                            \n                                    PatternModal\n                            \n                            \n                                    InitModal\n                            \n                            \n                                    AboutModal\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { MatChipsModule } from '@angular/material/chips';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\nimport { PatternService } from './provider/pattern.service';\nimport { UploadService } from './uploads/upload.service';\nimport { FilterPipe } from './pipe/filter.pipe';\nimport { UploadFormComponent } from './uploads/upload-form/upload-form.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { SystemsComponent} from './tool/systems/systems.component'\nimport { MaterialsComponent} from './tool/materials/materials.component'\nimport { NotesComponent} from './tool/notes/notes.component'\nimport { InitModal } from './modal/init/init.modal';\nimport { AboutModal } from './modal/about/about.modal';\nimport { PatternModal } from './modal/pattern/pattern.modal';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    ColorPickerModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    ScrollingModule,\n    DragDropModule\n  ],\n  declarations: [\n    FilterPipe, \n    UploadFormComponent,\n    TopbarComponent,\n    SystemsComponent,\n    MaterialsComponent,\n    NotesComponent,\n    PatternModal,\n    InitModal,\n    AboutModal\n   ],\n\n  providers: [\n    PatternService, \n    UploadService],\n\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    ColorPickerModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    ScrollingModule,\n    DragDropModule,\n    FilterPipe, \n    UploadFormComponent,\n    TopbarComponent,\n    SystemsComponent,\n    MaterialsComponent,\n    NotesComponent,\n    PatternModal,\n    InitModal,\n    AboutModal],\n  \n    entryComponents: [\n      InitModal,\n      AboutModal,\n      PatternModal\n    ],\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MixerModule.html":{"url":"modules/MixerModule.html","title":"module - MixerModule","body":"\n                   \n\n\n  Modules\n  MixerModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mixer/mixer.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MixerDesignComponent\n                            \n                            \n                                MixerComponent\n                            \n                            \n                                MixerPatternsComponent\n                            \n                            \n                                MixerViewComponent\n                            \n                            \n                                SubdraftComponent\n                            \n                            \n                                PaletteComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                            \n                                OperationComponent\n                            \n                            \n                                ConnectionComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CoreModule } from '../core/core.module';\n\n\nimport { MixerComponent} from './mixer.component';\nimport { MixerDesignComponent } from './tool/mixerdesign/mixerdesign.component';\nimport { MixerPatternsComponent } from './tool/mixerpatterns/mixerpatterns.component';\nimport { MixerViewComponent } from './tool/mixerview/mixerview.component';\nimport { SubdraftComponent } from './palette/subdraft/subdraft.component';\nimport { PaletteComponent } from './palette/palette.component';\nimport { SnackbarComponent } from './palette/snackbar/snackbar.component';\nimport { SelectionComponent } from './palette/selection/selection.component';\nimport { OperationComponent } from './palette/operation/operation.component';\nimport { ConnectionComponent } from './palette/connection/connection.component';\n\n\n\n\n\n@NgModule({\n  imports: [\n    CoreModule\n  ],\n  declarations: [\n    MixerDesignComponent, \n    MixerComponent,\n    MixerPatternsComponent,\n    MixerViewComponent,\n    SubdraftComponent,\n    PaletteComponent,\n    SnackbarComponent,\n    SelectionComponent,\n    OperationComponent,\n    ConnectionComponent\n    ],\n  entryComponents: [\n    SubdraftComponent,\n    SnackbarComponent  \n  ]\n})\nexport class MixerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeaverModule.html":{"url":"modules/WeaverModule.html","title":"module - WeaverModule","body":"\n                   \n\n\n  Modules\n  WeaverModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weaver/weaver.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WeaveDirective\n                            \n                            \n                                WeaverComponent\n                            \n                            \n                                WeaverDesignComponent\n                            \n                            \n                                WeaverPatternsComponent\n                            \n                            \n                                ConnectionModal\n                            \n                            \n                                LoomComponent\n                            \n                            \n                                MasksComponent\n                            \n                            \n                                SchematicComponent\n                            \n                            \n                                WeaverViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { ScrollingModule} from '@angular/cdk/scrolling';\n\nimport { CoreModule } from '../core/core.module';\n\nimport { WeaveDirective } from './directives/weave.directive';\nimport { WeaverComponent } from './weaver.component';\nimport { WeaverDesignComponent } from './tool/weaverdesign/weaverdesign.component';\nimport { WeaverPatternsComponent } from './tool/weaverpatterns/weaverpatterns.component';\nimport { LoomComponent } from './tool/loom/loom.component';\nimport { MasksComponent } from './tool/masks/masks.component';\nimport { SchematicComponent } from './tool/schematic/schematic.component';\nimport { WeaverViewComponent } from './tool/weaverview/weaverview.component';\nimport { ConnectionModal } from './modal/connection/connection.modal';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    ColorPickerModule,\n    MatChipsModule,\n    ScrollingModule\n\n  ],\n  declarations: [\n    WeaveDirective,\n    WeaverComponent,  \n    WeaverDesignComponent, \n    WeaverPatternsComponent,\n    ConnectionModal,\n    LoomComponent,\n    MasksComponent,\n    SchematicComponent,\n    WeaverViewComponent,\n  ],\n  entryComponents: [\n    ConnectionModal\n  ],\n})\nexport class WeaverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AboutModal.html":{"url":"components/AboutModal.html","title":"component - AboutModal","body":"\n                   \n\n\n\n  Components\n  AboutModal\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/modal/about/about.modal.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                about.modal.scss\n            \n\n\n\n            \n                templateUrl\n                about.modal.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialogRef: any, data: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             close\n                        \n                    \n    \n                    \n                        \n    close()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.modal.html',\n  styleUrls: ['./about.modal.scss']\n})\nexport class AboutModal implements OnInit {\n\n\n  constructor(private dialogRef: MatDialogRef,\n             @Inject(MAT_DIALOG_DATA) private data: any) { }\n\n  ngOnInit() {\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             title\n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: app\n                            \n                        \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectionComponent.html":{"url":"components/ConnectionComponent.html","title":"component - ConnectionComponent","body":"\n                   \n\n\n\n  Components\n  ConnectionComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/mixer/palette/connection/connection.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connection\n            \n\n            \n                styleUrls\n                connection.component.scss\n            \n\n\n\n            \n                templateUrl\n                connection.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             setFrom\n                        \n                    \n    \n                    \n                        \n    setFrom(from: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setTo\n                        \n                    \n    \n                    \n                        \n    setTo(to: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getTo\n                        \n                    \n    \n                    \n                        \n    getTo()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             from\n                        \n                    \n                    \n                        \n                            from:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             to\n                        \n                    \n                    \n                        \n                            to:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-connection',\n  templateUrl: './connection.component.html',\n  styleUrls: ['./connection.component.scss']\n})\nexport class ConnectionComponent implements OnInit {\n\n  from: any;   //Subdraft Component or Operation\n  to: any;   //Subdraft Component or Operation\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  //Subdraft Component or Operation\n  setFrom(from: any){\n    this.from = from;\n  }\n\n  setTo(to:any){\n    this.to = to;\n  }\n\n\n  getTo():any{\n    return this.to;\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectionModal.html":{"url":"components/ConnectionModal.html","title":"component - ConnectionModal","body":"\n                   \n\n\n\n  Components\n  ConnectionModal\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/weaver/modal/connection/connection.modal.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connection\n            \n\n            \n                styleUrls\n                connection.modal.scss\n            \n\n\n\n            \n                templateUrl\n                connection.modal.html\n            \n\n\n        \n    \n\n\n\n\n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             x\n                        \n                    \n                    \n                        \n                            x:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             y\n                        \n                    \n                    \n                        \n                            y:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\nexport class Point {\n  x: number;\n  y: number;\n}\n\nclass Connection {\n  start: Point;\n  end: Point;\n  shuttleId: number;\n}\n\n@Component({\n  selector: 'app-connection',\n  templateUrl: './connection.modal.html',\n  styleUrls: ['./connection.modal.scss']\n})\nexport class ConnectionModal implements OnInit {\n  connection: Connection = new Connection();\n  shuttles: any;\n\n  constructor(private dialogRef: MatDialogRef,\n             @Inject(MAT_DIALOG_DATA) private data: any) { }\n\n  ngOnInit() {\n    this.connection.start = new Point();\n    this.connection.end = new Point();\n    this.shuttles = this.data.shuttles;\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  save() {\n    this.dialogRef.close(this.connection);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InitModal.html":{"url":"components/InitModal.html","title":"component - InitModal","body":"\n                   \n\n\n\n  Components\n  InitModal\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/modal/init/init.modal.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-init\n            \n\n            \n                styleUrls\n                init.modal.scss\n            \n\n\n\n            \n                templateUrl\n                init.modal.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialogRef: any, data: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             handleFile\n                        \n                    \n    \n                    \n                        \n    handleFile(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             processImageData\n                        \n                    \n    \n                    \n                        \n    processImageData(obj: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             processDraftData\n                        \n                    \n    \n                    \n                        \n    processDraftData(obj: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             processWifData\n                        \n                    \n    \n                    \n                        \n    processWifData(obj: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onNoClick\n                        \n                    \n    \n                    \n                        \n    onNoClick()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             save\n                        \n                    \n    \n                    \n                        \n    save(f: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getInt\n                        \n                    \n    \n                    \n                        \n    getInt(val: any, e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getBool\n                        \n                    \n    \n                    \n                        \n    getBool(val: any, e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getString\n                        \n                    \n    \n                    \n                        \n    getString(val: any, e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getSubstringAfter\n                        \n                    \n    \n                    \n                        \n    getSubstringAfter(val: any, e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getTreadling\n                        \n                    \n    \n                    \n                        \n    getTreadling(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getThreading\n                        \n                    \n    \n                    \n                        \n    getThreading(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getTieups\n                        \n                    \n    \n                    \n                        \n    getTieups(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getColorTable\n                        \n                    \n    \n                    \n                        \n    getColorTable(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getColToShuttleMapping\n                        \n                    \n    \n                    \n                        \n    getColToShuttleMapping(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getRowToShuttleMapping\n                        \n                    \n    \n                    \n                        \n    getRowToShuttleMapping(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             density_units\n                        \n                    \n                    \n                        \n                            density_units:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             draft\n                        \n                    \n                    \n                        \n                            draft:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             loomtype\n                        \n                    \n                    \n                        \n                            loomtype:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             loomtypes\n                        \n                    \n                    \n                        \n                            loomtypes:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             opts\n                        \n                    \n                    \n                        \n                            opts:     StartOptions[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selected\n                        \n                    \n                    \n                        \n                            selected:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             valid\n                        \n                    \n                    \n                        \n                            valid:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { color } from 'd3';\nimport { rest } from 'lodash';\nimport { Cell } from '../../../core/model/cell';\n\nimport { Loom } from '../../../core/model/loom';\nimport { Shuttle } from \"../../../core/model/shuttle\";\n\n\ninterface StartOptions {\n  value: string;\n  viewValue: string;\n}\n\n\n@Component({\n  selector: 'app-init',\n  templateUrl: './init.modal.html',\n  styleUrls: ['./init.modal.scss']\n})\n\n\n\n\nexport class InitModal implements OnInit {\n\n  opts: StartOptions[] = [\n      {value: 'new', viewValue: 'Begin New Draft'},\n      {value: 'ada', viewValue: 'Load an AdaCAD (.ada) File'},\n      {value: 'bmp', viewValue: 'Load a Bitmap (.bmp) File'},\n      {value: 'wif', viewValue: 'Load a WIF (.wif) File'}   \n    ];\n\n  //form: any = {};\n  selected:string = null;\n  loomtype:string = null;\n  valid:boolean = false; \n  draft: any = {};\n  loomtypes: any;\n  density_units: any;\n\n\n  constructor(private dialogRef: MatDialogRef, \n    @Inject(MAT_DIALOG_DATA) private data: any) {\n      console.log(data);\n      this.loomtypes = data.loomtypes;\n      this.density_units = data.density_units;\n  }\n\n  ngOnInit() {\n\n  }\n\n  handleFile(e: any) {\n\n    if (e.type === \"image\") this.processImageData(e);\n    else if (e.type === \"ada\") this.processDraftData(e);\n    else if (e.type === \"wif\") this.processWifData(e);\n    this.valid = true;\n\n  }\n\n  processImageData(obj: any) {\n\n    let e = obj.data;\n\n    this.draft.warps = e.width;\n    this.draft.wefts = e.height;\n\n    var img = e.data;\n    var data = [];\n\n    for (var i=0; i= 0; i--) {\n      reversedMapping.push(colToShuttleMapping[i]);\n    }\n\n    return reversedMapping;\n  }\n\n  getRowToShuttleMapping(e) {\n    var rowToShuttleMapping = [];\n\n    for (var i = 0; i \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelModal.html":{"url":"components/LabelModal.html","title":"component - LabelModal","body":"\n                   \n\n\n\n  Components\n  LabelModal\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/weaver/modal/label/label.modal.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-label\n            \n\n            \n                styleUrls\n                label.modal.scss\n            \n\n\n\n            \n                templateUrl\n                label.modal.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialogRef: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             close\n                        \n                    \n    \n                    \n                        \n    close()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             save\n                        \n                    \n    \n                    \n                        \n    save()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             label\n                        \n                    \n                    \n                        \n                            label:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-label',\n  templateUrl: './label.modal.html',\n  styleUrls: ['./label.modal.scss']\n})\nexport class LabelModal implements OnInit {\n\n  label: any;\n  constructor(private dialogRef: MatDialogRef,) { }\n\n  ngOnInit() {\n    this.label = {\n      category: null,\n      type: null,\n      num: null,\n      row: null\n    }\n  }\n\n  close() {\n    this.dialogRef.close(null);\n  }\n\n  save() {\n    this.dialogRef.close(this.label);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoomComponent.html":{"url":"components/LoomComponent.html","title":"component - LoomComponent","body":"\n                   \n\n\n\n  Components\n  LoomComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/weaver/tool/loom/loom.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loom\n            \n\n            \n                styleUrls\n                loom.component.scss\n            \n\n\n\n            \n                templateUrl\n                loom.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            density_units\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            epi\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            frames\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            loomtype\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            loomtypes\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            treadles\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            units\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            warps\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            wefts\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            width\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onEpiNumChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onFrameChange\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onLoomTypeChange\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onTreadleChange\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onUnitChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onWarpNumChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onWeftNumChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             updateMinTreadles\n                        \n                    \n    \n                    \n                        \n    updateMinTreadles(f: NgForm)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updateMinFrames\n                        \n                    \n    \n                    \n                        \n    updateMinFrames(f: NgForm)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             loomChange\n                        \n                    \n    \n                    \n                        \n    loomChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             unitChange\n                        \n                    \n    \n                    \n                        \n    unitChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             widthChange\n                        \n                    \n    \n                    \n                        \n    widthChange(f: NgForm)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             warpChange\n                        \n                    \n    \n                    \n                        \n    warpChange(f: NgForm)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             weftChange\n                        \n                    \n    \n                    \n                        \n    weftChange(f: NgForm)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             epiChange\n                        \n                    \n    \n                    \n                        \n    epiChange(f: NgForm)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             loom\n                        \n                    \n                    \n                        \n                            loom:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             warp_locked\n                        \n                    \n                    \n                        \n                            warp_locked:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-loom',\n  templateUrl: './loom.component.html',\n  styleUrls: ['./loom.component.scss']\n})\n\n\n\n\nexport class LoomComponent implements OnInit {\n\n\n\n  @Input() epi;\n  @Input() warps;\n  @Input() wefts;\n  @Input() units;\n  @Input() width;\n  @Input() frames;\n  @Input() treadles;\n  @Input() loomtype;\n  @Input() loomtypes;\n  @Input() density_units;\n  @Output() onLoomTypeChange = new EventEmitter();\n  @Output() onFrameChange = new EventEmitter();\n  @Output() onTreadleChange = new EventEmitter();\n  @Output() onWarpNumChange: any = new EventEmitter();\n  @Output() onWeftNumChange: any = new EventEmitter();\n  @Output() onEpiNumChange: any = new EventEmitter();\n  @Output() onUnitChange: any = new EventEmitter();\n \n  warp_locked = false;\n  loom = \"\"; \n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n    updateMinTreadles(f: NgForm){\n    //validate the input\n    if(!f.value.treadles){\n      f.value.treadles = 2; \n      this.treadles = f.value.treadles;\n    } \n\n    f.value.treadles = Math.ceil(f.value.treadles);\n    this.onTreadleChange.emit({value: f.value.treadles});\n  }\n\n  updateMinFrames(f: NgForm){\n    if(!f.value.frames){\n      f.value.frames = 2; \n      this.frames = f.value.frames;\n    } \n    f.value.frames = Math.ceil(f.value.frames);\n\n    this.onFrameChange.emit({value: f.value.frames});\n  }\n\n\n  loomChange(e:any){\n    console.log(\"loom change\", e.value.loomtype);\n    this.onLoomTypeChange.emit(e.value);\n  }\n\n  unitChange(e:any){\n    console.log(\"unit change\", e.value.unit);\n    this.onUnitChange.emit(e.value);\n  }\n\n\n  widthChange(f: NgForm) {\n\n    if(!f.value.width){\n      f.value.width = 1;\n      this.width = f.value.width;\n    } \n\n    if(this.warp_locked){\n      var new_epi = (this.units == \"in\") ? f.value.warps / f.value.width : (10 * f.value.warps / f.value.width);\n      this.onEpiNumChange.emit({epi: new_epi});\n    }else{\n      var new_warps = (this.units === \"in\") \n      ? Math.ceil(f.value.width * f.value.epi) : \n      Math.ceil((10 * f.value.warps / f.value.width));\n\n      this.onWarpNumChange.emit({warps: new_warps})\n    }\n   \n\n  }\n\n  \n  warpChange(f: NgForm) {\n    if(!f.value.warps){\n     f.value.warps = 2;\n     this.warps = f.value.warps;\n    }\n\n    this.onWarpNumChange.emit({warps: f.value.warps})\n  }\n\n  weftChange(f: NgForm) {\n    if(!f.value.wefts){\n      f.value.wefts = 2;\n      this.wefts = 2;\n    } \n    this.onWeftNumChange.emit({wefts: f.value.wefts})\n  }\n\n  epiChange(f: NgForm) {\n    if(!f.value.epi){\n      f.value.epi = 1;\n      this.epi = f.value.epi;\n    } \n    this.onEpiNumChange.emit({epi: f.value.epi});\n\n  }\n\n\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MasksComponent.html":{"url":"components/MasksComponent.html","title":"component - MasksComponent","body":"\n                   \n\n\n\n  Components\n  MasksComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/weaver/tool/masks/masks.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-masks\n            \n\n            \n                styleUrls\n                masks.component.scss\n            \n\n\n\n            \n                templateUrl\n                masks.component.html\n            \n\n\n        \n    \n\n\n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onMask\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             maskEvent\n                        \n                    \n    \n                    \n                        \n    maskEvent(e: any, id: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-masks',\n  templateUrl: './masks.component.html',\n  styleUrls: ['./masks.component.scss']\n})\nexport class MasksComponent implements OnInit {\n  \n  @Output() onMask: any = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  maskEvent(e, id) {\n    var obj: any = {};\n    obj.id = id;\n    this.onMask.emit(obj);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialModal.html":{"url":"components/MaterialModal.html","title":"component - MaterialModal","body":"\n                   \n\n\n\n  Components\n  MaterialModal\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/modal/material/material.modal.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-modal\n            \n\n            \n                styleUrls\n                material.modal.scss\n            \n\n\n\n            \n                templateUrl\n                material.modal.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialogRef: any, data: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             close\n                        \n                    \n    \n                    \n                        \n    close()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             save\n                        \n                    \n    \n                    \n                        \n    save()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             data\n                        \n                    \n                    \n                        \n                            data:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             shuttle\n                        \n                    \n                    \n                        \n                            shuttle:     Shuttle\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             types\n                        \n                    \n                    \n                        \n                            types:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { FormGroup, FormControl, Validators, FormBuilder }  from '@angular/forms';\nimport { Shuttle } from '../../../core/model/shuttle';\n\n\n@Component({\n  selector: 'app-material-modal',\n  templateUrl: './material.modal.html',\n  styleUrls: ['./material.modal.scss']\n})\n\n\nexport class MaterialModal{\n  shuttle: Shuttle;\n  types: any;\n\n  constructor(\n      private dialogRef: MatDialogRef,\n      @Inject(MAT_DIALOG_DATA) public data: any) {\n\n  \t  this.shuttle = data.shuttle;\n  \t  this.types = data.material_types;\n\n  }\n\n\n\n  ngOnInit() {\n  }\n\n\n\n  close() {\n    this.dialogRef.close(null);\n  }\n\n  save() {\n    this.dialogRef.close(this.shuttle);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialsComponent.html":{"url":"components/MaterialsComponent.html","title":"component - MaterialsComponent","body":"\n                   \n\n\n\n  Components\n  MaterialsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/tool/materials/materials.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-materials\n            \n\n            \n                styleUrls\n                materials.component.scss\n            \n\n\n\n            \n                templateUrl\n                materials.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            material_types\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            shuttles\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onColorChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onCreateShuttle\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onThicknessChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialog: MatDialog)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             openDialog\n                        \n                    \n    \n                    \n                        \n    openDialog(shuttle: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             thicknessChange\n                        \n                    \n    \n                    \n                        \n    thicknessChange(id: number, thickness: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             colorChange\n                        \n                    \n    \n                    \n                        \n    colorChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MaterialModal } from '../../modal/material/material.modal';\nimport { ShuttlesModal } from '../../modal/shuttles/shuttles.modal';\nimport { Shuttle } from '../../../core/model/shuttle';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-materials',\n  templateUrl: './materials.component.html',\n  styleUrls: ['./materials.component.scss']\n})\nexport class MaterialsComponent implements OnInit {\n\n\n  @Input() shuttles: any;\n  @Input() material_types: any;\n  @Output() onColorChange: any = new EventEmitter();\n  @Output() onThicknessChange: any = new EventEmitter();\n  @Output() onCreateShuttle: any = new EventEmitter();\n\n  constructor(private dialog: MatDialog) { \n   \n  }\n\n  ngOnInit() {\n  }\n\n  openDialog(shuttle) {\n\n\n    var create = false;\n\n    if (!shuttle) {\n      shuttle = new Shuttle();\n      create = true;\n    }\n\n    const dialogRef = this.dialog.open(MaterialModal, \n      {data: {shuttle: shuttle, material_types:this.material_types}, width: '650px' });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n    \tconsole.log(result);\n        if (!create) {\n          this.shuttles[result.id] = result;\n          this.onColorChange.emit();\n        } else {\n          this.onCreateShuttle.emit({shuttle: result});\n        }\n    });\n  }\n\n  thicknessChange(id:number, thickness:number) {\n  \tthis.shuttles[id].setThickness(thickness);\n    this.onThicknessChange.emit();\n  }\n\n  colorChange(e) {\n    this.onColorChange.emit();\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MixerComponent.html":{"url":"components/MixerComponent.html","title":"component - MixerComponent","body":"\n                   \n\n\n\n  Components\n  MixerComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/mixer/mixer.component.ts\n\n\n    \n        Description\n    \n    \n        Controller of the Weaver component.\n\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mixer\n            \n\n            \n                styleUrls\n                mixer.component.scss\n            \n\n\n\n            \n                templateUrl\n                mixer.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(design_modes: DesignmodesService, ps: PatternService, dialog: MatDialog, scroll: ScrollDispatcher)\n                        \n                    \n    \n                    \n                        \n                                \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Private onWindowScroll\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onWindowScroll(data: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private designModeChanged\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            designModeChanged(name: string)\n                        \n                    \n    \n                    \n                        \n                                A function originating in the deisgn tool that signals a design mode change and communicates it to the palette\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        name\n                                                    \n                                                    \n                                                        the name of the current design mode\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private inkChanged\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            inkChanged(name: string)\n                        \n                    \n    \n                    \n                        \n                                A function originating in the deisgn tool that signals a design mode change and communicates it to the palette\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        name\n                                                    \n                                                    \n                                                        the name of the current design mode\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             undo\n                        \n                    \n    \n                    \n                        \n    undo()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             redo\n                        \n                    \n    \n                    \n                        \n    redo()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private keyChangetoDrawMode\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            keyChangetoDrawMode(e: any)\n                        \n                    \n    \n                    \n                        \n                                Change to draw mode on keypress d\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private keyChangeToSelect\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            keyChangeToSelect(e: any)\n                        \n                    \n    \n                    \n                        \n                                Change to draw mode on keypress s\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private keyChangeToMove\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            keyChangeToMove(e: any)\n                        \n                    \n    \n                    \n                        \n                                Change to draw mode on keypress s\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public renderChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            renderChange(event: any)\n                        \n                    \n    \n                    \n                        \n                                Call zoom out on Shift+o.Sets selected area to clearSets brush to point on key control + d.Sets brush to select on key control + sSets key control to invert on control + xSets key to copySets key to copyUpdates the canvas based on the weave view.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        shift\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        +o\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onSave\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onSave(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public updatePatterns\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            updatePatterns(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public notesChanged\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            notesChanged(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public createPattern\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            createPattern(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public removePattern\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            removePattern(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public toggleCollapsed\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            toggleCollapsed()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             bitmap\n                        \n                    \n                    \n                        \n                            bitmap:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             collapsed\n                        \n                    \n                    \n                        \n                            collapsed:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             default_patterns\n                        \n                    \n                    \n                        \n                            default_patterns:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             density_units\n                        \n                    \n                    \n                        \n                            density_units:     DensityUnits[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             design_tool\n                        \n                    \n                    \n                        \n                            design_tool:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             dims\n                        \n                    \n                    \n                        \n                            dims:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             draftelement\n                        \n                    \n                    \n                        \n                            draftelement:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             loomtypes\n                        \n                    \n                    \n                        \n                            loomtypes:     LoomTypes[]\n    \n                        \n                    \n                    \n                        \n                            The types of looms this version will support.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             material_types\n                        \n                    \n                    \n                        \n                            material_types:     MaterialTypes[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             palette\n                        \n                    \n                    \n                        \n                            palette:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             scroll\n                        \n                    \n                    \n                        \n                            scroll:     ScrollDispatcher\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             scrollingSubscription\n                        \n                    \n                    \n                        \n                            scrollingSubscription:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             timeline\n                        \n                    \n                    \n                        \n                            timeline:     Timeline\n    \n                        \n                    \n                    \n                        \n                            The weave Timeline object.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private unsubscribe$\n                        \n                    \n                    \n                        \n                            unsubscribe$:     Subject\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             view_modes\n                        \n                    \n                    \n                        \n                            view_modes:     ViewModes[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, ElementRef, OnInit, OnDestroy, HostListener, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { PatternService } from '../core/provider/pattern.service';\nimport { DesignmodesService } from '../mixer/provider/designmodes.service';\nimport { ScrollDispatcher } from '@angular/cdk/overlay';\nimport { Timeline } from '../core/model/timeline';\nimport { LoomTypes, DensityUnits,MaterialTypes, ViewModes } from '../core/model/datatypes';\nimport { Pattern } from '../core/model/pattern';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport {Subject} from 'rxjs';\nimport { PaletteComponent } from './palette/palette.component';\nimport { MixerDesignComponent } from './tool/mixerdesign/mixerdesign.component';\n\n\n//disables some angular checking mechanisms\n//enableProdMode();\n\n\n/**\n * Controller of the Weaver component.\n * @class\n */\n\n\n\n@Component({\n  selector: 'app-mixer',\n  templateUrl: './mixer.component.html',\n  styleUrls: ['./mixer.component.scss']\n})\nexport class MixerComponent implements OnInit {\n\n\n  @ViewChild('bitmapImage', {static: false}) bitmap;\n  @ViewChild(PaletteComponent, {static: false}) palette;\n  @ViewChild(MixerDesignComponent, {static: false}) design_tool;\n\n /**\n   * The weave Timeline object.\n   * @property {Timeline}\n   */\n   timeline: Timeline = new Timeline();\n\n\n /**\n   * The types of looms this version will support.\n   * @property {LoomType}\n   */\n  loomtypes: LoomTypes[] = [\n    {value: 'frame', viewValue: 'Shaft'},\n    {value: 'jacquard', viewValue: 'Jacquard'}\n  ];\n\n\n  material_types: MaterialTypes[] = [\n    {value: 0, viewValue: 'Non-Conductive'},\n    {value: 1, viewValue: 'Conductive'},\n    {value: 2, viewValue: 'Resistive'}\n  ];\n\n  density_units: DensityUnits[] = [\n    {value: 'in', viewValue: 'Ends per Inch'},\n    {value: 'cm', viewValue: 'Ends per 10cm '}\n  ];\n\n  view_modes: ViewModes[] = [\n      {value: 'visual', viewValue: 'Visual'},\n      {value: 'pattern', viewValue: 'Draft'},\n      {value: 'yarn', viewValue: 'Circuit'}\n     // {value: 'mask', viewValue: 'Masks'}\n\n    ];\n\n\n\n  private unsubscribe$ = new Subject();\n\n  default_patterns:any;\n  collapsed:boolean = false;\n  dims:any;\n\n  draftelement:any;\n  scrollingSubscription: any;\n\n  /// ANGULAR FUNCTIONS\n  /**\n   * @constructor\n   * ps - pattern service (variable name is initials). Subscribes to the patterns and used\n   * to get and update stitches.\n   * dialog - Anglar Material dialog module. Used to control the popup modals.\n   */\n  constructor(private design_modes: DesignmodesService, private ps: PatternService, private dialog: MatDialog, public scroll: ScrollDispatcher) {\n\n\n    this.scrollingSubscription = this.scroll\n          .scrolled()\n          .subscribe((data: any) => {\n            this.onWindowScroll(data);\n    });\n\n   \n    this.default_patterns = [];\n\n    this.ps.getPatterns().subscribe((res) => {\n       for(var i in res.body){\n          this.default_patterns.push(new Pattern(res.body[i]));\n       }\n    }); \n  }\n\n  private onWindowScroll(data: any) {\n    this.palette.handleScroll(data);\n  }\n\n\n  /**\n   * A function originating in the deisgn tool that signals a design mode change and communicates it to the palette\n   * @param name the name of the current design mode\n   */\n  private designModeChanged(name: string){\n    this.palette.designModeChanged();\n  }\n\n  /**\n   * A function originating in the deisgn tool that signals a design mode change and communicates it to the palette\n   * @param name the name of the current design mode\n   */\n  private inkChanged(name: string){\n    // this.palette.inkChanged();\n  }\n  \n  \n\n\n  // reInit(result){\n  //   console.log(\"reinit\");\n\n  //   this.draft.reload(result);\n  //   this.timeline.addHistoryState(this.draft);\n\n  //   this.render.view_frames = (this.draft.loom.type === 'frame') ? true : false;     \n\n  //   if (this.draft.patterns === undefined) this.draft.patterns = this.default_patterns;\n    \n\n  //   this.palette.onNewDraftLoaded();\n\n\n  //   this.palette.redraw({\n  //     drawdown: true, \n  //     loom:true, \n  //     warp_systems: true, \n  //     weft_systems: true, \n  //     warp_materials: true,\n  //     weft_materials:true\n  //   });\n\n  //   this.palette.rescale();\n\n  // }\n  \n  ngOnInit(){\n    \n  }\n\n  ngAfterViewInit() {\n\n\n  }\n\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  undo() {\n    // let d: Draft = this.timeline.restorePreviousHistoryState();\n    // console.log(\"Prevous State is \", d);\n    // if(d === undefined || d === null) return;\n\n    // this.draft.reload(d);    \n    // this.palette.onNewDraftLoaded();\n    // this.palette.redraw({\n    //   drawdown: true, \n    //   loom:true, \n    //   warp_systems: true, \n    //   weft_systems: true, \n    //   warp_materials: true,\n    //   weft_materials:true\n    // });\n\n    // this.palette.rescale(); \n  }\n\n  redo() {\n    // let d: Draft = this.timeline.restoreNextHistoryState();\n    // console.log(\"Next State is \", d);\n\n    // if(d === undefined || d === null) return;\n\n    // console.log(d);\n\n    // this.draft.reload(d);    \n    // this.palette.onNewDraftLoaded();\n    // this.palette.redraw({\n    //   drawdown: true, \n    //   loom:true, \n    //   warp_systems: true, \n    //   weft_systems: true, \n    //   warp_materials: true,\n    //   weft_materials:true\n    // });\n\n    // this.palette.rescale(); \n  }\n\n  /// EVENTS\n\n\n\n\n/**\n   * Change to draw mode on keypress d\n   * @returns {void}\n   */\n  @HostListener('window:keydown.d', ['$event'])\n  private keyChangetoDrawMode(e) {\n    this.design_modes.select('draw');\n    this.designModeChanged('draw');\n  }\n\n  /**\n   * Change to draw mode on keypress s\n   * @returns {void}\n   */\n   @HostListener('window:keydown.s', ['$event'])\n   private keyChangeToSelect(e) {\n     this.design_modes.select('select');\n     this.designModeChanged('select');\n   }\n\n\n     /**\n   * Change to draw mode on keypress s\n   * @returns {void}\n   */\n      @HostListener('window:keydown.m', ['$event'])\n      private keyChangeToMove(e) {\n        this.design_modes.select('move');\n        this.designModeChanged('move');\n      }\n   \n/**\n   * Call zoom out on Shift+o.\n   * @extends WeaveComponent\n   * @param {Event} shift+o\n   * @returns {void}\n   */\n  // @HostListener('window:keydown.Shift.o', ['$event'])\n  // private keyEventZoomOut(e) {\n  //   console.log(\"zoom out\");\n  //   this.render.zoomOut();\n  //   this.palette.rescale();\n  // }\n\n\n  /**\n   * Sets selected area to clear\n   * @extends WeaveComponent\n   * @param {Event} delete key pressed\n   * @returns {void}\n   */\n\n  // @HostListener('window:keydown.e', ['$event'])\n  // private keyEventErase(e) {\n  //   this.design_mode = {\n  //     name: 'down',\n  //     id: -1\n  //   };\n  //   this.palette.unsetSelection();\n\n  // }\n\n  /**\n   * Sets brush to point on key control + d.\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + d\n   * @returns {void}\n   */\n  // @HostListener('window:keydown.d', ['$event'])\n  // private keyEventPoint(e) {\n  //   this.design_mode = {\n  //     name: 'up',\n  //     id: -1};\n  //   this.palette.unsetSelection();\n\n  // }\n\n  /**\n   * Sets brush to select on key control + s\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + s\n   * @returns {void}\n   */\n  // @HostListener('window:keydown.s', ['$event'])\n  // private keyEventSelect(e) {\n  //   this.design_mode = {\n  //     name: 'select',\n  //     id: -1};\n  //   this.palette.unsetSelection();\n\n  // }\n\n  /**\n   * Sets key control to invert on control + x\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  // @HostListener('window:keydown.x', ['$event'])\n  // private keyEventInvert(e) {\n  //   this.design_mode = {\n  //     name: 'toggle',\n  //     id: -1\n  //   };\n  //   this.palette.unsetSelection();\n\n  // }\n\n  /**\n   * Sets key to copy \n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  // @HostListener('window:keydown.c', ['$event'])\n  // private keyEventCopy(e) {\n  //   this.onCopy();  \n  // }\n\n    /**\n   * Sets key to copy \n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  // @HostListener('window:keydown.p', ['$event'])\n  // private keyEventPaste(e) {\n  //   this.onPaste({});\n  // }\n\n  /**\n   * Updates the canvas based on the weave view.\n   * @extends WeaveComponent\n   * @param {Event} e - view change event from design component.\n   * @returns {void}\n   */\n  public renderChange(event: any) {\n\n\n    console.log(event.value);\n    //need to render the scale change to the parent and child subdrafts\n     const scale = event.value;\n     this.palette.rescale(scale);\n    // const div = document.getElementById('scrollable-container');\n    // div.style.transform = 'scale(' + scale + ')';\n\n    \n    // this.render.setCurrentView(value);\n\n    // if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n\n    // this.palette.redraw({\n    //   drawdown: true\n    // });\n  }\n\n \n  \n  \n  public onSave(e: any) {\n\n    e.bitmap = this.bitmap.map(element => (element.isUp() && element.isSet()));\n    console.log(e);\n\n    if (e.type === \"bmp\") this.palette.saveBMP(e.name, e);\n    else if (e.type === \"ada\") this.palette.saveADA(e.name, e);\n    else if (e.type === \"wif\") this.palette.saveWIF(e.name, e);\n    else if (e.type === \"jpg\") this.palette.savePrintableDraft(e.name, e);\n    \n  }\n\n\n\n  public updatePatterns(e: any) {\n    // this.patterns = e.patterns;\n    // this.draft.patterns = this.patterns;\n  }\n\n\n\n  public notesChanged(e:any) {\n    console.log(e);\n    //this.draft.notes = e;\n  }\n\n  public createPattern(e: any) {\n\n    this.default_patterns.push(new Pattern({pattern: e.pattern}));\n  \n  }\n\n\n//should this just hide the pattern or fully remove it, could create problems with undo/redo\n   public removePattern(e: any) {\n    this.default_patterns.patterns = this.default_patterns.patterns.filter(pattern => pattern !== e.pattern);\n  }\n\n\n\n  public toggleCollapsed(){\n    this.collapsed = !this.collapsed;\n  }\n\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MixerDesignComponent.html":{"url":"components/MixerDesignComponent.html","title":"component - MixerDesignComponent","body":"\n                   \n\n\n\n  Components\n  MixerDesignComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/mixer/tool/mixerdesign/mixerdesign.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mixerdesign\n            \n\n            \n                styleUrls\n                mixerdesign.component.scss\n            \n\n\n\n            \n                templateUrl\n                mixerdesign.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            view_mode\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onDesignModeChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onInkChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(design_modes: DesignmodesService, inks: InkService)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             inkChanged\n                        \n                    \n    \n                    \n                        \n    inkChanged(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             designModeChange\n                        \n                    \n    \n                    \n                        \n    designModeChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             drawWithMaterial\n                        \n                    \n    \n                    \n                        \n    drawWithMaterial(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             button_color\n                        \n                    \n                    \n                        \n                            button_color:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: #ff4081\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             selected\n                        \n                    \n                    \n                        \n                            selected:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DesignmodesService } from '../../../mixer/provider/designmodes.service';\nimport { InkService } from '../../../mixer/provider/ink.service';\nimport * as _ from 'lodash';\n\n\n\n@Component({\n  selector: 'app-mixerdesign',\n  templateUrl: './mixerdesign.component.html',\n  styleUrls: ['./mixerdesign.component.scss']\n})\n\n\nexport class MixerDesignComponent implements OnInit {\n  @Input()  view_mode;\n  @Output() onDesignModeChange: any = new EventEmitter();\n  @Output() onInkChange: any = new EventEmitter();\n\n  button_color = \"#ff4081\";\n\n\n  selected = 0;\n\n  constructor(private design_modes: DesignmodesService, private inks: InkService) { \n  }\n\n  ngOnInit() {\n\n  }\n\n  inkChanged(e:any){\n    console.log(\"changing to\", e.target.name);\n    this.inks.select(e.target.name);\n    this.onInkChange.emit(e.target.name);\n  }\n\n\n\n\n  designModeChange(e: any) {\n    this.design_modes.select(e.target.name);\n    this.onDesignModeChange.emit(e.target.name);\n  }\n\n  drawWithMaterial(e: any){\n  \n  }\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MixerPatternsComponent.html":{"url":"components/MixerPatternsComponent.html","title":"component - MixerPatternsComponent","body":"\n                   \n\n\n\n  Components\n  MixerPatternsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/mixer/tool/mixerpatterns/mixerpatterns.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mixerpatterns\n            \n\n            \n                styleUrls\n                mixerpatterns.component.scss\n            \n\n\n\n            \n                templateUrl\n                mixerpatterns.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            patterns\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            selection\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onCreatePattern\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onFill\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onPatternChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onRemovePattern\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialog: MatDialog)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             updateFavorite\n                        \n                    \n    \n                    \n                        \n    updateFavorite(p: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removePattern\n                        \n                    \n    \n                    \n                        \n    removePattern(pattern: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             openPatternDialog\n                        \n                    \n    \n                    \n                        \n    openPatternDialog(pattern: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             print\n                        \n                    \n    \n                    \n                        \n    print(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             toggleFavorite\n                        \n                    \n    \n                    \n                        \n    toggleFavorite(id: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { PatternModal } from '../../../core/modal/pattern/pattern.modal';\nimport { Pattern } from '../../../core/model/pattern';\nimport { PatternService } from '../../../core/provider/pattern.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-mixerpatterns',\n  templateUrl: './mixerpatterns.component.html',\n  styleUrls: ['./mixerpatterns.component.scss']\n})\nexport class MixerPatternsComponent implements OnInit {\n  \n\n  @Input()  patterns;\n  @Input()  selection;\n  @Output() onPatternChange: any = new EventEmitter();\n  @Output() onCreatePattern: any = new EventEmitter();\n  @Output() onRemovePattern: any = new EventEmitter();\n  @Output() onFill: any = new EventEmitter();\n\n\n  \n  constructor(private dialog: MatDialog) { \n  }\n\n  ngOnInit() {\n\n  }\n\n  updateFavorite(p) {\n\n    this.patterns[p].favorite = !this.patterns[p].favorite;\n\n    var obj:any = {};\n    obj.patterns = _.cloneDeep(this.patterns);\n\n     if(this.selection !== undefined) this.onFill.emit(p);\n    this.onPatternChange.emit(obj);\n  }\n\n\n  removePattern(pattern) {\n    this.onRemovePattern.emit({pattern: pattern});\n  }\n\n  openPatternDialog(pattern) {\n    console.log(\"open dialog\", this.selection);\n    var create = false;\n\n    if (!pattern) {\n      pattern = new Pattern({pattern: this.selection});\n      if(this.selection !== undefined) pattern.setPattern(this.selection);\n\n      console.log(pattern);\n\n      create = true;\n    }\n\n    const dialogRef = this.dialog.open(PatternModal, \n      {data: pattern });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!create) {\n        this.patterns[result.id] = result;\n      } else {\n        this.onCreatePattern.emit({pattern: result});\n      }\n\n      var obj: any = {};\n      obj.patterns = _.cloneDeep(this.patterns);\n      this.onPatternChange.emit(obj);\n    });\n  }\n\n  print(e) {\n    console.log(e);\n  }\n\n  toggleFavorite(id){\n\n  const ndx: number = this.patterns.findIndex(el => el.id === id);\n  this.patterns[ndx].toggleFavorite();\n\n  }\n\n\n\n\n}\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MixerViewComponent.html":{"url":"components/MixerViewComponent.html","title":"component - MixerViewComponent","body":"\n                   \n\n\n\n  Components\n  MixerViewComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/mixer/tool/mixerview/mixerview.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mixerview\n            \n\n            \n                styleUrls\n                mixerview.component.scss\n            \n\n\n\n            \n                templateUrl\n                mixerview.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            zoom\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onZoomChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             zoomChange\n                        \n                    \n    \n                    \n                        \n    zoomChange(e: any, source: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-mixerview',\n  templateUrl: './mixerview.component.html',\n  styleUrls: ['./mixerview.component.scss']\n})\nexport class MixerViewComponent implements OnInit {\n  \n  @Input() zoom;\n  @Output() onZoomChange: any = new EventEmitter();\n\n\n constructor() { }\n \n  ngOnInit() {\n  }\n\n  // viewChange(e:any){\n  //   this.onViewChange.emit(e.value);\n  // }\n\n  zoomChange(e:any, source: string){\n    e.source = source;\n    this.onZoomChange.emit(e);\n  }\n\n  // viewFront(e:any, value:any, source: string){\n  //   console.log(\"value\", value, \"source\", source);\n  //   e.source = source;\n  //   e.value = value;\n  //   this.onViewFront.emit(e);\n  // }\n  \n//  visibleButton(id, visible, type) {\n//     console.log(\"called\", id, visible, type);\n//     if(type == \"weft\"){\n//       if (visible) {\n//         this.onShowWeftSystem.emit({systemId: id});\n//       } else {\n//         this.onHideWeftSystem.emit({systemId: id});\n//       }\n//     }else{\n//       if (visible) {\n//         this.onShowWarpSystem.emit({systemId: id});\n//       } else {\n//         this.onHideWarpSystem.emit({systemId: id});\n//       }\n//     }\n\n//   }\n\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotesComponent.html":{"url":"components/NotesComponent.html","title":"component - NotesComponent","body":"\n                   \n\n\n\n  Components\n  NotesComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/tool/notes/notes.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notes\n            \n\n            \n                styleUrls\n                notes.component.scss\n            \n\n\n\n            \n                templateUrl\n                notes.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            notes\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             notesValueChanged\n                        \n                    \n    \n                    \n                        \n    notesValueChanged()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.scss']\n})\nexport class NotesComponent implements OnInit {\n\n\n  @Input() notes;\n  @Output() onChange: any = new EventEmitter();\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  notesValueChanged(){\n  \tconsole.log(\"notes\", this.notes);\n  \tthis.onChange.emit(this.notes);\n\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OperationComponent.html":{"url":"components/OperationComponent.html","title":"component - OperationComponent","body":"\n                   \n\n\n\n  Components\n  OperationComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/mixer/palette/operation/operation.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-operation\n            \n\n            \n                styleUrls\n                operation.component.scss\n            \n\n\n\n            \n                templateUrl\n                operation.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component, Input, OnInit } from '@angular/core';\n//import { Operation } from 'src/app/core/ops/operation';\nimport { ConnectionComponent } from '../connection/connection.component';\n\n@Component({\n  selector: 'app-operation',\n  templateUrl: './operation.component.html',\n  styleUrls: ['./operation.component.scss']\n})\nexport class OperationComponent implements OnInit {\n\n  // @Input inbound: Array;\n  // @Input outbound:  Array;\n  // @Input class: Operation;\n \n  //allowable types \n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaletteComponent.html":{"url":"components/PaletteComponent.html","title":"component - PaletteComponent","body":"\n                   \n\n\n\n  Components\n  PaletteComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/mixer/palette/palette.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-palette\n            \n\n            \n                styleUrls\n                palette.component.scss\n            \n\n\n\n            \n                templateUrl\n                palette.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            patterns\n                        \n                        \n                            a reference to the default patterns (used for fill operations)\n\n                              \n                                Type:    Pattern[]\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onDesignModeChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(design_modes: DesignmodesService, inks: InkService, layers: LayersService, resolver: ComponentFactoryResolver, _snackBar: MatSnackBar)\n                        \n                    \n    \n                    \n                        \n                                Constructs a palette object. The palette supports drawing without components and dynamicallycreates components from shapes and scribbles on the canvas. \n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        design_modes\n                                                    \n                                                    \n                                                        a reference to the service containing the current design modes and selections\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        inks\n                                                    \n                                                    \n                                                        a reference to the service manaing the available inks\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        layers\n                                                    \n                                                    \n                                                        a reference to the sercie managing the view layers (z-indexes) of components\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        resolver\n                                                    \n                                                    \n                                                        a reference to the factory component for dynamically generating components\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        _snackBar\n                                                    \n                                                    \n                                                        _snackBar a reference to the snackbar component that shows data on move and select\n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             handleScroll\n                        \n                    \n    \n                    \n                        \n    handleScroll(data: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             rescale\n                        \n                    \n    \n                    \n                        \n    rescale(scale: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             closeSnackBar\n                        \n                    \n    \n                    \n                        \n    closeSnackBar()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             changeDesignmode\n                        \n                    \n    \n                    \n                        \n    changeDesignmode(name: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             createSubDraft\n                        \n                    \n    \n                    \n                        \n    createSubDraft(d: Draft)\n                        \n                    \n    \n                    \n                        \n                                dynamically creates a subdraft component, adds its inputs and event listeners, pushes the subdraft to the list of references\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        d\n                                                    \n                                                    \n                                                        a Draft object for this component to contain\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     SubdraftComponent\n    \n                                \n                                    \n                                        the created subdraft instance\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removeSubdraft\n                        \n                    \n    \n                    \n                        \n    removeSubdraft(subdraft: SubdraftComponent)\n                        \n                    \n    \n                    \n                        \n                                removes the subdraft sent to the function\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        subdraft\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             createAndSetPreview\n                        \n                    \n    \n                    \n                        \n    createAndSetPreview(d: Draft)\n                        \n                    \n    \n                    \n                        \n                                dynamically creates a subdraft component with specific requirements of the intersection, adds its inputs and event listeners, pushes the subdraft to the list of references\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        d\n                                                    \n                                                    \n                                                        a Draft object for this component to contain\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        the created subdraft instance\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             hasPreview\n                        \n                    \n    \n                    \n                        \n    hasPreview()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     boolean\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removePreview\n                        \n                    \n    \n                    \n                        \n    removePreview()\n                        \n                    \n    \n                    \n                        \n                                destorys the \n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        d\n                                                    \n                                                    \n                                                        a Draft object for this component to contain\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        the created subdraft instance\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public designModeChanged\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            designModeChanged()\n                        \n                    \n    \n                    \n                        \n                                Called from mixer when it receives a change from the design mode tool or keyboard presstriggers view mode changes required for this mode\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private removeSubscription\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            removeSubscription()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private resolveCoordsToNdx\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            resolveCoordsToNdx(p: Point)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     Interlacement\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private isSameNdx\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            isSameNdx(p1: any, p2: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     boolean\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private drawSelection\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            drawSelection(ndx: Interlacement)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private setCell\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            setCell(ndx: Interlacement)\n                        \n                    \n    \n                    \n                        \n                                sets the value of the scratchpad cell at ndxchecks for self interselcting \n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        ndx\n                                                    \n                                                    \n                                                        (i,j)\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private computeCellColor\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            computeCellColor(ink: string, over: Cell, under: boolean)\n                        \n                    \n    \n                    \n                        \n                                called by drawcell. Draws on screen based on the current ink\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        ink\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                                \n                                                    \n                                                        over\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                                \n                                                    \n                                                        under\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     string\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private computeCellValue\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            computeCellValue(ink: string, over: Cell, under: boolean)\n                        \n                    \n    \n                    \n                        \n                                applies the filter betetween over and under and returns the result\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        ink\n                                                    \n                                                    \n                                                        the ink with which to compute the transition\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        over\n                                                    \n                                                    \n                                                        the value of the primary (top) cell\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        under\n                                                    \n                                                    \n                                                        the value of the intersecting (bottom) cell \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private getScratchpadProduct\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            getScratchpadProduct(ndx: Interlacement, ink: string, over: Cell)\n                        \n                    \n    \n                    \n                        \n                                called when creating a subdraft from the drawing on the screen. Computes the resulting value based onall intersections with the drawing\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        ndx\n                                                    \n                                                    \n                                                        the i,j location of the cell we are checking\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        ink\n                                                    \n                                                    \n                                                        the currently selected ink\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        over\n                                                    \n                                                    \n                                                        the Cell we are checking against\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        true/false or null\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public computeFilter\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            computeFilter(ink: string, a: boolean, b: boolean)\n                        \n                    \n    \n                    \n                        \n                                takes two booleans and returns their result based on the ink assigned\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        ink\n                                                    \n                                                    \n                                                        the name of the ink in question \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        a\n                                                    \n                                                    \n                                                        the first (top) value \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        b\n                                                    \n                                                    \n                                                        the second (under) value\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        boolean result\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private drawCell\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            drawCell(ndx: Interlacement)\n                        \n                    \n    \n                    \n                        \n                                draw the cell at position ndx\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        ndx\n                                                    \n                                                    \n                                                        (i,j)\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onDeleteSubdraftCalled\n                        \n                    \n    \n                    \n                        \n    onDeleteSubdraftCalled(obj: any)\n                        \n                    \n    \n                    \n                        \n                                Deletes the subdraft that called this function.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             subdraftStarted\n                        \n                    \n    \n                    \n                        \n    subdraftStarted(obj: any)\n                        \n                    \n    \n                    \n                        \n                                A mouse event, originated in a subdraft, has been startedcheckes the design mode and handles the event as required\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        obj\n                                                    \n                                                    \n                                                        contains the id of the moving subdraft\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selectionStarted\n                        \n                    \n    \n                    \n                        \n    selectionStarted()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             shapeStarted\n                        \n                    \n    \n                    \n                        \n    shapeStarted(mouse: Point)\n                        \n                    \n    \n                    \n                        \n                                brings the base canvas to view and begins to render the\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        mouse\n                                                    \n                                                    \n                                                        the absolute position of the mouse on screen\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             shapeDragged\n                        \n                    \n    \n                    \n                        \n    shapeDragged(mouse: Point, shift: boolean)\n                        \n                    \n    \n                    \n                        \n                                resizes and redraws the shape between the the current mouse and where the shape started\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        mouse\n                                                    \n                                                    \n                                                        the absolute position of the mouse on screen\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             processShapeEnd\n                        \n                    \n    \n                    \n                        \n    processShapeEnd()\n                        \n                    \n    \n                    \n                        \n                                converts the shape on screen to a component\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             drawStarted\n                        \n                    \n    \n                    \n                        \n    drawStarted()\n                        \n                    \n    \n                    \n                        \n                                clears the scratchpad for the new drawing event\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getScratchPadBounds\n                        \n                    \n    \n                    \n                        \n    getScratchPadBounds()\n                        \n                    \n    \n                    \n                        \n                                gets the bounds of a drawing on the scratchpad, a drawing is represented by set cells\n    \n                                \n                                \n                                \n                                    Returns:     Interlacement[]\n    \n                                \n                                    \n                                        an object representing the bounds in the format of i, j (the row, column index of the pad)\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             processDrawingEnd\n                        \n                    \n    \n                    \n                        \n    processDrawingEnd()\n                        \n                    \n    \n                    \n                        \n                                handles checks and actions to take when drawing event endsgets the boudary of drawn segment and creates a subdraft containing that drawingif the drawing sits on top of an existing subdraft, merge the drawing into that subdraft (extending the original if neccessary)\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private onStart\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onStart(event: any)\n                        \n                    \n    \n                    \n                        \n                                handles actions to take when the mouse is down inside of the palette\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        the mousedown event\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private onMove\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onMove(event: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onDrag\n                        \n                    \n    \n                    \n                        \n    onDrag(event: any)\n                        \n                    \n    \n                    \n                        \n                                called form the subscription created on start, checks the index of the location and returns null if its the same\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        the event object\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private onEnd\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onEnd(event: any)\n                        \n                    \n    \n                    \n                        \n                                Called when the mouse is up or leaves the boundary of the view\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             processSelection\n                        \n                    \n    \n                    \n                        \n    processSelection()\n                        \n                    \n    \n                    \n                        \n                                Called when a selection operation ends. Checks to see if this selection intersects with any subdrafts andmerges and or splits as required. \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             subdraftMoved\n                        \n                    \n    \n                    \n                        \n    subdraftMoved(obj: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             subdraftDropped\n                        \n                    \n    \n                    \n                        \n    subdraftDropped(obj: any)\n                        \n                    \n    \n                    \n                        \n                                checks if this subdraft has been dropped onto of another and merges them accordingly \n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        obj\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mergeSubdrafts\n                        \n                    \n    \n                    \n                        \n    mergeSubdrafts(primary: SubdraftComponent)\n                        \n                    \n    \n                    \n                        \n                                merges a collection of subdraft components into the primary component, deletes the merged components\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        primary\n                                                    \n                                                    \n                                                        the draft to merge into\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        true or false to describe if a merge took place. \n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             computeHeddleValue\n                        \n                    \n    \n                    \n                        \n    computeHeddleValue(p: Point, main: SubdraftComponent, isect: SubdraftComponent[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     boolean\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             doOverlap\n                        \n                    \n    \n                    \n                        \n    doOverlap(l1: Point, r1: Point, l2: Point, r2: Point)\n                        \n                    \n    \n                    \n                        \n                                check if the rectangles defined by the points overlap\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        l1\n                                                    \n                                                    \n                                                        top left point of rectangle 1\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        r1\n                                                    \n                                                    \n                                                        bottom right point of rectangle 1\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        l2\n                                                    \n                                                    \n                                                        top left point of rectangle 2\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        r2\n                                                    \n                                                    \n                                                        bottom right point of rectanble 2\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        true or false in accordance to whether or not they overlap\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getLeftMost\n                        \n                    \n    \n                    \n                        \n    getLeftMost(main: SubdraftComponent, isects: SubdraftComponent[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     SubdraftComponent\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getTopMost\n                        \n                    \n    \n                    \n                        \n    getTopMost(main: SubdraftComponent, isects: SubdraftComponent[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     SubdraftComponent\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getRightMost\n                        \n                    \n    \n                    \n                        \n    getRightMost(main: SubdraftComponent, isects: SubdraftComponent[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     SubdraftComponent\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getBottomMost\n                        \n                    \n    \n                    \n                        \n    getBottomMost(main: SubdraftComponent, isects: SubdraftComponent[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     SubdraftComponent\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getSubdraft\n                        \n                    \n    \n                    \n                        \n    getSubdraft(id: number)\n                        \n                    \n    \n                    \n                        \n                                returns the subdraft component associated with this id\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        id\n                                                    \n                                                    \n                                                        the unique draft id contined in the subdraft\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     SubdraftComponent\n    \n                                \n                                    \n                                        the subdraft Component\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getSubdraftsIntersectingSelection\n                        \n                    \n    \n                    \n                        \n    getSubdraftsIntersectingSelection(selection: SelectionComponent)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getIntersectingSubdraftsForPoint\n                        \n                    \n    \n                    \n                        \n    getIntersectingSubdraftsForPoint(p: any)\n                        \n                    \n    \n                    \n                        \n                                get any subdrafts that intersect a given screen position\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        p\n                                                    \n                                                    \n                                                        the x, y position of this cell \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getIntersectingSubdrafts\n                        \n                    \n    \n                    \n                        \n    getIntersectingSubdrafts(primary: SubdraftComponent)\n                        \n                    \n    \n                    \n                        \n                                get any subdrafts that intersect primary based on checks on their boundaries\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        primary\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getSelectionBounds\n                        \n                    \n    \n                    \n                        \n    getSelectionBounds(c1: any, c2: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     Bounds\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getIntersectionBounds\n                        \n                    \n    \n                    \n                        \n    getIntersectionBounds(primary: SubdraftComponent, isect: SubdraftComponent)\n                        \n                    \n    \n                    \n                        \n                                returns a Bounds type that represents the intersection between primary and one intersecting subdraft\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        primary\n                                                    \n                                                    \n                                                        the rectangular area we are checking for intersections\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        isect\n                                                    \n                                                    \n                                                        an array of all the components that intersect\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     Bounds\n    \n                                \n                                    \n                                        the array of bounds of all intersections\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getCombinedBounds\n                        \n                    \n    \n                    \n                        \n    getCombinedBounds(moving: SubdraftComponent, isect: SubdraftComponent[])\n                        \n                    \n    \n                    \n                        \n                                gets the combined boundary of a Subdraft and any of its intersections\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        moving\n                                                    \n                                                    \n                                                        A SubdraftComponent that is our primary subdraft\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        isect\n                                                    \n                                                    \n                                                        Any subdrafts that intersect with this component \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     Bounds\n    \n                                \n                                    \n                                        the bounds of a rectangle that holds both components\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getCombinedDraft\n                        \n                    \n    \n                    \n                        \n    getCombinedDraft(bounds: Bounds, primary: SubdraftComponent, isect: SubdraftComponent[])\n                        \n                    \n    \n                    \n                        \n                                creates a draft in size bounds that contains all of the computed points of its intersections\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        bounds\n                                                    \n                                                    \n                                                        the boundary of all the intersections\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        primary\n                                                    \n                                                    \n                                                        the primary draft that we are checking for intersections\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        isect\n                                                    \n                                                    \n                                                        an Array of the intersecting components\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     Draft\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             canvas\n                        \n                    \n                    \n                        \n                            canvas:     HTMLCanvasElement\n    \n                        \n                    \n                    \n                        \n                            HTML Canvas element that draws the selection and currently cells drawn on this component\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             canvas_zndx\n                        \n                    \n                    \n                        \n                            canvas_zndx:     number\n    \n                        \n                    \n                    \n                        \n                            links to the z-index to push the canvas to the front or back of view when freehand drawing. \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             cx\n                        \n                    \n                    \n                        \n                            cx:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             last\n                        \n                    \n                    \n                        \n                            last:     Interlacement\n    \n                        \n                    \n                    \n                        \n                            stores an i and j of the last user selected location within the component\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             moveSubscription\n                        \n                    \n                    \n                        \n                            moveSubscription:     Subscription\n    \n                        \n                    \n                    \n                        \n                            Subscribes to move event after a touch event is started.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             preview\n                        \n                    \n                    \n                        \n                            preview:     SubdraftComponent\n    \n                        \n                    \n                    \n                        \n                            a placeholder to reference a temporary rendering of an union between subdraftsused to preview the changes that will happen if the subdraft is to be dropped at that point\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             preview_ref\n                        \n                    \n                    \n                        \n                            preview_ref:     ViewRef\n    \n                        \n                    \n                    \n                        \n                            a reference to the viewref for the intersection component to ease addign and deleting\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             scale\n                        \n                    \n                    \n                        \n                            scale:     number\n    \n                        \n                    \n                    \n                        \n                            a value to represent the current user defined scale for this component. \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             scratch_pad\n                        \n                    \n                    \n                        \n                            scratch_pad:     Cell[][]\n    \n                        \n                    \n                    \n                        \n                            holds the data of events drawn on this component (that are not associated with a subdraft)\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selection\n                        \n                    \n                    \n                        \n                            selection:     SelectionComponent\n    \n                        \n                    \n                    \n                        \n                            holds a reference to the selection component\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             shape_bounds\n                        \n                    \n                    \n                        \n                            shape_bounds:     Bounds\n    \n                        \n                    \n                    \n                        \n                            stores the bounds of the shape being drawn\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             shape_vtxs\n                        \n                    \n                    \n                        \n                            shape_vtxs:     Point[]\n    \n                        \n                    \n                    \n                        \n                            stores the vtx for freehand shapes\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             subdraft_refs\n                        \n                    \n                    \n                        \n                            subdraft_refs:     SubdraftComponent[]\n    \n                        \n                    \n                    \n                        \n                            holds a reference to the Subdraft Components within this view\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             vc\n                        \n                    \n                    \n                        \n                            vc:     ViewContainerRef\n    \n                        \n                    \n                    \n                        \n                            A container that supports the automatic generation and removal of the components inside of it\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             viewport\n                        \n                    \n                    \n                        \n                            viewport:     Bounds\n    \n                        \n                    \n                    \n                        \n                            used to manage the area of the screen that is in view based on scrolling and zooming\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Observable, Subscription, fromEvent, from, iif } from 'rxjs';\nimport { DesignmodesService } from '../../mixer/provider/designmodes.service';\nimport { Component, HostListener, ViewContainerRef, Input, ComponentFactoryResolver, ViewChild, OnInit, ViewRef, Output, EventEmitter } from '@angular/core';\nimport { SubdraftComponent } from './subdraft/subdraft.component';\nimport { SelectionComponent } from './selection/selection.component';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\nimport { Draft } from './../../core/model/draft';\nimport { Cell } from './../../core/model/cell';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { Point, Interlacement, Bounds } from '../../core/model/datatypes';\nimport { Pattern } from '../../core/model/pattern'; \nimport { InkService } from '../../mixer/provider/ink.service';\nimport {cloneDeep, isBuffer} from 'lodash';\nimport { LayersService } from '../../mixer/provider/layers.service';\nimport { Shape } from '../model/shape';\nimport { thresholdFreedmanDiaconis } from 'd3-array';\n\n\n@Component({\n  selector: 'app-palette',\n  templateUrl: './palette.component.html',\n  styleUrls: ['./palette.component.scss']\n})\n\n\nexport class PaletteComponent implements OnInit{\n\n\n  /**\n   * a reference to the default patterns (used for fill operations)\n   * @property {Array}\n   */ \n  @Input() patterns: Array;\n  @Output() onDesignModeChange: any = new EventEmitter();\n\n  /**\n   * Subscribes to move event after a touch event is started.\n   * @property {Subscription}\n   */\n  moveSubscription: Subscription;\n\n\n  /**\n   * A container that supports the automatic generation and removal of the components inside of it\n   */\n  @ViewChild('vc', {read: ViewContainerRef, static: true}) vc: ViewContainerRef;\n\n  /**\n   * holds a reference to the Subdraft Components within this view\n   * @property {Array}\n   */\n  subdraft_refs: Array;\n\n    /**\n   * a placeholder to reference a temporary rendering of an union between subdrafts\n   * used to preview the changes that will happen if the subdraft is to be dropped at that point\n   * @property {SubdraftComponent}\n   */\n  preview: SubdraftComponent;\n\n  /**\n   * a reference to the viewref for the intersection component to ease addign and deleting\n   * @property {ViewRef}\n   */\n  preview_ref: ViewRef;\n     \n  /**\n   * holds a reference to the selection component\n   * @property {Selection}\n   */\n  selection = new SelectionComponent();\n\n  /**\n   * holds the data of events drawn on this component (that are not associated with a subdraft)\n   * @property {Array>}\n   */\n  scratch_pad: Array> = [];\n\n  /**\n   * HTML Canvas element that draws the selection and currently cells drawn on this component\n   * @property {Canvas}\n   */\n  canvas: HTMLCanvasElement;\n  cx: any;\n\n  /**\n   * stores an i and j of the last user selected location within the component\n   * @property {Point}\n   */\n  last: Interlacement;\n\n\n  /**\n   * a value to represent the current user defined scale for this component. \n   * @property {number}\n   */\n\n   scale: number;\n\n  /**\n   * links to the z-index to push the canvas to the front or back of view when freehand drawing. \n   */\n   canvas_zndx:number = -1;\n  \n\n  /**\n   * used to manage the area of the screen that is in view based on scrolling and zooming\n   */\n   viewport:Bounds;\n  \n  /**\n   * stores the bounds of the shape being drawn\n   */\n   shape_bounds:Bounds;\n  \n  /**\n   * stores the vtx for freehand shapes\n   */\n   shape_vtxs:Array;\n  \n\n\n  /**\n   * Constructs a palette object. The palette supports drawing without components and dynamically\n   * creates components from shapes and scribbles on the canvas. \n   * @param design_modes  a reference to the service containing the current design modes and selections\n   * @param inks a reference to the service manaing the available inks\n   * @param layers a reference to the sercie managing the view layers (z-indexes) of components\n   * @param resolver a reference to the factory component for dynamically generating components\n   * @param _snackBar _snackBar a reference to the snackbar component that shows data on move and select\n   */\n  constructor(private design_modes: DesignmodesService, private inks: InkService, private layers: LayersService, private resolver: ComponentFactoryResolver, private _snackBar: MatSnackBar) { \n    this.subdraft_refs = [];\n    this.shape_vtxs = [];\n    this.viewport = {\n      topleft: {x:0, y:0}, \n      width: 0, \n      height:0\n    };\n  }\n\n/**\n * Called when palette is initailized\n */\n  ngOnInit(){\n    this.scale = 10;\n    this.vc.clear();\n    console.log(this.inks);\n  }\n\n  /**\n   * unsubscribes to all open subscriptions and clears the view component\n   */\n  ngOnDestroy(){\n\n    this.subdraft_refs.forEach(element => {\n      element.onSubdraftStart.unsubscribe();\n      element.onSubdraftDrop.unsubscribe();\n      element.onSubdraftMove.unsubscribe();\n      element.onDeleteCalled.unsubscribe();\n    });\n\n    this.vc.clear();\n    \n  }\n\n  /**\n   * Gets references to view items and adds to them after the view is initialized\n   */\n  ngAfterViewInit(){\n    this.canvas =  document.getElementById(\"scratch\");\n    this.cx = this.canvas.getContext(\"2d\");\n    this.canvas.width = 5000;\n    this.canvas.height = 5000;\n\n    this.selection.scale = this.scale;\n    this.selection.active = false;\n    this.designModeChanged();\n\n  }\n\n  handleScroll(data: any){\n    const div:HTMLElement = document.getElementById('scrollable-container');\n    this.viewport.topleft = {x: div.offsetParent.scrollLeft, y: div.offsetParent.scrollTop};\n  }\n\n  rescale(scale:number){\n    this.scale = scale;\n    this.subdraft_refs.forEach(sd => {\n      sd.rescale(scale);\n    });\n\n    if(this.preview !== undefined) this.preview.scale = this.scale;\n  }\n\n  closeSnackBar(){\n    this._snackBar.dismiss();\n  }\n\n  //called when the palette needs to change the design mode, emits output to parent\n  changeDesignmode(name: string) {\n    this.design_modes.select(name);\n    const mode = this.design_modes.getMode(name);\n    if(!mode.enable_inks){\n        this.inks.select('neq');\n    }\n\n    \n    this.onDesignModeChange.emit(name);\n  }\n\n  /**\n   * dynamically creates a subdraft component, adds its inputs and event listeners, pushes the subdraft to the list of references\n   * @param d a Draft object for this component to contain\n   * @returns the created subdraft instance\n   */\n  createSubDraft(d: Draft):SubdraftComponent{\n    const factory = this.resolver.resolveComponentFactory(SubdraftComponent);\n    const subdraft = this.vc.createComponent(factory);\n    subdraft.instance.onSubdraftDrop.subscribe(this.subdraftDropped.bind(this));\n    subdraft.instance.onSubdraftMove.subscribe(this.subdraftMoved.bind(this));\n    subdraft.instance.onSubdraftStart.subscribe(this.subdraftStarted.bind(this));\n    subdraft.instance.onDeleteCalled.subscribe(this.onDeleteSubdraftCalled.bind(this));\n    subdraft.instance.draft = d;\n    subdraft.instance.viewport = this.viewport;\n    subdraft.instance.patterns = this.patterns;\n    subdraft.instance.ink = this.inks.getSelected(); //default to the currently selected ink\n    subdraft.instance.scale = this.scale;\n    this.subdraft_refs.push(subdraft.instance);\n    return subdraft.instance;\n  }\n\n  /**\n   * removes the subdraft sent to the function\n   * @param subdraft \n   */\n  removeSubdraft(subdraft: SubdraftComponent){\n    const ndx = this.subdraft_refs.findIndex((sr) => (subdraft.canvas.id.toString() === sr.canvas.id.toString()));\n    this.vc.remove(ndx);\n    this.subdraft_refs.splice(ndx, 1);\n  }\n\n    /**\n   * dynamically creates a subdraft component with specific requirements of the intersection, adds its inputs and event listeners, pushes the subdraft to the list of references\n   * @param d a Draft object for this component to contain\n   * @returns the created subdraft instance\n   */\n    createAndSetPreview(d: Draft){\n      const factory = this.resolver.resolveComponentFactory(SubdraftComponent);\n      const subdraft = this.vc.createComponent(factory);\n      subdraft.instance.draft = d;\n      subdraft.instance.setAsPreview();\n      subdraft.instance.disableDrag();\n      this.preview_ref = subdraft.hostView;\n      this.preview = subdraft.instance;\n      this.preview.scale = this.scale;\n    }\n\n    hasPreview():boolean{\n      if(this.preview_ref === undefined) return false;\n      return true;\n    }\n\n  /**\n   * destorys the \n   * @param d a Draft object for this component to contain\n   * @returns the created subdraft instance\n   */\n    removePreview(){\n      const ndx = this.vc.indexOf(this.preview_ref);\n      this.vc.remove(ndx);\n      this.preview_ref = undefined;\n      this.preview = undefined;\n  }\n\n  /**\n   * Called from mixer when it receives a change from the design mode tool or keyboard press\n   * triggers view mode changes required for this mode\n   */\n  public designModeChanged(){\n\n    if(this.design_modes.isSelected('draw') || this.design_modes.isSelected('shape')){\n\n      this.subdraft_refs.forEach(sd => {\n        sd.disableDrag();\n      });\n\n    }else if(this.design_modes.isSelected('move')){\n\n      this.subdraft_refs.forEach(sd => {\n        sd.enableDrag();\n      });\n\n\n    }else if(this.design_modes.isSelected('select')){\n      this.subdraft_refs.forEach(sd => {\n        sd.disableDrag();\n      });\n    }\n\n  }\n\n\n   private removeSubscription() {    \n    if (this.moveSubscription) {\n      this.moveSubscription.unsubscribe();\n    }\n  }\n\n  private resolveCoordsToNdx(p: Point) : Interlacement {    \n    const i = Math.floor((p.y - 64) / this.scale);\n    const j = Math.floor((p.x) / this.scale);\n    return {i: i, j: j, si: i};\n  }\n\n\n  private isSameNdx(p1: any, p2:any) : boolean {    \n    if(p1.i != p2.i ) return false;\n    if(p1.j != p2.j) return false;\n    return true;\n  }\n\n\n  private drawSelection(ndx: Interlacement){\n\n\n    this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    const bounds ={\n      top: this.selection.start.j*this.scale,\n      left: this.selection.start.i*this.scale,\n      bottom: ndx.j *this.scale,\n      right: ndx.i*this.scale\n    };\n\n    //will draw on outside of selection\n    this.cx.strokeStyle = \"#ff4081\";\n    this.cx.strokeRect(bounds.top, bounds.left, bounds.bottom-bounds.top, bounds.right-bounds.left);\n      \n  }\n\n  /**\n   * sets the value of the scratchpad cell at ndx\n   * checks for self interselcting \n   * @param ndx (i,j)\n   */\n  private setCell(ndx: Interlacement){\n    const c: Cell = this.scratch_pad[ndx.i][ndx.j];\n    if(this.inks.getSelected() === \"down\") c.setHeddle(false);\n    else c.setHeddle(true);\n    //use the code below to use past scratchpad values, but this seems wrong\n    // console.log(c);\n    // const val: boolean = c.isSet(); //check for a previous value\n    // c.setHeddle(true);\n\n    // if(val){\n    //   const newval:boolean = this.computeCellValue(this.inks.getSelected(), c, val);\n    //   console.log(\"setting to\", newval);\n    //   c.setHeddle(newval);\n    // } \n  }\n\n  /**\n   * called by drawcell. Draws on screen based on the current ink\n   * @param ink \n   * @param over \n   * @param under \n   * @returns \n   */\n  private computeCellColor(ink: string, over: Cell, under: boolean): string{\n\n    const res: boolean = this.computeCellValue(ink, over, under);\n    if(ink === 'unset' && res == true) return \"#cccccc\"; \n    if(res ===null) return \"#fafafa\";\n    if(res) return \"#000000\";\n    return \"#ffffff\";      \n  }\n\n  /**\n   * applies the filter betetween over and under and returns the result\n   * @param ink the ink with which to compute the transition\n   * @param over the value of the primary (top) cell\n   * @param under the value of the intersecting (bottom) cell \n   * @returns \n   */\n  private computeCellValue(ink: string, over: Cell, under: boolean): boolean{\n    \n    let res: boolean = this.computeFilter(ink, over.getHeddle(), under);\n    return res;   \n  }\n\n  /**\n   * called when creating a subdraft from the drawing on the screen. Computes the resulting value based on\n   * all intersections with the drawing\n   * @param ndx the i,j location of the cell we are checking\n   * @param ink the currently selected ink\n   * @param over the Cell we are checking against\n   * @returns true/false or null\n   */\n  private getScratchpadProduct(ndx: Interlacement, ink: string, over: Cell): boolean{\n    \n    switch(ink){\n      case 'neq':\n      case 'and':\n      case 'or':\n\n        const p = {x: ndx.j * this.scale, y: ndx.i * this.scale};\n        const isect = this.getIntersectingSubdraftsForPoint(p);\n  \n        if(isect.length > 0){\n          const prev: boolean = isect[0].resolveToValue(p);\n          return this.computeCellValue(ink, over, prev);\n        }else{\n          return this.computeCellValue(ink, over, null);\n        }\n      break;\n\n      default: \n        return this.computeCellValue(ink, over, null);\n      break;\n    }\n   return null; \n  }\n  /**\n   * takes two booleans and returns their result based on the ink assigned\n   * @param ink the name of the ink in question \n   * @param a the first (top) value \n   * @param b the second (under) value\n   * @returns boolean result\n   */\n  public computeFilter(ink: string, a: boolean, b: boolean):boolean{\n    switch(ink){\n      case 'neq':\n        if(a === null) return b;\n        if(b === null) return a;\n        return (a !== b);\n      break;\n\n      case 'up':\n        if(a === null) return b;\n        if(a === true) return true;\n        return false;\n      break;\n\n      case 'down':\n        if(a === null) return b;\n        if(b === null) return a;\n        if(a === false) return false;\n        return b;\n      break;\n\n      case 'unset':\n        if(a === null) return b;\n        if(b === null) return a;\n        if(a === true) return null;\n        else return b;\n      break;\n\n      case 'and':\n      if(a === null || b === null) return null;\n      return (a && b)\n      break;\n\n      case 'or':\n        if(a === null) return b;\n        if(b === null) return a;\n        return (a || b);\n      break;\n\n    }\n  }\n\n  /**\n   * draw the cell at position ndx\n   * @param ndx (i,j)\n   */\n  private drawCell(ndx: Interlacement){\n\n    const c: Cell = this.scratch_pad[ndx.i][ndx.j];\n    this.cx.fillStyle = \"#cccccc\";\n  \n    const selected_ink:string = this.inks.getSelected();\n\n    switch(selected_ink){\n      case 'neq':\n      case 'and':\n      case 'or':\n\n        const p = {x: ndx.j * this.scale, y: ndx.i * this.scale};\n        const isect = this.getIntersectingSubdraftsForPoint(p);\n\n        if(isect.length > 0){\n          const prev: boolean = isect[0].resolveToValue(p);\n          this.cx.fillStyle = this.computeCellColor(selected_ink, c, prev);\n        }else{\n          this.cx.fillStyle =  this.computeCellColor(selected_ink, c, null);;\n        }\n      break;\n\n      default: \n        this.cx.fillStyle = this.computeCellColor(selected_ink, c, null);\n      break;\n\n    }\n\n      this.cx.fillRect(ndx.j*this.scale, ndx.i*this.scale, this.scale, this.scale);      \n  }\n\n  /**\n   * Deletes the subdraft that called this function.\n   */\n    onDeleteSubdraftCalled(obj: any){\n      console.log(\"deleting \"+obj.id);\n      if(obj === null) return;\n      const sd = this.subdraft_refs.find((sr) => (obj.id.toString() === sr.canvas.id.toString()));\n      this.removeSubdraft(sd);\n   }\n\n  /**\n   * A mouse event, originated in a subdraft, has been started\n   * checkes the design mode and handles the event as required\n   * @param obj contains the id of the moving subdraft\n   */\n  subdraftStarted(obj: any){\n\n    if(obj === null) return;\n\n    if(this.design_modes.isSelected(\"move\")){\n  \n      //get the reference to the draft that's moving\n      const moving = this.getSubdraft(obj.id);\n      if(moving === null) return; \n      this._snackBar.openFromComponent(SnackbarComponent, {\n        data: moving\n      });\n      const isect:Array = this.getIntersectingSubdrafts(moving);\n\n      if(isect.length == 0) return;\n      \n      const bounds: any = this.getCombinedBounds(moving, isect);\n      const temp: Draft = this.getCombinedDraft(bounds, moving, isect);\n      this.createAndSetPreview(temp);\n      this.preview.drawDraft();\n      this.preview.setComponentPosition(bounds.topleft);\n     \n    }else if(this.design_modes.isSelected(\"select\")){\n      this.selectionStarted();\n    }else if(this.design_modes.isSelected(\"draw\")){\n      this.drawStarted();\n    }\n\n }\n\n\n selectionStarted(){\n\n  this.selection.start = this.last;\n  this.selection.active = true;\n  this._snackBar.openFromComponent(SnackbarComponent, {\n    data: this.selection\n  });\n }\n\n /**\n * brings the base canvas to view and begins to render the\n * @param mouse the absolute position of the mouse on screen\n */\nshapeStarted(mouse: Point){\n  \n  this.shape_bounds = {\n    topleft: mouse,\n    width: this.scale,\n    height: this.scale\n  };\n\n\n  this.shape_vtxs = [];\n  this.canvas_zndx = this.layers.createLayer(); //bring this canvas forward\n  this.cx.fillStyle = \"#ff4081\";\n  this.cx.fillRect( this.shape_bounds.topleft.x, this.shape_bounds.topleft.y, this.shape_bounds.width,this.shape_bounds.height);\n\n\n}\n\n  /**\n   * resizes and redraws the shape between the the current mouse and where the shape started\n   * @param mouse the absolute position of the mouse on screen\n   */\nshapeDragged(mouse: Point, shift: boolean){\n\n  this.shape_bounds.width =  (mouse.x - this.shape_bounds.topleft.x);\n  this.shape_bounds.height =  (mouse.y - this.shape_bounds.topleft.y);\n\n  if(shift){\n    const max: number = Math.max(this.shape_bounds.width, this.shape_bounds.height);\n    \n    //allow lines to snap to coords\n    if(this.design_modes.isSelected('line')){\n        if(Math.abs(this.shape_bounds.width)  1){\n      this.cx.moveTo(this.shape_vtxs[0].x, this.shape_vtxs[0].y);\n\n      for(let i = 1; i  bottom) bottom = this.shape_vtxs[i].y;\n        if(this.shape_vtxs[i].x > right) right = this.shape_vtxs[i].x;\n    }\n\n    this.shape_bounds.topleft = {x: left, y: top};\n    this.shape_bounds.width = right - left;\n    this.shape_bounds.height = bottom - top;\n\n    this.shape_vtxs = [];\n    \n  }else{\n    if( this.shape_bounds.width > = shape.getDraft();\n\n  const wefts: number = pattern.length;\n  if(wefts {\n    let bottom: number = 0;\n    let right: number = 0;\n    let top: number = this.scratch_pad.length-1;\n    let left: number = this.scratch_pad[0].length-1;\n\n    for(let i = 0; i  bottom) bottom = i;\n          if(j > right) right = j;\n        } \n      }\n    }\n\n    return [{i: top, j: left, si: -1}, {i: bottom, j: right, si: -1}];\n\n  }\n\n  /**\n   * handles checks and actions to take when drawing event ends\n   * gets the boudary of drawn segment and creates a subdraft containing that drawing\n   * if the drawing sits on top of an existing subdraft, merge the drawing into that subdraft (extending the original if neccessary)\n   * @returns \n   */\n  processDrawingEnd(){\n\n    this.canvas_zndx = -1;\n\n    if(this.scratch_pad === undefined) return;\n    if(this.scratch_pad[0] === undefined) return;\n    \n    const corners: Array = this.getScratchPadBounds();\n\n    const warps = corners[1].j - corners[0].j + 1;\n    const wefts = corners[1].i - corners[0].i + 1;\n\n  \n    //there must be at least one cell selected\n    if(warps  this.onDrag(e)); \n\n      if(this.design_modes.isSelected(\"select\")){\n          this.selectionStarted();\n      }else if(this.design_modes.isSelected(\"draw\")){\n          this.drawStarted();    \n          this.setCell(ndx);\n          this.drawCell(ndx); \n      }else if(this.design_modes.isSelected(\"shape\")){\n\n        if(this.design_modes.isSelected('free')){\n          if(ctrl){\n            this.processShapeEnd();\n            this.changeDesignmode('move');\n            this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n          }else{\n            if(this.shape_vtxs.length == 0) this.shapeStarted(mouse);\n            this.shape_vtxs.push(mouse);\n          }\n            \n          \n        }else{\n          this.shapeStarted(mouse);\n        }\n      }\n  }\n\n\n  @HostListener('mousemove', ['$event'])\n  private onMove(event) {\n\n    if(this.design_modes.isSelected('free') && this.shape_vtxs.length > 0){\n      const shift: boolean = event.shiftKey;\n      const mouse:Point = {x: this.viewport.topleft.x + event.clientX, y:this.viewport.topleft.y+event.clientY};\n      const ndx:any = this.resolveCoordsToNdx(mouse);\n      mouse.x = ndx.j * this.scale;\n      mouse.y = ndx.i * this.scale;\n      this.shapeDragged(mouse, shift);\n    }\n  }\n  \n\n\n\n  /**\n   * called form the subscription created on start, checks the index of the location and returns null if its the same\n   * @param event the event object\n   */\n  onDrag(event){\n\n\n    const shift: boolean = event.shiftKey;\n    const mouse: Point = {x: this.viewport.topleft.x + event.clientX, y:this.viewport.topleft.y+event.clientY};\n    const ndx:Interlacement = this.resolveCoordsToNdx(mouse);\n    //use this to snap the mouse to the nearest coord\n    mouse.x = ndx.j * this.scale;\n    mouse.y = ndx.i * this.scale;\n\n    if(this.isSameNdx(this.last, ndx)) return;\n\n    if(this.design_modes.isSelected(\"select\")){\n\n     this.drawSelection(ndx);\n     const bounds = this.getSelectionBounds(this.selection.start,  this.last);    \n     this.selection.setPositionAndSize(bounds);\n    \n    }else if(this.design_modes.isSelected(\"draw\")){\n      this.setCell(ndx);\n      this.drawCell(ndx);\n    }else if(this.design_modes.isSelected(\"shape\")){\n      this.shapeDragged(mouse, shift);\n    }\n    \n    this.last = ndx;\n  }\n\n  \n\n/**\n * Called when the mouse is up or leaves the boundary of the view\n * @param event \n * @returns \n */\n  @HostListener('mouseleave', ['$event'])\n  @HostListener('mouseup', ['$event'])\n     private onEnd(event) {\n\n      //if this.last is null, we have a mouseleave with no mousestart\n      if(this.last === undefined) return;\n      const mouse: Point = {x: this.viewport.topleft.x + event.clientX, y:this.viewport.topleft.y+event.clientY};\n      const ndx:Interlacement = this.resolveCoordsToNdx(mouse);\n      //use this to snap the mouse to the nearest coord\n      mouse.x = ndx.j * this.scale;\n      mouse.y = ndx.i * this.scale;\n\n      this.removeSubscription();   \n\n      if(this.design_modes.isSelected(\"select\")){\n        if(this.selection.active)this.processSelection();\n        this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.changeDesignmode('move');\n\n      }else if(this.design_modes.isSelected(\"draw\")){\n        this.processDrawingEnd();\n        this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.changeDesignmode('move');\n\n\n      }else if(this.design_modes.isSelected(\"shape\")){\n        if(!this.design_modes.isSelected('free')){\n          this.processShapeEnd();\n          this.changeDesignmode('move');\n          this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n      } \n\n      //unset vars that would have been created on press\n      this.scratch_pad = undefined;\n      this.last = undefined;\n      this.selection.active = false;\n  }\n  \n \n  /**\n   * Called when a selection operation ends. Checks to see if this selection intersects with any subdrafts and \n   * merges and or splits as required. \n   */\n  processSelection(){\n\n    this.closeSnackBar();\n\n    //create the selection as subdraft\n    const bounds:Bounds = this.getSelectionBounds(this.selection.start,  this.last);    \n    \n    const sc:SubdraftComponent = this.createSubDraft(new Draft({wefts: bounds.height/this.scale, warps: bounds.width/this.scale}));\n    sc.setComponentBounds(bounds);\n    sc.disableDrag();\n    \n    //get any subdrafts that intersect the one we just made\n    const isect:Array = this.getIntersectingSubdrafts(sc);\n\n    if(isect.length == 0) return;\n\n    //get a draft that reflects only the poitns in the selection view\n    const new_draft: Draft = this.getCombinedDraft(bounds, sc, isect);\n    sc.setNewDraft(new_draft);\n    sc.drawDraft();\n\n    isect.forEach(el => {\n      const ibound = this.getIntersectionBounds(sc, el);\n\n      if(el.isSameBoundsAs(ibound)){\n         console.log(\"Component had same Bounds as Intersection, Consumed\");\n         this.removeSubdraft(el);\n      }else{\n         const sd_draft = el.draft.pattern;\n         for(let i = 0; i  = this.getIntersectingSubdrafts(moving);\n      \n      if(isect.length == 0){\n        if(this.hasPreview()) this.removePreview();\n        return;\n      } \n\n      //const bounds: Bounds = this.getIntersectionBounds(moving, isect[0]);\n      const bounds: Bounds = this.getCombinedBounds(moving, isect);\n      const temp: Draft = this.getCombinedDraft(bounds, moving, isect);\n      if(this.hasPreview()) this.preview.setNewDraft(temp);\n      else this.createAndSetPreview(temp);\n      \n      this.preview.setComponentPosition(bounds.topleft);\n      this.preview.drawDraft();\n    }\n\n\n   /**\n    * checks if this subdraft has been dropped onto of another and merges them accordingly \n    * @param obj \n    * @returns \n    */\n  subdraftDropped(obj: any){\n\n    this.closeSnackBar();\n\n     if(obj === null) return;\n  \n      //creaet a subdraft of this intersection\n      if(this.hasPreview()){\n        const sd: SubdraftComponent = this.createSubDraft(new Draft({wefts: this.preview.draft.wefts, warps: this.preview.draft.warps}));\n        const to_right: Point = this.preview.getTopleft();\n        to_right.x += this.preview.bounds.width + 20;\n        sd.draft.pattern = cloneDeep(this.preview.draft.pattern);\n        sd.setComponentPosition(to_right);\n        sd.setComponentSize(this.preview.bounds.width, this.preview.bounds.height);\n        sd.setAsPreview(); //this is a hack - get better way of brining tot fronott\n        this.removePreview();\n      } \n      \n      //get the reference to the draft that's moving\n      const moving = this.getSubdraft(obj.id);\n      if(moving === null) return; \n\n      //disable this too see what happens\n      // const had_merge = this.mergeSubdrafts(moving);\n      // console.log(\"had merge\", had_merge);\n      // if(!had_merge) \n      // moving.drawDraft();\n\n  }\n\n  /**\n   * merges a collection of subdraft components into the primary component, deletes the merged components\n   * @param primary the draft to merge into\n   * @returns true or false to describe if a merge took place. \n   */\n  mergeSubdrafts(primary: SubdraftComponent): boolean{\n    \n    const isect:Array = this.getIntersectingSubdrafts(primary);\n\n      if(isect.length == 0){\n        return false;\n      }   \n\n      const bounds: Bounds = this.getCombinedBounds(primary, isect);\n      const temp: Draft = this.getCombinedDraft(bounds, primary, isect);\n\n      primary.setNewDraft(temp);\n      primary.setComponentPosition(bounds.topleft);\n      primary.drawDraft();\n\n    //remove the intersecting drafts from the view containier and from subrefts\n    isect.forEach(element => {\n      this.removeSubdraft(element);\n    });\n    return true;\n  }\n\n  computeHeddleValue(p:Point, main: SubdraftComponent, isect: Array):boolean{\n    const a:boolean = main.resolveToValue(p);\n    //this may return an empty array, because the intersection might not have the point\n    const b_array:Array = isect.filter(el => el.hasPoint(p));\n\n    //should never have more than one value in barray\n    // if(b_array.length > 1) console.log(\"WARNING: Intersecting with Two Elements\");\n\n    const val:boolean = b_array.reduce((acc:boolean, arr) => arr.resolveToValue(p), null);   \n    \n    return this.computeFilter(main.ink, a, val);\n  }\n\n/**\n * check if the rectangles defined by the points overlap\n * @param l1 top left point of rectangle 1\n * @param r1 bottom right point of rectangle 1\n * @param l2 top left point of rectangle 2\n * @param r2 bottom right point of rectanble 2\n * @returns true or false in accordance to whether or not they overlap\n */\n  doOverlap(l1:Point,  r1:Point,  l2:Point,  r2:Point){\n\n    if (l1.x == r1.x || l1.y == r2.y || l2.x == r2.x\n        || l2.y == r2.y) {\n        // the line cannot have positive overlap\n        return false;\n    }\n \n    // If one rectangle is on left side of other\n    if (l1.x >= r2.x || l2.x >= r1.x){\n        return false;\n      }\n \n    // If one rectangle is above other\n    if (l1.y >= r2.y || l2.y >= r1.y){\n        return false;\n    }\n    return true;\n  }\n\n\n\n  getLeftMost(main:SubdraftComponent,  isects:Array):SubdraftComponent{\n\n    return isects.reduce((acc, isect) => {\n      if(isect.getTopleft().x ):SubdraftComponent{\n\n    return isects.reduce((acc, isect) => {\n      if(isect.getTopleft().y ):SubdraftComponent{\n\n    return isects.reduce((acc, isect) => {\n      if((isect.getTopleft().x + isect.bounds.width) > (acc.getTopleft().x + acc.bounds.width)) {\n        acc = isect;\n      }\n      return acc;\n    }, main);    \n  }\n\n  getBottomMost(main:SubdraftComponent,  isects:Array):SubdraftComponent{\n\n    return isects.reduce((acc, isect) => {\n      if((isect.getTopleft().y + isect.bounds.height)> (acc.getTopleft().y + acc.bounds.height)) {\n        acc = isect;\n      }\n      return acc;\n    }, main);    \n  }\n\n\n  /**\n   * returns the subdraft component associated with this id\n   * @param id the unique draft id contined in the subdraft\n   * @returns the subdraft Component\n   */\n  getSubdraft(id:number): SubdraftComponent {\n    return  this.subdraft_refs.find(sr => (sr.draft.id.toString() === id.toString()));\n  }\n\n\n  getSubdraftsIntersectingSelection(selection: SelectionComponent){\n\n    //find intersections between main and the others\n    const isect:Array = this.subdraft_refs.filter(sr => (this.doOverlap(\n      selection.bounds.topleft, \n      {x:  selection.bounds.topleft.x + selection.bounds.width, y: selection.bounds.topleft.y + selection.bounds.height}, \n      sr.getTopleft(), \n      {x: sr.getTopleft().x + sr.bounds.width, y: sr.getTopleft().y + sr.bounds.height}\n      ) ? sr : null));\n\n    return isect;\n  \n  }\n\n\n /**\n   * get any subdrafts that intersect a given screen position\n   * @param p the x, y position of this cell \n   * @returns \n   */\n  getIntersectingSubdraftsForPoint(p: any){\n\n\n    const primary_topleft = {x:  p.x, y: p.y };\n    const primary_bottomright = {x:  p.x + this.scale, y: p.y + this.scale};\n\n    const isect:Array = [];\n     this.subdraft_refs.forEach(sr => {\n      let sr_bottomright = {x: sr.getTopleft().x + sr.bounds.width, y: sr.getTopleft().y + sr.bounds.height};\n      const b: boolean = this.doOverlap(primary_topleft, primary_bottomright, sr.getTopleft(), sr_bottomright);\n      if(b) isect.push(sr);\n     });\n\n    return isect;\n  }\n\n  /**\n   * get any subdrafts that intersect primary based on checks on their boundaries\n   * @param primary \n   * @returns \n   */\n  getIntersectingSubdrafts(primary: SubdraftComponent){\n\n    const to_check:Array =  this.subdraft_refs.filter(sr => (sr.draft.id.toString() !== primary.draft.id.toString()));\n    const primary_bottomright = {x:  primary.getTopleft().x + primary.bounds.width, y: primary.getTopleft().y + primary.bounds.height};\n\n\n     const isect:Array = [];\n     to_check.forEach(sr => {\n      let sr_bottomright = {x: sr.getTopleft().x + sr.bounds.width, y: sr.getTopleft().y + sr.bounds.height};\n      const b: boolean = this.doOverlap(primary.getTopleft(), primary_bottomright, sr.getTopleft(), sr_bottomright);\n      if(b) isect.push(sr);\n     });\n\n    return isect;\n  }\n\n  getSelectionBounds(c1: any, c2: any): Bounds{\n      let bottomright = {x: 0, y:0};\n      let bounds:Bounds = {\n        topleft:{x: 0, y:0},\n        width: 0,\n        height: 0\n      }\n      if(c1.i ):Bounds{\n    \n    const bounds: Bounds = {\n      topleft: {x: 0, y:0},\n      width: 0,\n      height: 0\n    }\n\n    bounds.topleft.x = this.getLeftMost(moving, isect).getTopleft().x;\n    bounds.topleft.y = this.getTopMost(moving, isect).getTopleft().y;\n\n    const rm =  this.getRightMost(moving, isect);\n    const bm =  this.getBottomMost(moving, isect);\n\n    bounds.width = (rm.getTopleft().x + rm.bounds.width) - bounds.topleft.x;\n    bounds.height =(bm.getTopleft().y + bm.bounds.height) - bounds.topleft.y;\n\n    return bounds;\n\n  }\n\n  /**\n   * creates a draft in size bounds that contains all of the computed points of its intersections\n   * @param bounds the boundary of all the intersections\n   * @param primary the primary draft that we are checking for intersections\n   * @param isect an Array of the intersecting components\n   * @returns \n   */\n  getCombinedDraft(bounds: Bounds, primary: SubdraftComponent, isect: Array):Draft{\n\n    const temp: Draft = new Draft({id: primary.draft.id, name: primary.draft.name, warps: Math.floor(bounds.width / primary.scale), wefts: Math.floor(bounds.height / primary.scale)});\n\n    for(var i = 0; i \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatternModal.html":{"url":"components/PatternModal.html","title":"component - PatternModal","body":"\n                   \n\n\n\n  Components\n  PatternModal\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/modal/pattern/pattern.modal.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pattern-modal\n            \n\n            \n                styleUrls\n                pattern.modal.scss\n            \n\n\n\n            \n                templateUrl\n                pattern.modal.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialogRef: any, pattern: Pattern)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             onNoClick\n                        \n                    \n    \n                    \n                        \n    onNoClick()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             close\n                        \n                    \n    \n                    \n                        \n    close()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             save\n                        \n                    \n    \n                    \n                        \n    save()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updatePatternSize\n                        \n                    \n    \n                    \n                        \n    updatePatternSize(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updatePatternWidth\n                        \n                    \n    \n                    \n                        \n    updatePatternWidth(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             pattern\n                        \n                    \n                    \n                        \n                            pattern:     Pattern\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Cell } from '../../../core/model/cell';\n\nimport { Pattern } from '../../../core/model/pattern';\n\n@Component({\n  selector: 'app-pattern-modal',\n  templateUrl: './pattern.modal.html',\n  styleUrls: ['./pattern.modal.scss']\n})\nexport class PatternModal implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef,\n             @Inject(MAT_DIALOG_DATA) public pattern: Pattern) { }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(this.pattern);\n  }\n\n  close() {\n    this.onNoClick();\n  }\n\n  save() {\n    this.onNoClick();\n  }\n\n  updatePatternSize(e) {\n    var pattern = [];\n    var h = this.pattern.pattern.length;\n    for (var i = 0; i \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatternsComponent.html":{"url":"components/PatternsComponent.html","title":"component - PatternsComponent","body":"\n                   \n\n\n\n  Components\n  PatternsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/tool/patterns/patterns.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-patterns\n            \n\n            \n                styleUrls\n                patterns.component.scss\n            \n\n\n\n            \n                templateUrl\n                patterns.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            patterns\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            selection\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onCreatePattern\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onFill\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onPatternChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onRemovePattern\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialog: MatDialog)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             updateFavorite\n                        \n                    \n    \n                    \n                        \n    updateFavorite(p: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removePattern\n                        \n                    \n    \n                    \n                        \n    removePattern(pattern: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             openPatternDialog\n                        \n                    \n    \n                    \n                        \n    openPatternDialog(pattern: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             print\n                        \n                    \n    \n                    \n                        \n    print(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             fill\n                        \n                    \n    \n                    \n                        \n    fill(id: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { PatternModal } from '../../modal/pattern/pattern.modal';\nimport { Pattern } from '../../../core/model/pattern';\nimport { PatternService } from '../../../core/provider/pattern.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-patterns',\n  templateUrl: './patterns.component.html',\n  styleUrls: ['./patterns.component.scss']\n})\nexport class PatternsComponent implements OnInit {\n  \n\n  @Input()  patterns;\n  @Input()  selection;\n  @Output() onPatternChange: any = new EventEmitter();\n  @Output() onCreatePattern: any = new EventEmitter();\n  @Output() onRemovePattern: any = new EventEmitter();\n  @Output() onFill: any = new EventEmitter();\n\n\n  \n  constructor(private dialog: MatDialog) { \n  }\n\n  ngOnInit() {\n\n  }\n\n  updateFavorite(p) {\n\n    this.patterns[p].favorite = !this.patterns[p].favorite;\n\n    var obj:any = {};\n    obj.patterns = _.cloneDeep(this.patterns);\n\n     if(this.selection !== undefined) this.onFill.emit(p);\n    this.onPatternChange.emit(obj);\n  }\n\n\n  removePattern(pattern) {\n    this.onRemovePattern.emit({pattern: pattern});\n  }\n\n  openPatternDialog(pattern) {\n    console.log(\"open dialog\", this.selection);\n    var create = false;\n\n    if (!pattern) {\n      pattern = new Pattern({pattern: this.selection});\n      if(this.selection !== undefined) pattern.setPattern(this.selection);\n\n      console.log(pattern);\n\n      create = true;\n    }\n\n    const dialogRef = this.dialog.open(PatternModal, \n      {data: pattern });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!create) {\n        this.patterns[result.id] = result;\n      } else {\n        this.onCreatePattern.emit({pattern: result});\n      }\n\n      var obj: any = {};\n      obj.patterns = _.cloneDeep(this.patterns);\n      this.onPatternChange.emit(obj);\n    });\n  }\n\n  print(e) {\n    console.log(e);\n  }\n\n  fill(id){\n    this.onFill.emit(id);\n\n  }\n\n\n\n\n}\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchematicComponent.html":{"url":"components/SchematicComponent.html","title":"component - SchematicComponent","body":"\n                   \n\n\n\n  Components\n  SchematicComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/weaver/tool/schematic/schematic.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-schematic\n            \n\n            \n                styleUrls\n                schematic.component.scss\n            \n\n\n\n            \n                templateUrl\n                schematic.component.html\n            \n\n\n        \n    \n\n\n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onConnectionCreate\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onLabelCreate\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialog: MatDialog)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             openConnectionDialog\n                        \n                    \n    \n                    \n                        \n    openConnectionDialog()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             openLabelDialog\n                        \n                    \n    \n                    \n                        \n    openLabelDialog()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ConnectionModal } from '../../modal/connection/connection.modal';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\n\n\n@Component({\n  selector: 'app-schematic',\n  templateUrl: './schematic.component.html',\n  styleUrls: ['./schematic.component.scss']\n})\nexport class SchematicComponent implements OnInit {\n\n  @Output() onConnectionCreate: any = new EventEmitter();\n  @Output() onLabelCreate: any = new EventEmitter();\n\n\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  openConnectionDialog() {\n\n    this.onConnectionCreate.emit();\n  }\n\n  openLabelDialog() {\n\n    this.onLabelCreate.emit();\n  }\n\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShuttlesModal.html":{"url":"components/ShuttlesModal.html","title":"component - ShuttlesModal","body":"\n                   \n\n\n\n  Components\n  ShuttlesModal\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/modal/shuttles/shuttles.modal.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shuttles-modal\n            \n\n            \n                styleUrls\n                shuttles.modal.scss\n            \n\n\n\n            \n                templateUrl\n                shuttles.modal.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialogRef: any, data: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             close\n                        \n                    \n    \n                    \n                        \n    close()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             save\n                        \n                    \n    \n                    \n                        \n    save()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             data\n                        \n                    \n                    \n                        \n                            data:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             shuttle\n                        \n                    \n                    \n                        \n                            shuttle:     Shuttle\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             type\n                        \n                    \n                    \n                        \n                            type:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             warps\n                        \n                    \n                    \n                        \n                            warps:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { FormGroup, FormControl, Validators, FormBuilder }  from '@angular/forms';\nimport { Shuttle } from '../../../core/model/shuttle';\n\nimport * as g from 'g.js';\n\n@Component({\n  selector: 'app-shuttles-modal',\n  templateUrl: './shuttles.modal.html',\n  styleUrls: ['./shuttles.modal.scss']\n})\nexport class ShuttlesModal {\n  shuttle: Shuttle;\n  warps: number;\n  type: string;\n\n\n  constructor(\n      private dialogRef: MatDialogRef,\n      @Inject(MAT_DIALOG_DATA) public data: any) {\n\n     console.log(\"in constructor\", data);\n\n      this.type = (data.type).charAt(0).toUpperCase() + (data.type).slice(1);\n      if (!data.shuttle) {\n        this.shuttle = new Shuttle();\n      } else {\n        this.shuttle = data.shuttle;\n      }\n\n      this.warps = data.warps;\n\n  }\n\n  // processData(e: any) {\n  //   var img = e.data;\n  //   var data = [];\n\n  //   for (var i=0; i\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n  Components\n  SnackbarComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/mixer/palette/snackbar/snackbar.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                snackbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                snackbar.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(data: SubdraftComponent | SelectionComponent)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             data\n                        \n                    \n                    \n                        \n                            data:     SubdraftComponent | SelectionComponent\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             subdraft\n                        \n                    \n                    \n                        \n                            subdraft:     SubdraftComponent | SelectionComponent\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\nimport { Draft } from '../../../core/model/draft';\nimport { SelectionComponent } from '../selection/selection.component';\nimport { SubdraftComponent} from '../subdraft/subdraft.component'\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss']\n})\nexport class SnackbarComponent implements OnInit {\n\n  subdraft: SubdraftComponent|SelectionComponent;\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: SubdraftComponent|SelectionComponent) { \n    this.subdraft = data;\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubdraftComponent.html":{"url":"components/SubdraftComponent.html","title":"component - SubdraftComponent","body":"\n                   \n\n\n\n  Components\n  SubdraftComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/mixer/palette/subdraft/subdraft.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subdraft\n            \n\n            \n                styleUrls\n                subdraft.component.scss\n            \n\n\n\n            \n                templateUrl\n                subdraft.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            children\n                        \n                        \n                              \n                                Type:    ConnectionComponent[]\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            draft\n                        \n                        \n                              \n                                Type:    Draft\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            parent\n                        \n                        \n                              \n                                Type:    ConnectionComponent\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            patterns\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            viewport\n                        \n                        \n                              \n                                Type:    Bounds\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onDeleteCalled\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onSubdraftDrop\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onSubdraftMove\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onSubdraftStart\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(inks: InkService, layer: LayersService)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             rescale\n                        \n                    \n    \n                    \n                        \n    rescale(scale: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public inkActionChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            inkActionChange(name: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public setAsPreview\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            setAsPreview()\n                        \n                    \n    \n                    \n                        \n                                gets the next z-ndx to place this in front\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public hasPoint\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            hasPoint(p: Point)\n                        \n                    \n    \n                    \n                        \n                                does this subdraft exist at this point?\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        p\n                                                    \n                                                    \n                                                        the absolute position of the coordinate (based on the screen)\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        true/false for yes or no\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public resolveNdxToPoint\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            resolveNdxToPoint(ndx: Interlacement)\n                        \n                    \n    \n                    \n                        \n                                Takes row/column position in this subdraft and translates it to an absolution position  \n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        ndx\n                                                    \n                                                    \n                                                        the index\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     Point\n    \n                                \n                                    \n                                        the absolute position as nxy\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public resolvePointToNdx\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            resolvePointToNdx(p: Point)\n                        \n                    \n    \n                    \n                        \n                                Takes an absolute coordinate and translates it to the row/column position Relative to this subdraft\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        p\n                                                    \n                                                    \n                                                        the screen coordinate\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     Interlacement\n    \n                                \n                                    \n                                        the row and column within the draft (i = row, j=col), returns -1 if out of bounds\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public resolvePointToAbsoluteNdx\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            resolvePointToAbsoluteNdx(p: Point)\n                        \n                    \n    \n                    \n                        \n                                Takes an absolute coordinate and translates to a number that would represent its grid position on screenused only for testing if a new move calculation should be called\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        p\n                                                    \n                                                    \n                                                        the screen coordinate\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     Interlacement\n    \n                                \n                                    \n                                        the row and column within the draft (i = row, j=col), returns -1 if out of bounds\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public resolveToValue\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            resolveToValue(p: Point)\n                        \n                    \n    \n                    \n                        \n                                takes an absolute reference and returns the value at that cell boolean or null if its unset\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        p\n                                                    \n                                                    \n                                                        a point of the absolute poistion of coordinate in question\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        true/false/or null representing the eddle value at this point\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setNewDraft\n                        \n                    \n    \n                    \n                        \n    setNewDraft(temp: Draft)\n                        \n                    \n    \n                    \n                        \n                                sets a new draft\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        temp\n                                                    \n                                                    \n                                                        the draft to set this component to\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setComponentPosition\n                        \n                    \n    \n                    \n                        \n    setComponentPosition(point: Point)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setComponentBounds\n                        \n                    \n    \n                    \n                        \n    setComponentBounds(bounds: Bounds)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setComponentSize\n                        \n                    \n    \n                    \n                        \n    setComponentSize(width: number, height: number)\n                        \n                    \n    \n                    \n                        \n                                manually sets the component size. While such an operation should be handled on init but there is a bug where this value is checked before thecomponent runds its init sequence. Manually adding the data makes it possible for check for intersections on selection and drawing end.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        width\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                                \n                                                    \n                                                        height\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             drawDraft\n                        \n                    \n    \n                    \n                        \n    drawDraft()\n                        \n                    \n    \n                    \n                        \n                                draw whetever is stored in the draft object to the screen\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getTopleft\n                        \n                    \n    \n                    \n                        \n    getTopleft()\n                        \n                    \n    \n                    \n                        \n                                gets the position of this elment on the canvas. Dyanic top left might be bigger due to scolling intersectionpreviews. Use static for all calculating of intersections, etc. \n    \n                                \n                                \n                                \n                                    Returns:     Point\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             snapToGrid\n                        \n                    \n    \n                    \n                        \n    snapToGrid(p: Point)\n                        \n                    \n    \n                    \n                        \n                                takes an absolute point and returns the \"cell\" boundary that is closest. \n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        p\n                                                    \n                                                    \n                                                        the absolute point\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     Point\n    \n                                \n                                    \n                                        the snapped point \n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private isSameNdx\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            isSameNdx(p1: Interlacement, p2: Interlacement)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     boolean\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private getAdjusted\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            getAdjusted(p: Point)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isSameBoundsAs\n                        \n                    \n    \n                    \n                        \n    isSameBoundsAs(bounds: Bounds)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     boolean\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             dragEnd\n                        \n                    \n    \n                    \n                        \n    dragEnd($event: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             dragStart\n                        \n                    \n    \n                    \n                        \n    dragStart($event: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             dragMove\n                        \n                    \n    \n                    \n                        \n    dragMove($event: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             disableDrag\n                        \n                    \n    \n                    \n                        \n    disableDrag()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             enableDrag\n                        \n                    \n    \n                    \n                        \n    enableDrag()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             designActionChange\n                        \n                    \n    \n                    \n                        \n    designActionChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             fill\n                        \n                    \n    \n                    \n                        \n    fill(id: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             clearEvent\n                        \n                    \n    \n                    \n                        \n    clearEvent(b: boolean)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             pasteEvent\n                        \n                    \n    \n                    \n                        \n    pasteEvent(type: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onClear\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onClear(b: boolean)\n                        \n                    \n    \n                    \n                        \n                                //   Tell the weave directive to fill selection with pattern.//   @extends WeaveComponent//   @param {Event} e - fill event from design component.//   @returns {void}//Tell weave reference to clear selection.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onPaste\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onPaste(e: any)\n                        \n                    \n    \n                    \n                        \n                                Tells weave reference to paste copied pattern.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    paste event from design component.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             bounds\n                        \n                    \n                    \n                        \n                            bounds:     Bounds\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             canvas\n                        \n                    \n                    \n                        \n                            canvas:     HTMLCanvasElement\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             counter\n                        \n                    \n                    \n                        \n                            counter:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             counter_limit\n                        \n                    \n                    \n                        \n                            counter_limit:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 50\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             cx\n                        \n                    \n                    \n                        \n                            cx:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             design_actions\n                        \n                    \n                    \n                        \n                            design_actions:     DesignActions[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             disable_drag\n                        \n                    \n                    \n                        \n                            disable_drag:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             ink\n                        \n                    \n                    \n                        \n                            ink:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: neq\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             is_preview\n                        \n                    \n                    \n                        \n                            is_preview:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             last_ndx\n                        \n                    \n                    \n                        \n                            last_ndx:     Interlacement\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             moving\n                        \n                    \n                    \n                        \n                            moving:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             scale\n                        \n                    \n                    \n                        \n                            scale:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 10\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             zndx\n                        \n                    \n                    \n                        \n                            zndx:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Output, EventEmitter, HostListener} from '@angular/core';\nimport { Draft } from '../../../core/model/draft';\nimport { Point, Interlacement, Bounds } from '../../../core/model/datatypes';\nimport { ConnectionComponent } from '../connection/connection.component';\nimport { InkService } from '../../provider/ink.service';\nimport { LayersService } from '../../provider/layers.service';\nimport { thresholdFreedmanDiaconis } from 'd3-array';\n\n\n\n\ninterface DesignActions{\n  value: string;\n  viewValue: string;\n  icon: string;\n}\n\n@Component({\n  selector: 'app-subdraft',\n  templateUrl: './subdraft.component.html',\n  styleUrls: ['./subdraft.component.scss']\n})\n\n\n\nexport class SubdraftComponent implements OnInit {\n\n  @Input()  draft: Draft;\n  @Input()  patterns: any;\n  @Input()  viewport: Bounds;\n  @Input()  parent: ConnectionComponent;\n  @Input()  children: Array;\n  @Output() onSubdraftMove = new EventEmitter (); \n  @Output() onSubdraftDrop = new EventEmitter (); \n  @Output() onSubdraftStart = new EventEmitter (); \n  @Output() onDeleteCalled = new EventEmitter (); \n\n //operations you can perform on a selection \n design_actions: DesignActions[] = [\n  {value: 'toggle', viewValue: 'Invert Region', icon: \"fas fa-adjust\"},\n  {value: 'flip_x', viewValue: 'Vertical Flip', icon: \"fas fa-arrows-alt-v\"},\n  {value: 'flip_y', viewValue: 'Horizontal Flip', icon: \"fas fa-arrows-alt-h\"},\n  {value: 'shift_left', viewValue: 'Shift 1 Warp Left', icon: \"fas fa-arrow-left\"},\n  {value: 'shift_up', viewValue: 'Shift 1 Pic Up', icon: \"fas fa-arrow-up\"},\n  {value: 'copy', viewValue: 'Copy Selected Region', icon: \"fa fa-clone\"},\n  {value: 'paste', viewValue: 'Paste Copyed Pattern to Selected Region', icon: \"fa fa-paste\"}\n];\n\n\n  canvas: HTMLCanvasElement;\n  cx: any;\n\n  bounds: Bounds = {\n    topleft: {x: 0, y: 0},\n    width: 0, \n    height: 0\n  }\n\n  scale = 10; \n  ink = 'neq'; //can be or, and, neq, not, splice\n  counter:number  =  0; // keeps track of how frequently to call the move functions\n  counter_limit: number = 50;  //this sets the threshold for move calls, lower number == more calls\n  last_ndx:Interlacement = {i: -1, j:-1, si: -1}; //used to check if we should recalculate a move operation\n\n  moving: boolean  = false;\n  disable_drag: boolean = false;\n  is_preview: boolean = false;\n  zndx = 0;\n\n\n  constructor(private inks: InkService, private layer: LayersService) { \n    this.zndx = layer.createLayer();\n    console.log(this.zndx);\n  }\n\n  ngOnInit(){\n    this.bounds.width = this.draft.warps * this.scale;\n    this.bounds.height = this.draft.wefts * this.scale;\n\n\n  }\n\n\n  ngAfterViewInit() {\n\n\n    this.canvas =  document.getElementById(this.draft.id.toString());\n    this.cx = this.canvas.getContext(\"2d\");\n    this.canvas.width = this.draft.warps * this.scale;\n    this.canvas.height = this.draft.wefts * this.scale;\n    this.bounds.width = this.draft.warps * this.scale;\n    this.bounds.height = this.draft.wefts * this.scale;\n    this.drawDraft();\n\n\n  }\n\n  rescale(scale:number){\n    this.scale = scale;\n    this.bounds.width = this.draft.warps * this.scale;\n    this.bounds.height = this.draft.wefts * this.scale;\n    this.drawDraft();\n\n  }\n\n  // /**\n  //  * sets the size and position of this element (but does not resize the canvas! due to error)\n  //  * @param bounds an object including topleft, width, and height \n  //  */\n  // public setStaticPositionAndSize(bounds: any){\n\n  //   this.static_tl = bounds.topleft;\n  //   this.dynamic_tl = this.static_tl;\n  //   console.log(\"setting size on set static\");\n  //   this.bounds.width = bounds.width;\n  //   this.bounds.height = bounds.height;\n  //   this.dynamic_size = this.size;\n  \n  // }\n\n\n\n\n  public inkActionChange(name: any){\n    this.ink = name;\n    this.inks.select(name);\n    this.drawDraft();\n  }\n\n  /**\n   * gets the next z-ndx to place this in front\n   */\n  public setAsPreview(){\n     this.zndx = this.layer.createLayer();\n  }\n\n \n\n  /**\n   * does this subdraft exist at this point?\n   * @param p the absolute position of the coordinate (based on the screen)\n   * @returns true/false for yes or no\n   */\n  public hasPoint(p:Point) : boolean{\n\n      const endPosition = {\n        x: this.bounds.topleft.x + this.bounds.width,\n        y: this.bounds.topleft.y + this.bounds.height,\n      };\n\n      if(p.x  endPosition.x) return false;\n      if(p.y  endPosition.y) return false;\n\n    \n    return true;\n\n  }\n\n\n/**\n * Takes row/column position in this subdraft and translates it to an absolution position  \n * @param ndx the index\n * @returns the absolute position as nxy\n */\n public resolveNdxToPoint(ndx:Interlacement) : Point{\n  \n  let y = this.bounds.topleft.y + ndx.i * this.scale;\n  let x = this.bounds.topleft.x + ndx.j * this.scale;\n  return {x: x, y:y};\n\n}\n\n/**\n * Takes an absolute coordinate and translates it to the row/column position Relative to this subdraft\n * @param p the screen coordinate\n * @returns the row and column within the draft (i = row, j=col), returns -1 if out of bounds\n */\n  public resolvePointToNdx(p:Point) : Interlacement{\n    \n    let i = Math.floor((p.y -this.bounds.topleft.y) / this.scale);\n    let j = Math.floor((p.x - this.bounds.topleft.x) / this.scale);\n\n    if(i = this.draft.wefts) i = -1;\n    if(j = this.draft.warps) j = -1;\n\n    return {i: i, j:j, si: i};\n\n  }\n\n  /**\n * Takes an absolute coordinate and translates to a number that would represent its grid position on screen\n * used only for testing if a new move calculation should be called\n * @param p the screen coordinate\n * @returns the row and column within the draft (i = row, j=col), returns -1 if out of bounds\n */\n   public resolvePointToAbsoluteNdx(p:Point) : Interlacement{\n    \n    let i = Math.floor((p.y) / this.scale);\n    let j = Math.floor((p.x) / this.scale);\n\n    return {i: i, j:j, si: i};\n\n  }\n\n/**\n * takes an absolute reference and returns the value at that cell boolean or null if its unset\n * @param p a point of the absolute poistion of coordinate in question\n * @returns true/false/or null representing the eddle value at this point\n */\n  public resolveToValue(p:Point) : boolean{\n\n    const coords = this.resolvePointToNdx(p);\n\n    if(coords.i \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SystemsComponent.html":{"url":"components/SystemsComponent.html","title":"component - SystemsComponent","body":"\n                   \n\n\n\n  Components\n  SystemsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/tool/systems/systems.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-systems\n            \n\n            \n                styleUrls\n                systems.component.scss\n            \n\n\n\n            \n                templateUrl\n                systems.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            shuttles\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            warp_shuttles_pattern\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            warp_systems\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            warp_systems_pattern\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            weft_shuttles_pattern\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            weft_systems\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            weft_systems_pattern\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onUpdateWarpShuttles\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onUpdateWarpSystems\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onUpdateWeftShuttles\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onUpdateWeftSystems\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             idFromString\n                        \n                    \n    \n                    \n                        \n    idFromString(s: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             shuttleIdFromName\n                        \n                    \n    \n                    \n                        \n    shuttleIdFromName(s: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     number\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             add\n                        \n                    \n    \n                    \n                        \n    add(event: MatChipInputEvent)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             remove\n                        \n                    \n    \n                    \n                        \n    remove(caller: string, index: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             sendUpdates\n                        \n                    \n    \n                    \n                        \n    sendUpdates(source: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selected\n                        \n                    \n    \n                    \n                        \n    selected(source: string, event: MatAutocompleteSelectedEvent)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             matAutocompleteWash\n                        \n                    \n                    \n                        \n                            matAutocompleteWash:     MatAutocomplete\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             matAutocompleteWasy\n                        \n                    \n                    \n                        \n                            matAutocompleteWasy:     MatAutocomplete\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             matAutocompleteWesh\n                        \n                    \n                    \n                        \n                            matAutocompleteWesh:     MatAutocomplete\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             matAutocompleteWesy\n                        \n                    \n                    \n                        \n                            matAutocompleteWesy:     MatAutocomplete\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removable\n                        \n                    \n                    \n                        \n                            removable:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: true\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             selectable\n                        \n                    \n                    \n                        \n                            selectable:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: true\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             separatorKeysCodes\n                        \n                    \n                    \n                        \n                            separatorKeysCodes:     number[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             visible\n                        \n                    \n                    \n                        \n                            visible:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: true\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             warpShuttleCtrl\n                        \n                    \n                    \n                        \n                            warpShuttleCtrl:     FormControl\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             warpShuttleInput\n                        \n                    \n                    \n                        \n                            warpShuttleInput:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             warpSystemCtrl\n                        \n                    \n                    \n                        \n                            warpSystemCtrl:     FormControl\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             warpSystemInput\n                        \n                    \n                    \n                        \n                            warpSystemInput:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             weftShuttleCtrl\n                        \n                    \n                    \n                        \n                            weftShuttleCtrl:     FormControl\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             weftShuttleInput\n                        \n                    \n                    \n                        \n                            weftShuttleInput:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             weftSystemCtrl\n                        \n                    \n                    \n                        \n                            weftSystemCtrl:     FormControl\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             weftSystemInput\n                        \n                    \n                    \n                        \n                            weftSystemInput:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { ShuttlesModal } from '../../modal/shuttles/shuttles.modal';\nimport { System } from '../../../core/model/system';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {ElementRef, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-systems',\n  templateUrl: './systems.component.html',\n  styleUrls: ['./systems.component.scss']\n})\n\n\n\nexport class SystemsComponent implements OnInit {\n\n  @Input() warp_systems: any;\n  @Input() weft_systems: any;\n  @Input() warp_systems_pattern: any;\n  @Input() weft_systems_pattern: any;\n  @Input() shuttles: any;\n  @Input() warp_shuttles_pattern: any;\n  @Input() weft_shuttles_pattern: any;\n\n  //chip params\n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n\n  warpSystemCtrl = new FormControl();\n  // warp_systems_pattern_strings: string[] = [];\n  // allWarpSystems: string[] = [];\n\n\n  weftSystemCtrl = new FormControl();\n  // weft_systems_pattern_strings: string[] = [];\n  // allWeftSystems: string[] = [];\n\n  warpShuttleCtrl = new FormControl();\n  // warp_shuttles_pattern_strings: any[] = [];\n  // allWarpShuttles: any[] = [];\n\n  weftShuttleCtrl = new FormControl();\n  // weft_shuttles_pattern_strings: any[] = [];\n  // allWeftShuttles: any[] = [];\n\n  // fruits: string[] = ['Lemon'];\n  // allFruits: string[] = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n\n  @ViewChild('warpSystemInput', {static: false}) warpSystemInput: ElementRef;\n  @ViewChild('weftSystemInput', {static: false}) weftSystemInput: ElementRef;\n  @ViewChild('warpShuttleInput', {static: false}) warpShuttleInput: ElementRef;\n  @ViewChild('weftShuttleInput', {static: false}) weftShuttleInput: ElementRef;\n  \n  @ViewChild('auto_wasy', {static: false}) matAutocompleteWasy: MatAutocomplete;\n  @ViewChild('auto_wesy', {static: false}) matAutocompleteWesy: MatAutocomplete;\n  @ViewChild('auto_wash', {static: false}) matAutocompleteWash: MatAutocomplete;\n  @ViewChild('auto_wesh', {static: false}) matAutocompleteWesh: MatAutocomplete;\n\n\n   @Output() onUpdateWarpSystems: any = new EventEmitter();\n   @Output() onUpdateWeftSystems: any = new EventEmitter();\n   @Output() onUpdateWarpShuttles: any = new EventEmitter();\n   @Output() onUpdateWeftShuttles: any = new EventEmitter();\n\n\n  constructor() {\n\n\n\n  }\n\n  ngOnInit() {\n\n    console.log(this.warp_systems);\n\n    // for(let i = 0; i = 0 && warp_sys_id = 0 && weft_sys_id = 0 && this.warp_systems_pattern.length > 1) {\n          this.warp_systems_pattern.splice(index, 1);\n        }\n          \n      \n      break;\n\n      case 'wash':\n\n        if (index >= 0 && this.warp_shuttles_pattern.length > 1) {\n          this.warp_shuttles_pattern.splice(index, 1);\n        }\n      \n\n      break;\n\n      case 'wesy':\n        \n\n        if (index >= 0 && this.weft_systems_pattern.length > 1) {\n          this.weft_systems_pattern.splice(index, 1);\n        }\n     \n      break;\n\n      case 'wesh':\n\n        if (index >= 0 && this.weft_shuttles_pattern.length > 1) {\n          this.weft_shuttles_pattern.splice(index, 1);\n        }\n      break;\n    }\n\n  }\n\n  sendUpdates(source: string){\n    console.log(\"send updates\", source);\n  switch(source){\n      case 'wasy':\n      this.onUpdateWarpSystems.emit(this.warp_systems_pattern);\n      break;\n\n      case 'wash':\n      this.onUpdateWarpShuttles.emit(this.warp_shuttles_pattern);\n      break;\n\n      case 'wesy':\n      this.onUpdateWeftSystems.emit(this.weft_systems_pattern);\n      break;\n\n      case 'wesh':\n        this.onUpdateWeftShuttles.emit(this.weft_shuttles_pattern);\n      break;\n    }\n\n  }\n\n  selected(source: string, event: MatAutocompleteSelectedEvent): void {\n    console.log(\"selected\", source);\n     switch(source){\n      case 'wasy':\n      let warp_sys_id = this.idFromString(event.option.viewValue);\n      console.log(\"selected\", warp_sys_id);\n\n      this.warp_systems_pattern.push(warp_sys_id);\n      this.warpSystemCtrl.setValue(null);\n      break;\n\n      case 'wash':\n\n      let warp_id =  this.shuttleIdFromName(event.option.viewValue);\n\n      // let warp_obj = {\n      //   id: warp_id, \n      //   name: this.shuttles[warp_id].getName(), \n      //   color: this.shuttles[warp_id].getColor()\n      // };\n\n      this.warp_shuttles_pattern.push(warp_id);\n      this.warpShuttleCtrl.setValue(null);\n      \n      break;\n\n      case 'wesy':\n      let weft_sys_id = this.idFromString(event.option.viewValue);\n      this.weft_systems_pattern.push(weft_sys_id);\n      this.weftSystemCtrl.setValue(null);\n      break;\n\n      case 'wesh':\n\n\n      let weft_id =  this.shuttleIdFromName(event.option.viewValue);\n\n      // let weft_obj = {\n      //   id: weft_id, \n      //   name: this.shuttles[weft_id].getName(), \n      //   color: this.shuttles[weft_id].getColor()\n      // };\n\n      this.weft_shuttles_pattern.push(weft_id);\n      this.weftShuttleCtrl.setValue(null);\n      break;\n    }\n\n  \n  }\n\n  \n\n\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n  Components\n  TopbarComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/topbar/topbar.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                styleUrls\n                topbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                topbar.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            density_units\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            draftelement\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            drawer\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            filename\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            loomtypes\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            redoItem\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            timeline\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            undoItem\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onAboutCreate\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onRedo\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onReInit\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onSave\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onUndo\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialog: MatDialog)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Public saveAsBmp\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            saveAsBmp(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public saveAsAda\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            saveAsAda(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public saveAsWif\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            saveAsWif(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public saveAsPrint\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            saveAsPrint(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             undoClicked\n                        \n                    \n    \n                    \n                        \n    undoClicked(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             redoClicked\n                        \n                    \n    \n                    \n                        \n    redoClicked(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             openAboutDialog\n                        \n                    \n    \n                    \n                        \n    openAboutDialog()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             openNewFileDialog\n                        \n                    \n    \n                    \n                        \n    openNewFileDialog()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             adaLink\n                        \n                    \n                    \n                        \n                            adaLink:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             bmpLink\n                        \n                    \n                    \n                        \n                            bmpLink:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             downloadAda\n                        \n                    \n                    \n                        \n                            downloadAda:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             downloadBmp\n                        \n                    \n                    \n                        \n                            downloadBmp:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             downloadPrint\n                        \n                    \n                    \n                        \n                            downloadPrint:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             downloadWif\n                        \n                    \n                    \n                        \n                            downloadWif:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             printLink\n                        \n                    \n                    \n                        \n                            printLink:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             wifLink\n                        \n                    \n                    \n                        \n                            wifLink:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { AboutModal } from '../modal/about/about.modal';\nimport { InitModal } from '../modal/init/init.modal';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.scss']\n})\n\n\n\nexport class TopbarComponent implements OnInit {\n  \n  @Output() onSave: any = new EventEmitter();\n  @Output() onUndo: any = new EventEmitter();\n  @Output() onRedo: any = new EventEmitter();\n  @Output() onAboutCreate: any = new EventEmitter();\n  @Output() onReInit: any = new EventEmitter();\n\n  @Input() drawer;\n  @Input() filename;\n  @Input() timeline;\n  @Input() undoItem;\n  @Input() redoItem;\n  @Input() draftelement;\n  @Input() loomtypes;\n  @Input() density_units;\n  \n  @ViewChild('bmpLink', {static: true}) bmpLink: any;\n  @ViewChild('adaLink', {static: true}) adaLink: any;\n  @ViewChild('wifLink', {static: true}) wifLink: any;\n  @ViewChild('printLink', {static: true}) printLink: any;\n\n  downloadBmp: ElementRef;\n  downloadAda: ElementRef;\n  downloadWif: ElementRef;\n  downloadPrint: ElementRef;\n\n\n  constructor(private dialog: MatDialog) { }\n\n\n  ngOnInit() {\n    this.downloadBmp = this.bmpLink._elementRef;\n    this.downloadAda = this.adaLink._elementRef;\n    this.downloadWif = this.wifLink._elementRef;\n    this.downloadPrint = this.printLink._elementRef;\n  }\n\n  public saveAsBmp(e: any) {\n    var obj: any = {\n      name: this.filename,\n      downloadLink: this.downloadBmp,\n      type: \"bmp\"\n    }\n    console.log(obj);\n  \tthis.onSave.emit(obj);\n  }\n\n  public saveAsAda(e: any) {\n    var obj: any = {\n      name: this.filename,\n      downloadLink: this.downloadAda,\n      type: \"ada\"\n    }\n    console.log(obj);\n    this.onSave.emit(obj);\n  }\n\n  public saveAsWif(e: any) {\n    var obj: any = {\n      name: this.filename,\n      downloadLink: this.downloadWif,\n      type: \"wif\"\n    }\n    console.log(obj);\n    this.onSave.emit(obj);\n  }\n\n  public saveAsPrint(e: any) {\n    var obj: any = {\n      name: this.filename,\n      downloadLink: this.downloadPrint,\n      type: \"jpg\"\n    }\n    this.onSave.emit(obj);\n  }\n\n  undoClicked(e:any) {\n    this.onUndo.emit();\n  }\n\n  redoClicked(e:any) {\n    this.onRedo.emit();\n  }\n\n  openAboutDialog() {\n    const dialogRef = this.dialog.open(AboutModal);\n\n  }\n\n  //need to handle this and load the file somehow\n  openNewFileDialog() {\n\n\n    const dialogRef = this.dialog.open(InitModal, {\n      data: {loomtypes: this.loomtypes, density_units: this.density_units}\n    });\n\n     dialogRef.afterClosed().subscribe(result => {\n      \n      if(result !== undefined) this.onReInit.emit(result);\n      \n\n   });\n\n  }\n\n\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadFormComponent.html":{"url":"components/UploadFormComponent.html","title":"component - UploadFormComponent","body":"\n                   \n\n\n\n  Components\n  UploadFormComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/core/uploads/upload-form/upload-form.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                upload-form\n            \n\n            \n                styleUrls\n                upload-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                upload-form.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            type\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            warps\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onData\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(upSvc: UploadService, httpClient: HttpClient)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             detectFiles\n                        \n                    \n    \n                    \n                        \n    detectFiles(event: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             uploadSingle\n                        \n                    \n    \n                    \n                        \n    uploadSingle()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             canvas\n                        \n                    \n                    \n                        \n                            canvas:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentUpload\n                        \n                    \n                    \n                        \n                            currentUpload:     Upload\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             imageToShow\n                        \n                    \n                    \n                        \n                            imageToShow:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selectedFiles\n                        \n                    \n                    \n                        \n                            selectedFiles:     FileList\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, ViewChild, ElementRef, Output, Input, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UploadService } from '../upload.service';\nimport { Upload } from '../upload';\n\nimport { map } from 'rxjs/operators';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'upload-form',\n  templateUrl: './upload-form.component.html',\n  styleUrls: ['./upload-form.component.scss']\n})\nexport class UploadFormComponent implements OnInit {\n  @Input() warps: number;\n  @Input() type: string;\n  selectedFiles: FileList;\n  currentUpload: Upload;\n  imageToShow: any;\n  @ViewChild('uploadImage', {static: false}) canvas: ElementRef;\n  @Output() onData: any = new EventEmitter();\n\n  constructor(private upSvc: UploadService, private httpClient: HttpClient) { }\n\n  detectFiles(event) {\n      this.selectedFiles = event.target.files;\n  }\n\n  \n\n  uploadSingle() {\n\n    let file = this.selectedFiles.item(0)\n    let fileType = file.name.split(\".\").pop();\n \n    this.currentUpload = new Upload(file);\n\n    var p, id;\n    p = this.upSvc.pushUpload(this.currentUpload);\n\n    p.pipe(\n        finalize(() => {\n\n          if (fileType != \"ada\" && fileType!= \"wif\") {\n            this.upSvc.getDownloadURL(this.currentUpload.name).subscribe((url) => {\n              var image = new Image();\n              image.src = url;\n              image.crossOrigin = \"Anonymous\";\n\n              var canvas = this.canvas.nativeElement;\n              var ctx = canvas.getContext('2d');\n\n              image.onload = (() => {\n                if (this.type === \"shuttle\") {\n                  canvas.width = this.warps;\n                  canvas.height = image.naturalHeight * (this.warps / image.naturalWidth);\n                }\n                else if (this.type === \"init\") {\n                  canvas.width = image.naturalWidth;\n                  canvas.height = image.naturalHeight;\n                }\n                \n                \n                ctx.mozImageSmoothingEnabled = false;\n                ctx.webkitImageSmoothingEnabled = false;\n                ctx.msImageSmoothingEnabled = false;\n                ctx.imageSmoothingEnabled = false;\n\n                ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n                var data = ctx.getImageData(0,0, canvas.width, canvas.height);\n                var obj = {\n                  name: file.name.split(\".\")[0],\n                  data: data,\n                  type: 'image',\n                }\n                this.onData.emit(obj);\n              });\n            });\n          }\n          else if (fileType === \"ada\") {\n\n            this.upSvc.getDownloadURL(this.currentUpload.name).subscribe((url) => {\n              this.httpClient.get(url).subscribe(data => {\n                var obj = {\n                  name: file.name.split(\".\")[0],\n                  data: data,\n                  type: 'ada',\n                }\n                console.log(obj);\n                this.onData.emit(obj);\n              });\n            });\n          }\n          else if (fileType === \"wif\") {\n            this.upSvc.getDownloadURL(this.currentUpload.name).subscribe((url) => {\n              this.httpClient.get(url, {responseType: 'text'}).subscribe(data => {\n               var obj = {\n                  name: file.name.split(\".\")[0],\n                  data: data,\n                  type: 'wif',\n                }\n                this.onData.emit(obj);\n              });\n            });\n          }\n        })\n     )\n    .subscribe((e) => {\n      var progress = this.currentUpload.progress;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeaverComponent.html":{"url":"components/WeaverComponent.html","title":"component - WeaverComponent","body":"\n                   \n\n\n\n  Components\n  WeaverComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/weaver/weaver.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weaver\n            \n\n            \n                styleUrls\n                weaver.component.scss\n            \n\n\n\n            \n                templateUrl\n                weaver.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(ps: PatternService, dialog: MatDialog, scroll: ScrollDispatcher)\n                        \n                    \n    \n                    \n                        \n                                \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Private onWindowScroll\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onWindowScroll(data: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             reInit\n                        \n                    \n    \n                    \n                        \n    reInit(result: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             undo\n                        \n                    \n    \n                    \n                        \n    undo()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             redo\n                        \n                    \n    \n                    \n                        \n    redo()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private keyEventZoomIn\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            keyEventZoomIn(e: any)\n                        \n                    \n    \n                    \n                        \n                                Call zoom in on Shift+p.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        shift\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        +p\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private keyEventZoomOut\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            keyEventZoomOut(e: any)\n                        \n                    \n    \n                    \n                        \n                                Call zoom out on Shift+o.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        shift\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        +o\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private keyEventErase\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            keyEventErase(e: any)\n                        \n                    \n    \n                    \n                        \n                                Sets selected area to clear\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        delete\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        key pressed\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private keyEventPoint\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            keyEventPoint(e: any)\n                        \n                    \n    \n                    \n                        \n                                Sets brush to point on key control + d.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    Press Control + d\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private keyEventSelect\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            keyEventSelect(e: any)\n                        \n                    \n    \n                    \n                        \n                                Sets brush to select on key control + s\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    Press Control + s\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private keyEventInvert\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            keyEventInvert(e: any)\n                        \n                    \n    \n                    \n                        \n                                Sets key control to invert on control + x\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    Press Control + x\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private keyEventPaste\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            keyEventPaste(e: any)\n                        \n                    \n    \n                    \n                        \n                                Sets key to copySets key to copy \n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    Press Control + x\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public viewChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            viewChange(value: any)\n                        \n                    \n    \n                    \n                        \n                                Updates the canvas based on the weave view.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    view change event from design component.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onDesignModeChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onDesignModeChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                Change the name of the brush to reflect selected brush.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    brush change event from design component.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onFill\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onFill(e: any)\n                        \n                    \n    \n                    \n                        \n                                Tell the weave directive to fill selection with pattern.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    fill event from design component.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onClear\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onClear(b: boolean)\n                        \n                    \n    \n                    \n                        \n                                Tell weave reference to clear selection.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        Delte\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    clear event from design component.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onScroll\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onScroll()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onMask\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onMask(e: any)\n                        \n                    \n    \n                    \n                        \n                                Weave reference masks pattern over selected area.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    mask event from design component.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onPaste\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onPaste(e: any)\n                        \n                    \n    \n                    \n                        \n                                Tells weave reference to paste copied pattern.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    paste event from design component.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onCopy\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onCopy()\n                        \n                    \n    \n                    \n                        \n                                Creates the copied pattern within the weave reference\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        e\n                                                            :     Event\n    \n                                                    \n                                                    \n                                                        \n    copy event from design component.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public onSave\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            onSave(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public openConnectionDialog\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            openConnectionDialog()\n                        \n                    \n    \n                    \n                        \n                                Open the connection modal.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public openLabelDialog\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            openLabelDialog()\n                        \n                    \n    \n                    \n                        \n                                Open the label modal.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public print\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            print(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public shuttleColorChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            shuttleColorChange()\n                        \n                    \n    \n                    \n                        \n                                Inserts an empty row on system, system\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public insertRow\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            insertRow(i: number, shuttle: number, system: number)\n                        \n                    \n    \n                    \n                        \n                                inserts an empty row just below the clicked row\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        i\n                                                    \n                                                    \n                                                        the absolute (not screen) index of the row we'll insert\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        shuttle\n                                                    \n                                                    \n                                                        the shuttle id this will be assigned to\n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        system\n                                                    \n                                                    \n                                                        the system id to which this row will be assigned\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public cloneRow\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            cloneRow(i: any, c: any, shuttle: any, system: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public deleteRow\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            deleteRow(i: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public insertCol\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            insertCol(i: any, shuttle: any, system: any)\n                        \n                    \n    \n                    \n                        \n                                In\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public cloneCol\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            cloneCol(i: any, shuttle: any, system: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public deleteCol\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            deleteCol(i: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public updatePatterns\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            updatePatterns(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public updateWarpSystems\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            updateWarpSystems(pattern: number[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public updateWeftSystems\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            updateWeftSystems(pattern: number[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public updateWarpShuttles\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            updateWarpShuttles(pattern: number[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public updateWeftShuttles\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            updateWeftShuttles(pattern: number[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public createShuttle\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            createShuttle(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public createWarpSystem\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            createWarpSystem(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public createWeftSystem\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            createWeftSystem(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public hideWarpSystem\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            hideWarpSystem(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public showWarpSystem\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            showWarpSystem(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public hideWeftSystem\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            hideWeftSystem(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public showWeftSystem\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            showWeftSystem(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public notesChanged\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            notesChanged(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public epiChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            epiChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public unitChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            unitChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public thicknessChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            thicknessChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public loomChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            loomChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public frameChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            frameChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public treadleChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            treadleChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public warpNumChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            warpNumChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public weftNumChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            weftNumChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public createPattern\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            createPattern(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public removePattern\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            removePattern(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public updateSelection\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            updateSelection(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public toggleViewFrames\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            toggleViewFrames()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public renderChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            renderChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public toggleCollapsed\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            toggleCollapsed()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public clearLocalStorage\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            clearLocalStorage()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public downloadLocalStorage\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            downloadLocalStorage()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public getDraftFromLocalStore\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            getDraftFromLocalStore()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     string\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public loadRawLog\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            loadRawLog()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             bitmap\n                        \n                    \n                    \n                        \n                            bitmap:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             collapsed\n                        \n                    \n                    \n                        \n                            collapsed:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             copy\n                        \n                    \n                    \n                        \n                            copy:     boolean[][]\n    \n                        \n                    \n                    \n                        \n                            The current selection, as boolean array \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             default_patterns\n                        \n                    \n                    \n                        \n                            default_patterns:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             density_units\n                        \n                    \n                    \n                        \n                            density_units:     DensityUnits[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             design_actions\n                        \n                    \n                    \n                        \n                            design_actions:     DesignActions[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             design_mode\n                        \n                    \n                    \n                        \n                            design_mode:     { name: string; id: number; }\n    \n                        \n                    \n                    \n                        \n                            The name of the current selected brush.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             design_modes\n                        \n                    \n                    \n                        \n                            design_modes:     DesignModes[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             dims\n                        \n                    \n                    \n                        \n                            dims:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             draft\n                        \n                    \n                    \n                        \n                            draft:     Draft\n    \n                        \n                    \n                    \n                        \n                            The weave Draft object.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             draftelement\n                        \n                    \n                    \n                        \n                            draftelement:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             loomtypes\n                        \n                    \n                    \n                        \n                            loomtypes:     LoomTypes[]\n    \n                        \n                    \n                    \n                        \n                            The types of looms this version will support.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             material_types\n                        \n                    \n                    \n                        \n                            material_types:     MaterialTypes[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             render\n                        \n                    \n                    \n                        \n                            render:     Render\n    \n                        \n                    \n                    \n                        \n                            The weave Render object.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             scroll\n                        \n                    \n                    \n                        \n                            scroll:     ScrollDispatcher\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             scrollingSubscription\n                        \n                    \n                    \n                        \n                            scrollingSubscription:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selected\n                        \n                    \n                    \n                        \n                            selected:     any\n    \n                        \n                    \n                    \n                        \n                            The list of all patterns saved. Provided by pattern service.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             timeline\n                        \n                    \n                    \n                        \n                            timeline:     Timeline\n    \n                        \n                    \n                    \n                        \n                            The weave Timeline object.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private unsubscribe$\n                        \n                    \n                    \n                        \n                            unsubscribe$:     Subject\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             view_modes\n                        \n                    \n                    \n                        \n                            view_modes:     ViewModes[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             weaveRef\n                        \n                    \n                    \n                        \n                            weaveRef:     any\n    \n                        \n                    \n                    \n                        \n                            The reference to the weave directive.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, ElementRef, OnInit, OnDestroy, HostListener, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport {enableProdMode} from '@angular/core';\n\nimport { PatternService } from '../core/provider/pattern.service';\nimport { WeaveDirective } from './directives/weave.directive';\nimport { ScrollDispatcher } from '@angular/cdk/overlay';\nimport { Timeline } from '../core/model/timeline';\nimport { LoomTypes, MaterialTypes, ViewModes, DensityUnits } from '../core/model/datatypes';\nimport { Draft } from '../core/model/draft';\nimport { Render } from '../weaver/model/render';\nimport { Pattern } from '../core/model/pattern';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { ConnectionModal } from './modal/connection/connection.modal';\nimport { InitModal } from '../core/modal/init/init.modal';\nimport { LabelModal } from './modal/label/label.modal';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {cloneDeep, now} from 'lodash';\nimport { Cell } from '../core/model/cell';\n\n\n//disables some angular checking mechanisms\nenableProdMode();\n\n\n/**\n * Controller of the Weaver component.\n * @class\n */\n\n\ninterface DesignActions{\n  value: string;\n  viewValue: string;\n  icon: string;\n}\n\ninterface DesignModes{\n  value: string;\n  viewValue: string;\n  icon: string;\n}\n\n\n@Component({\n  selector: 'app-weaver',\n  templateUrl: './weaver.component.html',\n  styleUrls: ['./weaver.component.scss']\n})\nexport class WeaverComponent implements OnInit {\n \n  /**\n   * The reference to the weave directive.\n   * @property {WeaveDirective}\n   */\n  @ViewChild(WeaveDirective, {static: false}) weaveRef;\n  @ViewChild('bitmapImage', {static: false}) bitmap;\n\n\n\n  design_modes: DesignModes[]=[\n    {value: 'toggle', viewValue: 'Toggle Heddle', icon: \"fas fa-adjust\"},\n    {value: 'up', viewValue: 'Set Heddle Up', icon: \"fas fa-square\"},\n    {value: 'down', viewValue: 'Set Heddle Down', icon: \"far fa-square\"}\n  ];\n\n  \n  //operations you can perform on a selection \n  design_actions: DesignActions[] = [\n    {value: 'toggle', viewValue: 'Invert Region', icon: \"fas fa-adjust\"},\n    {value: 'up', viewValue: 'Set Region Heddles Up', icon: \"fas fa-square\"},\n    {value: 'down', viewValue: 'Set Region Heddles Down', icon: \"far fa-square\"},\n    {value: 'flip_x', viewValue: 'Vertical Flip', icon: \"fas fa-arrows-alt-v\"},\n    {value: 'flip_y', viewValue: 'Horizontal Flip', icon: \"fas fa-arrows-alt-h\"},\n    {value: 'shift_left', viewValue: 'Shift 1 Warp Left', icon: \"fas fa-arrow-left\"},\n    {value: 'shift_up', viewValue: 'Shift 1 Pic Up', icon: \"fas fa-arrow-up\"},\n    {value: 'copy', viewValue: 'Copy Selected Region', icon: \"fa fa-clone\"},\n    {value: 'paste', viewValue: 'Paste Copyed Pattern to Selected Region', icon: \"fa fa-paste\"}\n  ];\n\n  /**\n   * The name of the current selected brush.\n   * @property {string}\n   */\n  design_mode = {\n    name:'toggle',\n    id: -1\n  }\n\n  /**\n   * The weave Draft object.\n   * @property {Draft}\n   */\n  draft: Draft;\n\n /**\n   * The weave Render object.\n   * @property {Render}\n   */\n  render: Render = new Render(false);\n\n /**\n   * The weave Timeline object.\n   * @property {Timeline}\n   */\n  timeline: Timeline = new Timeline();\n\n\n  /**\n  The current selection, as boolean array \n  **/\n  copy: Array>;\n\n\n /**\n   * The types of looms this version will support.\n   * @property {LoomType}\n   */\n  loomtypes: LoomTypes[] = [\n    {value: 'frame', viewValue: 'Shaft'},\n    {value: 'jacquard', viewValue: 'Jacquard'}\n  ];\n\n\n  material_types: MaterialTypes[] = [\n    {value: 0, viewValue: 'Non-Conductive'},\n    {value: 1, viewValue: 'Conductive'},\n    {value: 2, viewValue: 'Resistive'}\n  ];\n\n  density_units: DensityUnits[] = [\n    {value: 'in', viewValue: 'Ends per Inch'},\n    {value: 'cm', viewValue: 'Ends per 10cm '}\n  ];\n\n  view_modes: ViewModes[] = [\n      {value: 'visual', viewValue: 'Visual'},\n      {value: 'pattern', viewValue: 'Draft'},\n      {value: 'yarn', viewValue: 'Circuit'}\n     // {value: 'mask', viewValue: 'Masks'}\n\n    ];\n\n\n\n\n\n  /**\n   * The list of all patterns saved. Provided by pattern service.\n   * @property {Array}\n   */\n  //patterns;\n\n\n  selected;\n\n  private unsubscribe$ = new Subject();\n\n  default_patterns:any;\n  collapsed:boolean = false;\n  dims:any;\n\n  draftelement:any;\n  scrollingSubscription: any;\n\n  /// ANGULAR FUNCTIONS\n  /**\n   * @constructor\n   * ps - pattern service (variable name is initials). Subscribes to the patterns and used\n   * to get and update stitches.\n   * dialog - Anglar Material dialog module. Used to control the popup modals.\n   */\n  constructor(private ps: PatternService, private dialog: MatDialog, public scroll: ScrollDispatcher) {\n\n\n    this.scrollingSubscription = this.scroll\n          .scrolled()\n          .subscribe((data: any) => {\n            this.onWindowScroll(data);\n    });\n\n\n    //initialize with a draft so that we can load some things faster. \n    //let d =  this.getDraftFromLocalStore();\n    \n    this.copy = [[false,true],[false,true]];\n\n\n\n    //if(d !== undefined) this.draft = new Draft(JSON.parse(d));\n    this.draft = new Draft({wefts: 80, warps: 100});\n    this.draft.name = this.draft.name;\n    this.timeline.addHistoryState(this.draft);\n    \n    this.default_patterns = [];\n\n\n    this.ps.getPatterns().subscribe((res) => {\n       for(var i in res.body){\n          this.default_patterns.push(new Pattern(res.body[i]));\n       }\n    }); \n\n    this.render.view_frames = (this.draft.loom.type === 'frame') ? true : false;     \n    if (this.draft.patterns === undefined) this.draft.patterns = this.default_patterns;\n\n  }\n\n  private onWindowScroll(data: any) {\n    this.weaveRef.rescale();\n  }\n\n\n\n  reInit(result){\n    console.log(\"reinit\");\n\n    this.draft.reload(result);\n    this.timeline.addHistoryState(this.draft);\n\n    this.render.view_frames = (this.draft.loom.type === 'frame') ? true : false;     \n\n    if (this.draft.patterns === undefined) this.draft.patterns = this.default_patterns;\n    \n\n    this.weaveRef.onNewDraftLoaded();\n\n\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale();\n\n  }\n  \n  ngOnInit(){\n    \n  }\n\n  ngAfterViewInit() {\n\n  \n    const dialogRef = this.dialog.open(InitModal, {\n      data: {loomtypes: this.loomtypes, density_units: this.density_units}\n    });\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result !== undefined) this.reInit(result);\n   });\n\n\n    this.weaveRef.onNewDraftLoaded();\n\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale();\n  \n    \n  }\n\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  undo() {\n    let d: Draft = this.timeline.restorePreviousHistoryState();\n    console.log(\"Prevous State is \", d);\n    if(d === undefined || d === null) return;\n\n    this.draft.reload(d);    \n    this.weaveRef.onNewDraftLoaded();\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale(); \n  }\n\n  redo() {\n    let d: Draft = this.timeline.restoreNextHistoryState();\n    console.log(\"Next State is \", d);\n\n    if(d === undefined || d === null) return;\n\n    console.log(d);\n\n    this.draft.reload(d);    \n    this.weaveRef.onNewDraftLoaded();\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale(); \n  }\n\n  /// EVENTS\n\n\n\n\n/**\n   * Call zoom in on Shift+p.\n   * @extends WeaveComponent\n   * @param {Event} shift+p\n   * @returns {void}\n   */\n  @HostListener('window:keydown.Shift.p', ['$event'])\n  private keyEventZoomIn(e) {\n    console.log(\"zoom in\");\n    this.render.zoomIn();\n    this.weaveRef.rescale();\n\n\n  }\n/**\n   * Call zoom out on Shift+o.\n   * @extends WeaveComponent\n   * @param {Event} shift+o\n   * @returns {void}\n   */\n  @HostListener('window:keydown.Shift.o', ['$event'])\n  private keyEventZoomOut(e) {\n    console.log(\"zoom out\");\n    this.render.zoomOut();\n    this.weaveRef.rescale();\n  }\n\n\n  /**\n   * Sets selected area to clear\n   * @extends WeaveComponent\n   * @param {Event} delete key pressed\n   * @returns {void}\n   */\n\n  @HostListener('window:keydown.e', ['$event'])\n  private keyEventErase(e) {\n    this.design_mode = {\n      name: 'down',\n      id: -1\n    };\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets brush to point on key control + d.\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + d\n   * @returns {void}\n   */\n  @HostListener('window:keydown.d', ['$event'])\n  private keyEventPoint(e) {\n    this.design_mode = {\n      name: 'up',\n      id: -1};\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets brush to select on key control + s\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + s\n   * @returns {void}\n   */\n  @HostListener('window:keydown.s', ['$event'])\n  private keyEventSelect(e) {\n    this.design_mode = {\n      name: 'select',\n      id: -1};\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets key control to invert on control + x\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  @HostListener('window:keydown.x', ['$event'])\n  private keyEventInvert(e) {\n    this.design_mode = {\n      name: 'toggle',\n      id: -1\n    };\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets key to copy \n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  // @HostListener('window:keydown.c', ['$event'])\n  // private keyEventCopy(e) {\n  //   this.onCopy();  \n  // }\n\n    /**\n   * Sets key to copy \n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  @HostListener('window:keydown.p', ['$event'])\n  private keyEventPaste(e) {\n    this.onPaste({});\n  }\n\n  /**\n   * Updates the canvas based on the weave view.\n   * @extends WeaveComponent\n   * @param {Event} e - view change event from design component.\n   * @returns {void}\n   */\n  public viewChange(value: any) {\n    \n    this.render.setCurrentView(value);\n\n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n\n    this.weaveRef.redraw({\n      drawdown: true\n    });\n  }\n\n  /**\n   * Change the name of the brush to reflect selected brush.\n   * @extends WeaveComponent\n   * @param {Event} e - brush change event from design component.\n   * @returns {void}\n   */\n  public onDesignModeChange(e:any) {\n\n    this.design_mode = {\n      name: e.name,\n      id: e.id\n    }\n\n    console.log(\"design mode\", this.design_mode.name, this.design_mode.id);\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Tell the weave directive to fill selection with pattern.\n   * @extends WeaveComponent\n   * @param {Event} e - fill event from design component.\n   * @returns {void}\n   */\n  public onFill(e) {\n    \n    let p:Pattern = this.draft.patterns[e.id];\n    \n    this.draft.fillArea(this.weaveRef.selection, p, 'original');\n\n    if(this.render.showingFrames()) this.draft.recomputeLoom();\n\n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n    \n    this.weaveRef.copyArea();\n\n    this.weaveRef.redraw({drawdown:true, loom:true});\n\n    this.timeline.addHistoryState(this.draft);\n    \n  }\n\n  /**\n   * Tell weave reference to clear selection.\n   * @extends WeaveComponent\n   * @param {Event} Delte - clear event from design component.\n   * @returns {void}\n   */\n  public onClear(b:boolean) {\n    \n    const c: Cell = new Cell(b);\n    const p: Pattern = new Pattern({width: 1, height: 1, pattern: [[c]]});\n\n    this.draft.fillArea(this.weaveRef.selection, p, 'original')\n\n    if(this.render.showingFrames()) this.draft.recomputeLoom();\n\n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n\n    this.weaveRef.copyArea();\n\n    this.weaveRef.redraw({drawdown:true, loom:true});\n\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public onScroll(){\n    console.log(\"I has scroll\");\n  }\n\n  /**\n   * Weave reference masks pattern over selected area.\n   * @extends WeaveComponent\n   * @param {Event} e - mask event from design component.\n   * @returns {void}\n   */\n  public onMask(e) {\n    // console.log(e);\n    // var p = this.draft.patterns[e.id].pattern;\n    // this.weaveRef.maskArea(p);\n    // this.redraw();\n  }\n\n  /**\n   * Tells weave reference to paste copied pattern.\n   * @extends WeaveComponent\n   * @param {Event} e - paste event from design component.\n   * @returns {void}\n   */\n  public onPaste(e) {\n\n    var p = this.weaveRef.copy;\n    console.log(\"on paste\", e, p);\n\n\n    var type;\n\n    if(e.type === undefined) type = \"original\";\n    else type =  e.type;\n\n    this.draft.fillArea(this.weaveRef.selection, p, type);\n\n    switch(this.weaveRef.selection.target.id){    \n      case 'drawdown':\n        //if you do this when updates come from loom, it will erase those updates\n        if(this.render.showingFrames()) this.draft.recomputeLoom();\n       break;\n      \n    }\n\n    \n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n\n    this.timeline.addHistoryState(this.draft);\n\n    this.weaveRef.copyArea();\n\n    this.weaveRef.redraw({drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n \n\n  }\n\n  /**\n   * Creates the copied pattern within the weave reference\n   * @extends WeaveComponent\n   * @param {Event} e - copy event from design component.\n   * @returns {void}\n   */\n  public onCopy() {\n\n    console.log(\"on copy\", this.copy);\n\n    this.design_mode = {\n      name: 'copy',\n      id: -1\n    };\n  }\n\n  /**\n   *\n   *\n   */\n  public onSave(e: any) {\n\n    e.bitmap = this.bitmap;\n    console.log(e);\n\n    if (e.type === \"bmp\") this.weaveRef.saveBMP(e.name, e);\n    else if (e.type === \"ada\") this.weaveRef.saveADA(e.name, e);\n    else if (e.type === \"wif\") this.weaveRef.saveWIF(e.name, e);\n    else if (e.type === \"jpg\") this.weaveRef.savePrintableDraft(e.name, e);\n    \n  }\n\n  /**\n   * Open the connection modal.\n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public openConnectionDialog() {\n\n    const dialogRef = this.dialog.open(ConnectionModal, {data: {shuttles: this.draft.shuttles}});\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.draft.connections.push(result);\n      }\n    });\n  }\n\n\n  /**\n   * Open the label modal.\n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public openLabelDialog() {\n\n    const dialogRef = this.dialog.open(LabelModal);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log(result);\n      }\n    });\n  }\n\n\n\n  /// PUBLIC FUNCTIONS\n  /**\n   * \n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public print(e) {\n    console.log(e);\n  }\n\n  /**\n   * Inserts an empty row on system, system\n   */\n  public shuttleColorChange() {\n    this.weaveRef.redraw({drawdown: true, warp_materials:true,  weft_materials:true});\n    this.timeline.addHistoryState(this.draft);\n  }\n\n  /**\n   * inserts an empty row just below the clicked row\n   * @param i the absolute (not screen) index of the row we'll insert\n   * @param shuttle the shuttle id this will be assigned to\n   * @param system the system id to which this row will be assigned\n   */\n  public insertRow(i:number, shuttle:number, system:number) {\n\n    console.log(i);\n    this.draft.insertRow(i, shuttle, system);\n    //this.draft.updateConnections(i, 1);\n    \n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n    \n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public cloneRow(i, c, shuttle, system) {\n    this.draft.cloneRow(i, c, shuttle, system);\n   // this.draft.updateConnections(i, 1);\n\n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public deleteRow(i) {\n    this.draft.deleteRow(i);\n   // this.draft.updateConnections(i, -1);\n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n    this.timeline.addHistoryState(this.draft);\n\n    //this.onAddRow.emit();\n  }\n\n    /**\n   * In\n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public insertCol(i, shuttle,system) {\n    this.draft.insertCol(i, shuttle,system);\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n    this.draft.computeYarnPaths();\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public cloneCol(i, shuttle,system) {\n    this.draft.cloneCol(i, shuttle,system);\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n    this.draft.computeYarnPaths();\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n\n  public deleteCol(i) {\n    this.draft.deleteCol(i);\n    //this.draft.updateConnections(i, -1);\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n    this.draft.computeYarnPaths();\n    this.timeline.addHistoryState(this.draft);\n\n\n  }\n\n  public updatePatterns(e: any) {\n    // this.patterns = e.patterns;\n    // this.draft.patterns = this.patterns;\n    this.draft.patterns = e.patterns;\n\n  }\n\n  public updateWarpSystems(pattern: Array) {\n    console.log(\"update warp sys\", pattern);\n    this.draft.updateWarpSystemsFromPattern(pattern);\n    this.weaveRef.redraw({drawdown: true, warp_systems: true});\n\n  }\n\n  public updateWeftSystems(pattern: Array) {\n    console.log(\"update weft sys\", pattern);\n\n    this.draft.updateWeftSystemsFromPattern(pattern);\n    this.weaveRef.redraw({drawdown: true, weft_systems: true});\n\n  }\n\n  public updateWarpShuttles(pattern: Array) {\n    console.log(\"update warp shut\", pattern);\n\n    this.draft.updateWarpShuttlesFromPattern(pattern);\n    this.weaveRef.redraw({drawdown: true, warp_materials: true});\n\n  }\n\n  public updateWeftShuttles(pattern: Array) {\n    console.log(\"update weft shutf\", pattern);\n\n    this.draft.updateWeftShuttlesFromPattern(pattern);\n    this.draft.computeYarnPaths();\n    this.weaveRef.redraw({drawdown: true, weft_materials: true});\n\n  }\n\n  // public createMaterial(e: any) {\n  //   this.draft.addMaterial(e.material); \n  //   this.weaveRef.redraw();\n  // }\n\n  public createShuttle(e: any) {\n    this.draft.addShuttle(e.shuttle); \n  }\n\n  public createWarpSystem(e: any) {\n    this.draft.addWarpSystem(e.system);\n  }\n\n  public createWeftSystem(e: any) {\n    this.draft.addWarpSystem(e.system);\n  }\n\n  public hideWarpSystem(e:any) {\n    \n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n  }\n\n  public showWarpSystem(e:any) {\n\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n  }  \n\n  public hideWeftSystem(e:any) {\n   \n    this.draft.updateVisible();\n    \n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n  }\n\n  public showWeftSystem(e:any) {\n\n    this.draft.updateVisible();\n\n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n  }\n\n\n  public notesChanged(e:any) {\n\n    console.log(e);\n   this.draft.notes = e;\n  }\n\n  // public hideShuttle(e:any) {\n  //   this.draft.updateVisible();\n  //   this.weaveRef.redraw();\n  //   this.weaveRef.redrawLoom();\n  // }\n\n  // public showShuttle(e:any) {\n  //   this.draft.updateVisible();\n  //   this.weaveRef.redraw();\n  //   this.weaveRef.redrawLoom();\n  // }\n\n  public epiChange(e:any){\n    this.draft.epi = e.epi;\n    this.draft.recomputeWidth();\n  }\n\n  public unitChange(e:any){\n    this.draft.units = e.units;\n    this.draft.recomputeWidth();    \n\n  }\n\n  public thicknessChange(e:any){\n\n    if(this.render.isYarnBasedView()) this.weaveRef.redraw({drawdown: true});\n  }\n\n\n  public loomChange(e:any){\n    \n    this.draft.loom.type = e.loomtype;\n\n    if(this.draft.loom.type == 'jacquard'){\n      this.render.view_frames = false;\n    }else{\n      this.render.view_frames = true;\n      this.weaveRef.recomputeLoom();\n    }\n    \n    this.weaveRef.redraw({loom: true});\n\n  }\n\n  public frameChange(e:any){\n    this.draft.loom.setMinFrames(e.value);\n    this.weaveRef.redraw({loom: true});\n  }\n\n  public treadleChange(e:any){\n    this.draft.loom.setMinTreadles(e.value);\n    this.weaveRef.redraw({loom: true});\n  }\n\n\n  public warpNumChange(e:any) {\n    if(e.warps == \"\") return;\n\n    if(e.warps > this.draft.warps){\n      var diff = e.warps - this.draft.warps;\n      \n      for(var i = 0; i  this.draft.wefts){\n      var diff = e.wefts - this.draft.wefts;\n      \n      for(var i = 0; i  pattern !== e.pattern);\n  }\n\n\n  public updateSelection(e:any){\n    this.copy = e;\n  }\n\n\n  public toggleViewFrames(){\n\n    this.render.toggleViewFrames();\n\n    if(this.render.view_frames && this.draft.loom.type == \"frame\"){\n      this.weaveRef.recomputeLoom();\n    }\n\n    this.weaveRef.redraw({loom:true});\n   \n  }\n\n  public renderChange(e: any){\n     \n     if(e.source === \"slider\"){\n        this.render.setZoom(e.value);\n        this.weaveRef.rescale();\n\n     } \n\n     if(e.source === \"in\"){\n        this.render.zoomIn();\n        this.weaveRef.rescale();\n\n     } \n\n     if(e.source === \"out\"){\n        this.render.zoomOut();\n        this.weaveRef.rescale();\n\n     } \n     if(e.source === \"front\"){\n        this.render.setFront(e.checked);\n        this.weaveRef.redraw({drawdown:true});\n     }      \n  }\n\n  public toggleCollapsed(){\n    this.collapsed = !this.collapsed;\n  }\n\n\n\n\n\n\n//careful! calling this from console will clear all data in local storage\npublic clearLocalStorage(){\n\n  var total = 0;\n  for(var x in localStorage) {\n    localStorage.removeItem(x);\n  }\n  console.log( \"LOCAL STORAGE CLEARED\");\n  console.log(\"local storage size now \"+localStorage.length);\n}\n\n\n//call this from console when you want to write a file of the data\npublic downloadLocalStorage(){\n  // let d_log = loadRawLog();\n\n  // let oldest_stamp = d_log[0].timestamp;\n  //   let newest_stamp =   d_log[0].timestamp\n\n\n  // for(var d in d_log){\n  //   if(d_log[d].timestamp > newest_stamp) newest_stamp = d_log[d].timestamp;\n  //   if(d_log[d].timestamp \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeaverDesignComponent.html":{"url":"components/WeaverDesignComponent.html","title":"component - WeaverDesignComponent","body":"\n                   \n\n\n\n  Components\n  WeaverDesignComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/weaver/tool/weaverdesign/weaverdesign.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weaverdesign\n            \n\n            \n                styleUrls\n                weaverdesign.component.scss\n            \n\n\n\n            \n                templateUrl\n                weaverdesign.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            collapsed\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            design_actions\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            design_mode\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            design_modes\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            materials\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            patterns\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            selection\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            view_mode\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onClear\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onCopy\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onCreatePattern\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onDesignModeChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onFill\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onPaste\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onPatternChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onRemovePattern\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialog: MatDialog)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             designModeChange\n                        \n                    \n    \n                    \n                        \n    designModeChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             drawWithMaterial\n                        \n                    \n    \n                    \n                        \n    drawWithMaterial(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             designActionChange\n                        \n                    \n    \n                    \n                        \n    designActionChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             fillEvent\n                        \n                    \n    \n                    \n                        \n    fillEvent(id: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             copyEvent\n                        \n                    \n    \n                    \n                        \n    copyEvent(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             clearEvent\n                        \n                    \n    \n                    \n                        \n    clearEvent(b: boolean)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             pasteEvent\n                        \n                    \n    \n                    \n                        \n    pasteEvent(e: any, type: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updatePatterns\n                        \n                    \n    \n                    \n                        \n    updatePatterns(obj: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removePattern\n                        \n                    \n    \n                    \n                        \n    removePattern(pattern: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             createPattern\n                        \n                    \n    \n                    \n                        \n    createPattern(obj: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             button_color\n                        \n                    \n                    \n                        \n                            button_color:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: #ff4081\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             selected\n                        \n                    \n                    \n                        \n                            selected:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { NgForm } from '@angular/forms';\nimport * as _ from 'lodash';\n\n\n\n@Component({\n  selector: 'app-weaverdesign',\n  templateUrl: './weaverdesign.component.html',\n  styleUrls: ['./weaverdesign.component.scss']\n})\n\n\nexport class WeaverDesignComponent implements OnInit {\n  @Input()  collapsed;\n  @Input()  design_mode;\n  @Input()  design_modes;\n  @Input()  design_actions;\n  @Input()  view_mode;\n  @Input()  materials;\n  @Input()  patterns;\n  @Input()  selection;\n  @Output() onDesignModeChange: any = new EventEmitter();\n  @Output() onFill: any = new EventEmitter();\n  @Output() onPaste: any = new EventEmitter();\n  @Output() onCopy: any = new EventEmitter();\n  @Output() onClear: any = new EventEmitter();\n  @Output() onPatternChange: any = new EventEmitter();\n  @Output() onCreatePattern: any = new EventEmitter();\n  @Output() onRemovePattern: any = new EventEmitter();\n\n  button_color = \"#ff4081\";\n\n\n  selected = 0;\n\n  constructor(private dialog: MatDialog) { \n  }\n\n  ngOnInit() {\n\n  }\n\n\n  // toggleChange(e: any) {\n  //   // if(e.checked) this.brush = \"select\";\n  //   // else{\n  //   //   this.brush = \"point\";\n  //   // }\n\n  //   // var obj: any = {};\n  //   // obj.name = this.brush;\n  //   // this.onBrushChange.emit(obj);\n  // }\n\n  designModeChange(e: any) {\n\n    console.log(e.target.name);\n    this.design_mode = e.target.name;\n\n     var obj: any = {};\n     obj.name = this.design_mode;\n     this.onDesignModeChange.emit(obj);\n  }\n\n  drawWithMaterial(e: any){\n    this.design_mode = 'material';\n    var obj: any = {};\n    obj.name = this.design_mode;\n    obj.id = e.target.name;\n    this.onDesignModeChange.emit(obj);\n  }\n\n  designActionChange(e){\n    console.log(e.target.name);\n\n    switch(e.target.name){\n      case 'up': this.clearEvent(true);\n      break;\n\n      case 'down': this.clearEvent(false);\n      break;\n\n      case 'copy': this.copyEvent(e);\n      break;\n\n      case 'paste': this.pasteEvent(e, 'original');\n      break;\n\n      case 'toggle': this.pasteEvent(e, 'invert');\n      break;\n\n      case 'flip_x': this.pasteEvent(e, 'mirrorX');\n      break;\n\n      case 'flip_y': this.pasteEvent(e, 'mirrorY');\n      break;\n\n      case 'shift_left': this.pasteEvent(e, 'shiftLeft');\n      break;\n\n      case 'shift_up': this.pasteEvent(e, 'shiftUp');\n      break;\n\n    }\n  }\n\n  fillEvent(id) {\n    var obj: any = {};\n    obj.id = id;\n    this.onFill.emit(obj);\n  }\n\n  copyEvent(e) {\n    this.onCopy.emit();\n  }\n\n  clearEvent(b:boolean) {\n    this.onClear.emit(b);\n  }\n\n  pasteEvent(e, type) {\n    var obj: any = {};\n    obj.type = type;\n    this.onPaste.emit(obj);\n  }\n\n\n  updatePatterns(obj: any){\n    this.onPatternChange.emit(obj);\n  }\n\n  removePattern(pattern) {\n    this.onRemovePattern.emit(pattern);\n  }\n\n\n  createPattern(obj){\n    this.onCreatePattern.emit(obj);\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeaverPatternsComponent.html":{"url":"components/WeaverPatternsComponent.html","title":"component - WeaverPatternsComponent","body":"\n                   \n\n\n\n  Components\n  WeaverPatternsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/weaver/tool/weaverpatterns/weaverpatterns.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weaverpatterns\n            \n\n            \n                styleUrls\n                weaverpatterns.component.scss\n            \n\n\n\n            \n                templateUrl\n                weaverpatterns.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            patterns\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            selection\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onCreatePattern\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onFill\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onPatternChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onRemovePattern\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialog: MatDialog)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             updateFavorite\n                        \n                    \n    \n                    \n                        \n    updateFavorite(p: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removePattern\n                        \n                    \n    \n                    \n                        \n    removePattern(pattern: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             openPatternDialog\n                        \n                    \n    \n                    \n                        \n    openPatternDialog(pattern: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             print\n                        \n                    \n    \n                    \n                        \n    print(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             fill\n                        \n                    \n    \n                    \n                        \n    fill(id: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { PatternModal } from '../../../core/modal/pattern/pattern.modal';\nimport { Pattern } from '../../../core/model/pattern';\nimport { PatternService } from '../../../core/provider/pattern.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-weaverpatterns',\n  templateUrl: './weaverpatterns.component.html',\n  styleUrls: ['./weaverpatterns.component.scss']\n})\nexport class WeaverPatternsComponent implements OnInit {\n  \n\n  @Input()  patterns;\n  @Input()  selection;\n  @Output() onPatternChange: any = new EventEmitter();\n  @Output() onCreatePattern: any = new EventEmitter();\n  @Output() onRemovePattern: any = new EventEmitter();\n  @Output() onFill: any = new EventEmitter();\n\n\n  \n  constructor(private dialog: MatDialog) { \n  }\n\n  ngOnInit() {\n\n  }\n\n  updateFavorite(p) {\n\n    this.patterns[p].favorite = !this.patterns[p].favorite;\n\n    var obj:any = {};\n    obj.patterns = _.cloneDeep(this.patterns);\n\n     if(this.selection !== undefined) this.onFill.emit(p);\n    this.onPatternChange.emit(obj);\n  }\n\n\n  removePattern(pattern) {\n    this.onRemovePattern.emit({pattern: pattern});\n  }\n\n  openPatternDialog(pattern) {\n    console.log(\"open dialog\", this.selection);\n    var create = false;\n\n    if (!pattern) {\n      pattern = new Pattern({pattern: this.selection});\n      if(this.selection !== undefined) pattern.setPattern(this.selection);\n\n      console.log(pattern);\n\n      create = true;\n    }\n\n    const dialogRef = this.dialog.open(PatternModal, \n      {data: pattern });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!create) {\n        this.patterns[result.id] = result;\n      } else {\n        this.onCreatePattern.emit({pattern: result});\n      }\n\n      var obj: any = {};\n      obj.patterns = _.cloneDeep(this.patterns);\n      this.onPatternChange.emit(obj);\n    });\n  }\n\n  print(e) {\n    console.log(e);\n  }\n\n  fill(id){\n    this.onFill.emit(id);\n\n  }\n\n\n\n\n}\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeaverViewComponent.html":{"url":"components/WeaverViewComponent.html","title":"component - WeaverViewComponent","body":"\n                   \n\n\n\n  Components\n  WeaverViewComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/weaver/tool/weaverview/weaverview.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weaverview\n            \n\n            \n                styleUrls\n                weaverview.component.scss\n            \n\n\n\n            \n                templateUrl\n                weaverview.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            front\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            view\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            view_modes\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            warp_systems\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            weft_systems\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            zoom\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            onCreateWarpSystem\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onCreateWeftSystem\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onHideWarpSystem\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onHideWeftSystem\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onShowWarpSystem\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onShowWeftSystem\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onViewChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onViewFront\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            onZoomChange\n                        \n                        \n                            $event type:    any\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             viewChange\n                        \n                    \n    \n                    \n                        \n    viewChange(e: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             zoomChange\n                        \n                    \n    \n                    \n                        \n    zoomChange(e: any, source: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             viewFront\n                        \n                    \n    \n                    \n                        \n    viewFront(e: any, value: any, source: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             visibleButton\n                        \n                    \n    \n                    \n                        \n    visibleButton(id: any, visible: any, type: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-weaverview',\n  templateUrl: './weaverview.component.html',\n  styleUrls: ['./weaverview.component.scss']\n})\nexport class WeaverViewComponent implements OnInit {\n  \n  @Input() zoom;\n  @Input() view;\n  @Input() front;\n  @Input() view_modes;\n  @Input() warp_systems;\n  @Input() weft_systems;\n  @Output() onViewChange: any = new EventEmitter();\n  @Output() onViewFront: any = new EventEmitter();\n  @Output() onZoomChange: any = new EventEmitter();\n  @Output() onCreateWarpSystem: any = new EventEmitter();\n  @Output() onShowWarpSystem: any = new EventEmitter();\n  @Output() onHideWarpSystem: any = new EventEmitter();\n  @Output() onCreateWeftSystem: any = new EventEmitter();\n  @Output() onShowWeftSystem: any = new EventEmitter();\n  @Output() onHideWeftSystem: any = new EventEmitter();\n\n\n constructor() { }\n \n  ngOnInit() {\n  }\n\n  viewChange(e:any){\n    this.onViewChange.emit(e.value);\n  }\n\n  zoomChange(e:any, source: string){\n    e.source = source;\n    this.onZoomChange.emit(e);\n  }\n\n  viewFront(e:any, value:any, source: string){\n    console.log(\"value\", value, \"source\", source);\n    e.source = source;\n    e.value = value;\n    this.onViewFront.emit(e);\n  }\n  \n visibleButton(id, visible, type) {\n    console.log(\"called\", id, visible, type);\n    if(type == \"weft\"){\n      if (visible) {\n        this.onShowWeftSystem.emit({systemId: id});\n      } else {\n        this.onHideWeftSystem.emit({systemId: id});\n      }\n    }else{\n      if (visible) {\n        this.onShowWarpSystem.emit({systemId: id});\n      } else {\n        this.onHideWarpSystem.emit({systemId: id});\n      }\n    }\n\n  }\n\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectionComponent.html":{"url":"directives/SelectionComponent.html","title":"directive - SelectionComponent","body":"\n                   \n\n\n\n\n  Directives\n  SelectionComponent\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mixer/palette/selection/selection.component.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        app-selection\n                    \n\n                \n            \n        \n\n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public getDraftId\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getDraftId()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public setPositionAndSize\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    setPositionAndSize(bounds: Bounds)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     active\n                                \n                            \n                            \n                                \n                                    active:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: false\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     bounds\n                                \n                            \n                            \n                                \n                                    bounds:     Bounds\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     draft\n                                \n                            \n                            \n                                \n                                    draft:     Draft\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     filter\n                                \n                            \n                            \n                                \n                                    filter:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: or\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     scale\n                                \n                            \n                            \n                                \n                                    scale:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     start\n                                \n                            \n                            \n                                \n                                    start:     Interlacement\n            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Directive, OnInit } from '@angular/core';\nimport { Draft } from '../../../core/model/draft';\nimport { Point, Bounds, Interlacement } from '../../../core/model/datatypes';\n\n@Directive({\n  selector: 'app-selection'\n})\n\n\nexport class SelectionComponent implements OnInit{\n\n\n  draft: Draft = new Draft({name: \"selection\"});\n\n  bounds:Bounds = {\n    topleft: {x: 0, y:0},\n    width: 0,\n    height: 0\n  }\n\n  start:Interlacement = {i: 0, j:0, si: 0};\n  active = false;\n  scale: number; \n  filter = \"or\"\n\n  ngOnInit(){\n    console.log(this.draft.id);\n    console.log(\"created directive selection\");\n  }\n\n  public getDraftId(){\n    return this.draft.id;\n  }\n\n\n  public setPositionAndSize(bounds: Bounds){\n    this.bounds  = bounds;\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/WeaveDirective.html":{"url":"directives/WeaveDirective.html","title":"directive - WeaveDirective","body":"\n                   \n\n\n\n\n  Directives\n  WeaveDirective\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weaver/directives/weave.directive.ts\n        \n\n            \n                Description\n            \n            \n                WeaveDirective handles the events and manipulation of the weave draft.\n\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [weave]\n                    \n\n                \n            \n        \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    copy\n                                \n                                \n                                      \n                                        Type:    Pattern\n\n                                      \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    design_mode\n                                \n                                \n                                    Contains the name of the brush being used to manipulate the weave draft.It is defined and inputed from the HTML declaration of the WeaveDirective.\n\n                                      \n                                        Type:    any\n\n                                      \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    draft\n                                \n                                \n                                    The Draft object containing the pattern and shuttle information.It is defined and inputed from the HTML declaration of the WeaveDirective.\n\n                                      \n                                        Type:    any\n\n                                      \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    render\n                                \n                                \n                                    The Render object containing the variables about zoom and cell sizes.It is defined and inputed from the HTML declaration of the WeaveDirective.\n\n                                      \n                                        Type:    any\n\n                                      \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeline\n                                \n                                \n                                    The Timeline object containing state histories for undo and redo\n\n                                      \n                                        Type:    any\n\n                                      \n                                \n                            \n                        \n                    \n            \n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    onNewSelection\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                        \n                    \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(el: any)\n                                \n                            \n            \n                            \n                                \n                                        Creates the element reference.\n            \n                                        \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     onNewDraftLoaded\n                                \n                            \n            \n                            \n                                \n            onNewDraftLoaded()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     clearSelection\n                                \n                            \n            \n                            \n                                \n            clearSelection()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setPosAndDraw\n                                \n                            \n            \n                            \n                                \n            setPosAndDraw(target: any, currentPos: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private onStart\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    onStart(event: any)\n                                \n                            \n            \n                            \n                                \n                                        Touch start event. Subscribes to the move event.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                event\n                                                                    :     Event\n            \n                                                            \n                                                            \n                                                                \n            The mousedown event.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private isSame\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    isSame(p1: Interlacement, p2: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private onMove\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    onMove(event: any)\n                                \n                            \n            \n                            \n                                \n                                        Event called when mouse down and moved within the canvas.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                event\n                                                                    :     Event\n            \n                                                            \n                                                            \n                                                                \n            The mousemove event.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private onEnd\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    onEnd(event: any)\n                                \n                            \n            \n                            \n                                \n                                        Event removes subscription when touch has ended.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                event\n                                                                    :     Event\n            \n                                                            \n                                                            \n                                                                \n            The mouseleave or mouseup event.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private removeSubscription\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    removeSubscription()\n                                \n                            \n            \n                            \n                                \n                                        Remove the subscription from the move event.\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private copyArea\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    copyArea()\n                                \n                            \n            \n                            \n                                \n                                        Creates the copied pattern. Hack for warp and weft shuttles is that it creates a 2d arrray representing thethreading or treadling with \"true\" in the frame/threadle associated with that col/row. \n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawWeftMaterialCell\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftMaterialCell(cx: any, i: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawWeftMaterials\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftMaterials(cx: any, canvas: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawWarpMaterialCell\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWarpMaterialCell(cx: any, j: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawWarpMaterials\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWarpMaterials(cx: any, canvas: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawWeftSelectorCell\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftSelectorCell(cx: any, i: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawWeftSystems\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftSystems(cx: any, canvas: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawWarpSelectorCell\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWarpSelectorCell(cx: any, j: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawWarpSystems\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWarpSystems(cx: any, canvas: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawBlank\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawBlank(cx: any, canvas: any)\n                                \n                            \n            \n                            \n                                \n                                        Draws the grid lines onto the canvas.\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawGrid\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawGrid(cx: any, canvas: any)\n                                \n                            \n            \n                            \n                                \n                                        Draws the grid lines onto the canvas.\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawOnWeftSelectors\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawOnWeftSelectors(currentPos: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        Change shuttle of row to next in list.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                the\n                                                                    :     Point\n            \n                                                            \n                                                            \n                                                                point of the interaction\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawOnWeftMaterials\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawOnWeftMaterials(currentPos: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        Change shuttle of row to next in list.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                the\n                                                                    :     Point\n            \n                                                            \n                                                            \n                                                                point of the interaction\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawOnWarpSelectors\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawOnWarpSelectors(currentPos: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        Change column to next row in the list\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                the\n                                                                    :     Point\n            \n                                                            \n                                                            \n                                                                point of the interaction\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawOnWarpMaterials\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawOnWarpMaterials(currentPos: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        Change column to next row in the list\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                the\n                                                                    :     Point\n            \n                                                            \n                                                            \n                                                                point of the interaction\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawOnMask\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawOnMask(currentPos: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        Draws, inverts, or erases a single rectangle on the mask. \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                currentPos\n                                                                    :     Point\n            \n                                                            \n                                                            \n                                                                \n            the current position of the mouse within draft.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawOnDrawdown\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawOnDrawdown(currentPos: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        Called when a single point \"draw\" event is called on the\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                currentPos\n                                                                    :     Point\n            \n                                                            \n                                                            \n                                                                \n            the current position of the mouse within draft.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawOnTieups\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawOnTieups(currentPos: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        Draws or erases a single rectangle on the canvas. Updates the tieups.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                currentPos\n                                                                    :     Point\n            \n                                                            \n                                                            \n                                                                \n            the current position of the mouse within draft.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawOnThreading\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawOnThreading(currentPos: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        Draws or erases a single rectangle on the canvas. Updates the threading.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                currentPos\n                                                                    :     Point\n            \n                                                            \n                                                            \n                                                                \n            the current position of the mouse within draft.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawOnTreadling\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawOnTreadling(currentPos: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        Draws or erases a single rectangle on the canvas. Updates the treadling.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                currentPos\n                                                                    :     Point\n            \n                                                            \n                                                            \n                                                                \n            the current position of the mouse within draft.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private updateLoomFromDraft\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updateLoomFromDraft(currentPos: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private maskArea\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    maskArea(pattern: boolean[][])\n                                \n                            \n            \n                            \n                                \n                                        Fills in selected area of canvas. Updates the pattern within selection.- the pattern used to fill the area.- the type of logic used to fill selected area.Fills the visible regions of the mask with the stitch- the pattern used to fill the area.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                selection\n                                                                    :     Selection\n            \n                                                            \n                                                            \n                                                                \n            defined user selected area to fill.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private drawCell\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawCell(cx: any, i: any, j: any, type: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private redrawRow\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    redrawRow(y: any, i: any, cx: any)\n                                \n                            \n            \n                            \n                                \n                                        Redraws one row to avoid drawing the entire canvas.\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private redrawCol\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    redrawCol(x: any, i: any, cx: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWeftLeftUp\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftLeftUp(top: any, left: any, shuttle: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWeftRightUp\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftRightUp(top: any, left: any, shuttle: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWeftBottomLeft\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftBottomLeft(top: any, left: any, shuttle: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWeftBottomRight\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftBottomRight(top: any, left: any, shuttle: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWeftUp\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftUp(top: any, left: any, shuttle: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWeftStart\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftStart(top: any, left: any, shuttle: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWeftEnd\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftEnd(top: any, left: any, shuttle: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWeftOver\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftOver(top: any, left: any, shuttle: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWeftUnder\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWeftUnder(top: any, left: any, shuttle: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public rescale\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    rescale()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWarpsOver\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWarpsOver()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public redrawYarnView\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    redrawYarnView()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawLoomStates\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawLoomStates(updates: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public redrawLoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    redrawLoom()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public recomputeLoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    recomputeLoom()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public unsetSelection\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    unsetSelection()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawDrawdown\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawDrawdown()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public redraw\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    redraw(flags: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public redrawDraft\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    redrawDraft()\n                                \n                            \n            \n                            \n                                \n                                        Redraws the entire canvas based on weave pattern.\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public drawWarps\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    drawWarps(cx: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public redrawVisualView\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    redrawVisualView()\n                                \n                            \n            \n                            \n                                \n                                        Simulates the visual look of the weave pattern.\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public onUndoRedo\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    onUndoRedo()\n                                \n                            \n            \n                            \n                                \n                                        Resizes and then redraws the canvas on a change to the wefts or warps. \n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public printPattern\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    printPattern(pattern: any)\n                                \n                            \n            \n                            \n                                \n                                        Prints the pattern to the console.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                pattern\n                                                                    :     Array\n            \n                                                            \n                                                            \n                                                                \n            2D pattern array.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public savePNG\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    savePNG(fileName: any, obj: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves the draft as a bitmap file\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                fileName\n                                                            \n                                                            \n                                                                \n            name to save file as\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public savePrintableDraft\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    savePrintableDraft(fileName: any, obj: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves the draft as a bitmap file\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                fileName\n                                                            \n                                                            \n                                                                \n            name to save file as\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public saveBMP\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    saveBMP(fileName: any, obj: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves the draft as a bitmap file\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                fileName\n                                                            \n                                                            \n                                                                \n            name to save file as\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public saveADA\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    saveADA(fileName: any, obj: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves the draft as a .ada file\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                fileName\n                                                            \n                                                            \n                                                                \n            name to save file as\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public saveWIF\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    saveWIF(fileName: any, obj: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves the draft as a .wif file\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                fileName\n                                                            \n                                                            \n                                                                \n            name to save file as\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n            ld updated 3/27 to account for new file structure\n            \n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     canvasEl\n                                \n                            \n                            \n                                \n                                    canvasEl:     HTMLCanvasElement\n            \n                                \n                            \n                            \n                                \n                                    The HTML canvas element within the weave draft.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cx\n                                \n                            \n                            \n                                \n                                    cx:     any\n            \n                                \n                            \n                            \n                                \n                                    The 2D context of the canvas\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cxThreading\n                                \n                            \n                            \n                                \n                                    cxThreading:     any\n            \n                                \n                            \n                            \n                                \n                                    The 2D context of the threading canvas\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cxTieups\n                                \n                            \n                            \n                                \n                                    cxTieups:     any\n            \n                                \n                            \n                            \n                                \n                                    The 2D context of the treadling canvas\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cxTreadling\n                                \n                            \n                            \n                                \n                                    cxTreadling:     any\n            \n                                \n                            \n                            \n                                \n                                    The 2D context of the treadling canvas\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cxWarpMaterials\n                                \n                            \n                            \n                                \n                                    cxWarpMaterials:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cxWarpSystems\n                                \n                            \n                            \n                                \n                                    cxWarpSystems:     any\n            \n                                \n                            \n                            \n                                \n                                    The 2D context of the warp_systems canvas\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cxWeftMaterials\n                                \n                            \n                            \n                                \n                                    cxWeftMaterials:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cxWeftSystems\n                                \n                            \n                            \n                                \n                                    cxWeftSystems:     any\n            \n                                \n                            \n                            \n                                \n                                    The 2D context of the weft_systems canvas\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     divViewFrames\n                                \n                            \n                            \n                                \n                                    divViewFrames:     HTMLElement\n            \n                                \n                            \n                            \n                                \n                                    The HTML div element used to show and hide the frames.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     divWasy\n                                \n                            \n                            \n                                \n                                    divWasy:     HTMLElement\n            \n                                \n                            \n                            \n                                \n                                    The HTML div element used to show the warp-systems text.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     divWesy\n                                \n                            \n                            \n                                \n                                    divWesy:     HTMLElement\n            \n                                \n                            \n                            \n                                \n                                    The HTML div element used to show the weft-systems text.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     draftContainer\n                                \n                            \n                            \n                                \n                                    draftContainer:     HTMLElement\n            \n                                \n                            \n                            \n                                \n                                    the window holding the draft.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     flag_history\n                                \n                            \n                            \n                                \n                                    flag_history:     boolean\n            \n                                \n                            \n                            \n                                \n                                    flag defining if there needs to be a recomputation of the draft on Mouse Up\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     flag_recompute\n                                \n                            \n                            \n                                \n                                    flag_recompute:     boolean\n            \n                                \n                            \n                            \n                                \n                                    flag defining if there needs to be a recomputation of the draft on Mouse Up\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private lastPos\n                                \n                            \n                            \n                                \n                                    lastPos:     Interlacement\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     moveSubscription\n                                \n                            \n                            \n                                \n                                    moveSubscription:     Subscription\n            \n                                \n                            \n                            \n                                \n                                    Subscribes to move event after a touch event is started.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     selection\n                                \n                            \n                            \n                                \n                                    selection:     Selection\n            \n                                \n                            \n                            \n                                \n                                    The current selection within the weave canvas.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     svgEl\n                                \n                            \n                            \n                                \n                                    svgEl:     HTMLElement\n            \n                                \n                            \n                            \n                                \n                                    The HTML SVG element used to show the selection.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     svgSelectCol\n                                \n                            \n                            \n                                \n                                    svgSelectCol:     HTMLElement\n            \n                                \n                            \n                            \n                                \n                                    The HTML SVG element used to show the row\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     svgSelectRow\n                                \n                            \n                            \n                                \n                                    svgSelectRow:     HTMLElement\n            \n                                \n                            \n                            \n                                \n                                    The HTML SVG element used to show the row\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private tempPattern\n                                \n                            \n                            \n                                \n                                    tempPattern:     boolean[][]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     threadingCanvas\n                                \n                            \n                            \n                                \n                                    threadingCanvas:     HTMLCanvasElement\n            \n                                \n                            \n                            \n                                \n                                    The HTML canvas element within the weave draft for threading.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     tieupsCanvas\n                                \n                            \n                            \n                                \n                                    tieupsCanvas:     HTMLCanvasElement\n            \n                                \n                            \n                            \n                                \n                                    The HTML canvas element within the weave draft for tieups.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     treadlingCanvas\n                                \n                            \n                            \n                                \n                                    treadlingCanvas:     HTMLCanvasElement\n            \n                                \n                            \n                            \n                                \n                                    The HTML canvas element within the weave draft for treadling.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private unsubscribe$\n                                \n                            \n                            \n                                \n                                    unsubscribe$:     Subject\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     warpMaterialsCanvas\n                                \n                            \n                            \n                                \n                                    warpMaterialsCanvas:     HTMLCanvasElement\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     warpSystemsCanvas\n                                \n                            \n                            \n                                \n                                    warpSystemsCanvas:     HTMLCanvasElement\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     weftMaterialsCanvas\n                                \n                            \n                            \n                                \n                                    weftMaterialsCanvas:     HTMLCanvasElement\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     weftSystemsCanvas\n                                \n                            \n                            \n                                \n                                    weftSystemsCanvas:     HTMLCanvasElement\n            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Directive, ElementRef, ViewChild, HostListener, Input, Output, EventEmitter, Renderer2 } from '@angular/core';\nimport { Observable, Subscription, fromEvent, from } from 'rxjs';\nimport * as d3 from \"d3\";\nimport {cloneDeep, now} from 'lodash';\n\nimport { Render } from '../../weaver/model/render';\nimport { Pattern } from '../../core/model/pattern';\nimport { Point, Interlacement, LoomUpdate } from '../../core/model/datatypes';\nimport { Selection } from '../../weaver/model/selection';\nimport { Timeline } from '../../core/model/timeline';\nimport { CanvasToBMP } from '../../core/model/canvas2image';\nimport {Subject} from 'rxjs';\nimport {takeLast, takeUntil} from 'rxjs/operators';\n\nconst generateId = () => (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase();\n\n/**\n * WeaveDirective handles the events and manipulation of the weave draft.\n * @class\n */\n@Directive({\n  selector: '[weave]'\n})\n\n\nexport class WeaveDirective {\n\n\n\n  /// ATTRIBUTES\n  /**\n   * Contains the name of the brush being used to manipulate the weave draft.\n   * It is defined and inputed from the HTML declaration of the WeaveDirective.\n   * @property {string}\n   */\n  @Input('design_mode') design_mode: any;\n\n  /**\n   * The Draft object containing the pattern and shuttle information.\n   * It is defined and inputed from the HTML declaration of the WeaveDirective.\n   * @property {Draft}\n   */\n  @Input('draft') weave: any;\n\n\n/**\n   * The Render object containing the variables about zoom and cell sizes.\n   * It is defined and inputed from the HTML declaration of the WeaveDirective.\n   * @property {Render}\n  */\n  @Input('render') render:any;\n\n\n\n/**\n   * The Timeline object containing state histories for undo and redo\n   * @property {Render}\n  */\n  @Input('timeline') timeline: any;\n\n\n\n  @Input() copy: Pattern;\n\n\n  @Output() onNewSelection = new EventEmitter();\n\n\n\n/**\n   * The HTML canvas element within the weave draft.\n   * @property {HTMLCanvasElement}\n  */ \n  canvasEl: HTMLCanvasElement;\n\n/**\n   * the window holding the draft.\n   * @property {HTMLCanvasElement}\n  */ \n  draftContainer: HTMLElement;\n\n\n  /**\n   * flag defining if there needs to be a recomputation of the draft on Mouse Up\n   */\n  flag_recompute: boolean;\n\n\n  /**\n   * flag defining if there needs to be a recomputation of the draft on Mouse Up\n   */\n  flag_history: boolean;\n\n\n  /**\n   * The 2D context of the canvas\n   * @property {any}\n   */\n  cx: any;\n\n  /**\n   * The 2D context of the threading canvas\n   * @property {any}\n   */\n  cxThreading: any;\n\n  /**\n   * The 2D context of the treadling canvas\n   * @property {any}\n   */\n  cxTreadling: any;\n\n  /**\n   * The 2D context of the treadling canvas\n   * @property {any}\n   */\n  cxTieups: any;\n\n  /**\n   * The 2D context of the weft_systems canvas\n   * @property {any}\n   */\n  cxWeftSystems: any;\n\n  /**\n   * The 2D context of the warp_systems canvas\n   * @property {any}\n   */\n  cxWarpSystems: any;\n\n\n  cxWarpMaterials: any;\n\n\n\n  cxWeftMaterials: any;\n\n\n  /**\n   * The current selection within the weave canvas.\n   * @property {Selection}\n   */\n  selection: Selection = new Selection();\n\n  /**\n   * Subscribes to move event after a touch event is started.\n   * @property {Subscription}\n   */\n  moveSubscription: Subscription;\n\n  /**\n   * The HTML SVG element used to show the selection.\n   * @property {HTMLElement}\n   */\n  svgEl: HTMLElement;\n\n\n\n  /**\n   * The HTML div element used to show the weft-systems text.\n   * @property {HTMLElement}\n   */\n  divWesy: HTMLElement;\n\n  /**\n   * The HTML div element used to show the warp-systems text.\n   * @property {HTMLElement}\n   */\n  divWasy: HTMLElement;\n\n\n  /**\n   * The HTML div element used to show and hide the frames.\n   * @property {HTMLElement}\n   */\n  divViewFrames: HTMLElement;\n\n\n /**\n   * The HTML SVG element used to show the row\n   * @property {HTMLElement}\n   */\n  svgSelectRow: HTMLElement;\n\n\n /**\n   * The HTML SVG element used to show the row\n   * @property {HTMLElement}\n   */\n  svgSelectCol: HTMLElement;\n\n\n  /**\n   * The HTML canvas element within the weave draft for threading.\n   * @property {HTMLCanvasElement}\n   * \n   */\n  threadingCanvas: HTMLCanvasElement;\n\n    /**\n   * The HTML canvas element within the weave draft for treadling.\n   * @property {HTMLCanvasElement}\n   * \n   */\n  treadlingCanvas: HTMLCanvasElement;\n\n  /**\n   * The HTML canvas element within the weave draft for tieups.\n   * @property {HTMLCanvasElement}\n   * \n   */\n  tieupsCanvas: HTMLCanvasElement;\n\n\n\n  weftSystemsCanvas: HTMLCanvasElement;\n  warpSystemsCanvas: HTMLCanvasElement;\n\n\n  weftMaterialsCanvas: HTMLCanvasElement;\n  warpMaterialsCanvas: HTMLCanvasElement;\n\n  private tempPattern: Array>;\n  private unsubscribe$ = new Subject();\n\n  private lastPos: Interlacement;\n\n\n\n  /// ANGULAR FUNCTIONS\n  /**\n   * Creates the element reference.\n   * @constructor\n   */\n  constructor(private el: ElementRef) {\n\n    this.flag_recompute = false;\n    this.flag_history = false;\n  }\n\n\n  //this is called when the HTML \"weaveRef\" Element is loaded\n  ngOnInit() {  \n\n    console.log(\"element\", this.el.nativeElement.children);\n\n    // define the elements and context of the weave draft, threading, treadling, and tieups.\n    this.canvasEl = this.el.nativeElement.children[6];\n    this.draftContainer = this.el.nativeElement;\n\n\n  \n    //this is the selection\n    this.svgEl = this.el.nativeElement.children[8];\n    this.svgSelectRow = this.el.nativeElement.children[12];\n    this.svgSelectCol = this.el.nativeElement.children[13];\n    this.divWesy = this.el.nativeElement.children[10];\n    this.divWasy = this.el.nativeElement.children[11];\n    this.divViewFrames = this.el.nativeElement.children[9];\n\n    this.threadingCanvas = this.el.nativeElement.children[4];\n    this.tieupsCanvas = this.el.nativeElement.children[5];\n    this.treadlingCanvas = this.el.nativeElement.children[7];\n    this.weftSystemsCanvas = this.el.nativeElement.children[0];\n    this.weftMaterialsCanvas = this.el.nativeElement.children[1];\n    this.warpSystemsCanvas = this.el.nativeElement.children[2];\n    this.warpMaterialsCanvas = this.el.nativeElement.children[3];\n    \n    this.cx = this.canvasEl.getContext('2d');\n    this.cxThreading = this.threadingCanvas.getContext('2d');\n    this.cxTreadling = this.treadlingCanvas.getContext('2d');\n    this.cxTieups = this.tieupsCanvas.getContext('2d');\n    this.cxWarpSystems = this.warpSystemsCanvas.getContext('2d');\n    this.cxWeftSystems = this.weftSystemsCanvas.getContext('2d');\n    this.cxWarpMaterials = this.warpMaterialsCanvas.getContext('2d');\n    this.cxWeftMaterials = this.weftMaterialsCanvas.getContext('2d');\n    // set the width and height\n\n    d3.select(this.svgEl).style('display', 'none');\n\n    \n  }\n\n  //this is called anytime a new draft object is loaded. \n  onNewDraftLoaded() {  \n\n    var dims = this.render.getCellDims(\"base\");\n\n    this.canvasEl.width = this.weave.warps * dims.w;\n    this.canvasEl.height = this.weave.wefts * dims.h;\n    this.threadingCanvas.width = this.weave.warps * dims.w;\n    this.threadingCanvas.height = this.weave.loom.min_frames * dims.h;\n    this.treadlingCanvas.height = this.weave.wefts * dims.h;\n    this.treadlingCanvas.width = this.weave.loom.min_treadles * dims.w;\n    this.tieupsCanvas.width = this.weave.loom.min_treadles*dims.w;\n    this.tieupsCanvas.height = this.weave.loom.min_frames * dims.h;\n\n\n    this.weftSystemsCanvas.width =  dims.w;\n    this.weftSystemsCanvas.height = this.weave.wefts * dims.h;\n    this.weftMaterialsCanvas.width =  dims.w;\n    this.weftMaterialsCanvas.height = this.weave.wefts * dims.h;\n\n    this.warpSystemsCanvas.width =  this.weave.warps * dims.w;\n    this.warpSystemsCanvas.height = dims.h;\n    this.warpMaterialsCanvas.width =  this.weave.warps * dims.w;\n    this.warpMaterialsCanvas.height = dims.h;\n\n\n    // make the selection SVG invisible using d3\n    d3.select(this.svgEl).style('display', 'none');\n\n\n  }\n\n  clearSelection(){\n        this.selection.unsetParameters();\n        d3.select(this.svgEl).style('display', 'none');\n        d3.select(this.svgSelectCol).style('display', 'none');\n        d3.select(this.svgSelectRow).style('display', 'none');\n  }\n\n  ngOnDestroy() {\n     this.removeSubscription();\n  }\n\n\n  setPosAndDraw(target, currentPos:Interlacement){\n      if (target && target.id =='treadling') {\n        currentPos.i = this.weave.visibleRows[currentPos.i];\n        this.drawOnTreadling(currentPos);\n      } else if (target && target.id === 'tieups') {\n        currentPos.i = this.weave.loom.frame_mapping[currentPos.i];\n        this.drawOnTieups(currentPos);\n      } else if (target && target.id === ('threading')) {\n        currentPos.i = this.weave.loom.frame_mapping[currentPos.i];\n        this.drawOnThreading(currentPos);\n      } else if(target && target.id === ('weft-systems')){\n        currentPos.i = this.weave.visibleRows[currentPos.i];\n        this.drawOnWeftSelectors(currentPos);\n      }else if(target && target.id === ('warp-systems')){\n        this.drawOnWarpSelectors(currentPos);\n      }else if(target && target.id === ('weft-materials')){\n        currentPos.i = this.weave.visibleRows[currentPos.i];\n        this.drawOnWeftMaterials(currentPos);\n      }else if(target && target.id === ('warp-materials')){\n        this.drawOnWarpMaterials(currentPos);\n      } else{\n        currentPos.i = this.weave.visibleRows[currentPos.i];\n        this.drawOnDrawdown(currentPos);\n      }\n\n      this.flag_history = true;\n    }\n\n\n\n  /**\n   * Touch start event. Subscribes to the move event.\n   * @extends WeaveDirective\n   * @param {Event} event - The mousedown event.\n   * @returns {void}\n   */\n  @HostListener('mousedown', ['$event'])\n  private onStart(event) {\n\n\n    //get dimis based on zoom.\n    let dims ={\n      w: this.warpSystemsCanvas.width / this.weave.warps,\n      h: this.weftSystemsCanvas.height / this.weave.visibleRows.length\n    }\n\n    if (event.target.localName === 'canvas') {\n    \n      this.removeSubscription();    \n      \n      this.moveSubscription = \n        fromEvent(event.target, 'mousemove').subscribe(e => this.onMove(e));   \n\n      // set up the Point to be used.\n      var screen_row = Math.floor(event.offsetY / dims.h);\n\n      const currentPos: Interlacement = {\n        si: screen_row,\n        i: screen_row, //row\n        j: Math.floor((event.offsetX) / dims.w), //col\n      };\n\n      if(currentPos.i = this.weave.visibleRows.length) return;\n      if(currentPos.j = this.weave.warps) return;\n\n      if(event.target && event.target.id===\"drawdown\"){\n        currentPos.si -=1;\n        currentPos.i -=1;\n        currentPos.j -=1;\n      }\n\n      if(currentPos.i = this.weave.visibleRows.length) return;\n      if(currentPos.j = this.weave.warps) return;\n      \n      // Save temp pattern\n      this.tempPattern = cloneDeep(this.weave.pattern);\n      switch (this.design_mode.name) {\n        case 'toggle':\n          this.setPosAndDraw(event.target, currentPos);\n          this.unsetSelection();\n        break;\n\n        case 'up':\n        case 'down':\n        case 'material':\n          this.setPosAndDraw(event.target, currentPos);\n          this.unsetSelection();\n          this.flag_recompute = true;\n\n          break;\n        case 'maskpoint':\n        case 'maskerase':\n        case'maskinvert':\n          this.drawOnMask(currentPos);\n          break;\n        case 'select':\n        case 'copy':\n\n          if(event.shiftKey){\n\n            this.selection.end = currentPos;\n            this.selection.setParameters();\n            this.rescale();\n\n          }else{\n\n            this.clearSelection();\n\n            this.selection.start = currentPos;\n            this.selection.end = currentPos;\n            this.selection.width = 0;\n            this.selection.height = 0;\n\n\n            if (event.target && event.target.id===\"treadling\") {\n              this.selection.setTarget(this.treadlingCanvas);\n              this.selection.start.j = 0;\n              this.selection.width = this.weave.loom.num_treadles;\n\n            } else if (event.target && event.target.id ===\"tieups\") {\n              this.selection.setTarget(this.tieupsCanvas);\n            } else if (event.target && event.target.id === \"threading\") {\n              this.selection.setTarget(this.threadingCanvas);\n              this.selection.start.i = 0;\n              this.selection.start.si = 0;\n              this.selection.height = this.weave.loom.num_frames;\n\n\n            } else if(event.target && event.target.id === \"weft-systems\"){\n              this.selection.width = 1;\n              this.selection.setTarget(this.weftSystemsCanvas);\n            }else if(event.target && event.target.id === \"warp-systems\"){\n              this.selection.setTarget(this.warpSystemsCanvas);\n              this.selection.height = 1;\n            } else if(event.target && event.target.id === \"weft-materials\"){\n              this.selection.width = 1;\n              this.selection.setTarget(this.weftMaterialsCanvas);\n            }else if(event.target && event.target.id === \"warp-materials\"){\n              this.selection.setTarget(this.warpMaterialsCanvas);\n              this.selection.height = 1;\n            } else{\n              this.selection.setTarget(this.canvasEl);\n            }\n          }\n          break;\n          default:\n          break;\n      }\n\n      this.lastPos = {\n        si: currentPos.si,\n        i: currentPos.i, //row\n        j: currentPos.j //col\n      };\n\n      // this.segment = {\n      //   start: [currentPos.si, currentPos.i, currentPos.j],\n      //   end: [currentPos.si, currentPos.i, currentPos.j],\n      //   pattern: null,\n      //   id: generateId(),\n      // }\n    }\n  }\n\n  private isSame(p1: Interlacement, p2:Interlacement){\n    if(p1 === undefined || p2 === undefined ) return false\n    return (p1.i == p2.i && p1.j === p2.j);\n\n  }\n\n\n\n  /**\n   * Event called when mouse down and moved within the canvas.\n   * @extends WeaveDirective\n   * @param {Event} event - The mousemove event.\n   * @returns {void}\n   */\n  private onMove(event) {\n\n    let dims ={\n      w: this.warpSystemsCanvas.width / this.weave.warps,\n      h: this.weftSystemsCanvas.height /this.weave.visibleRows.length\n    };    \n\n    var offset = this.render.getCellDims(this.design_mode.name);\n  \n    // set up the point based on touched square.\n    var screen_row = Math.floor((event.offsetY + offset.y) / dims.h);\n\n    const currentPos: Interlacement = {\n      si: screen_row,\n      i:  screen_row,\n      j:  Math.floor((event.offsetX + offset.x) / dims.w)\n    };\n\n   \n\n\n    if(event.target && event.target.id===\"drawdown\"){\n      currentPos.si -=1;\n      currentPos.i -=1;\n      currentPos.j -=1;\n    }\n\n   \n\n    //don't call unless you've moved to a new spot\n    if(this.isSame(currentPos, this.lastPos)) return;\n\n    // determine action based on brush type. invert inactive on move.\n    switch (this.design_mode.name) {\n      case 'up':\n      case 'down':\n      case 'material':\n       //this.unsetSelection();\n\n        if(currentPos.i = this.weave.visibleRows.length) return;\n        if(currentPos.j = this.weave.warps) return;\n\n\n        this.setPosAndDraw(event.target, currentPos);\n        this.flag_recompute = true;\n\n\n        \n        break;\n\n      case 'maskpoint':\n      case 'maskerase':\n      case'maskinvert':\n        this.drawOnMask(currentPos);\n        break;\n\n\n      case 'select':\n      case 'copy':\n\n        this.selection.end = currentPos;\n        if(currentPos.si = this.weave.visibleRows.length) currentPos.si = this.weave.visibleRows.length;\n      \n        if(currentPos.j = this.weave.warps) currentPos.j = this.weave.warps;\n\n\n        if (event.target && event.target.id === ('treadling')) {\n          this.selection.end.j = this.weave.loom.num_treadles;\n\n        }else if(event.target && event.target.id === ('threading')){\n          this.selection.end.i = this.weave.loom.num_frames;\n          this.selection.end.si = this.weave.loom.num_frames;\n        }\n\n        this.selection.setParameters();\n        this.rescale();\n\n        break;\n      case 'invert':\n      default:\n        break;\n    }\n\n    this.lastPos = {\n        si: currentPos.si,\n        i: currentPos.i, //row\n        j: currentPos.j //col\n      };\n  }\n\n  /**\n   * Event removes subscription when touch has ended.\n   * @extends WeaveDirective\n   * @param {Event} event - The mouseleave or mouseup event.\n   * @returns {void}\n   */\n  @HostListener('mouseleave', ['$event'])\n  @HostListener('mouseup', ['$event'])\n  private onEnd(event) {\n     this.lastPos = {\n      si: -1,\n      i: -1,\n      j: -1\n     }\n\n     if(this.flag_history && event.type == 'mouseup'){\n        this.timeline.addHistoryState(this.weave);\n        this.flag_history = false;\n      } \n\n\n     if(this.flag_recompute && event.type == 'mouseup'){\n      if(this.render.isYarnBasedView()) this.weave.computeYarnPaths();\n      this.flag_recompute = false;\n     }\n\n\n\n    // remove subscription unless it is leave event with select.\n    if (!(event.type === 'mouseleave' && (this.design_mode.name === 'select' || this.design_mode.name ==='copy'))) {\n      this.removeSubscription();\n      if(this.design_mode.name != \"copy\" && this.selection.start !== undefined) this.copyArea();\n    }\n\n  }\n\n  /**\n   * Remove the subscription from the move event.\n   * @extends WeaveDirective\n   * @returns {void}\n   */\n private removeSubscription() {    \n    if (this.moveSubscription) {\n      this.moveSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Creates the copied pattern. Hack for warp and weft shuttles is that it creates a 2d arrray representing the \n   * threading or treadling with \"true\" in the frame/threadle associated with that col/row. \n   * @extends WeaveDirective\n   * @returns {void}\n   */\n  private copyArea() {\n\n    const screen_i = Math.min(this.selection.start.si, this.selection.end.si);    \n    const draft_j = Math.min(this.selection.start.j, this.selection.end.j);\n    \n\n    var w = this.selection.width;\n    var h = this.selection.height;\n\n    this.copy = new Pattern({name: 'copy', width: w, height: h});\n    const temp_copy: Array> = [];\n\n    if(this.selection.target.id === 'weft-systems'){\n      for(var i = 0; i  25){\n\n     //cx.lineWidth = this.render.zoom/100;\n\n     //cx.setLineDash([dims.w/20,dims.w/4]);\n\n      // draw vertical lines\n      for (i = 0; i  dims.w && i  dims.h && i >} - the pattern used to fill the area.\n   * @param {string} - the type of logic used to fill selected area.\n   * @returns {void}\n   */\n  // private fillArea(\n  //   selection: Selection, \n  //   pattern: Array>, \n  //   type: string\n  // ) {\n\n  //   console.log(\"fill area called\");\n  //   console.log(selection, pattern, type);\n\n  //   var dims = this.render.getCellDims(\"base\");\n  //   var updates = [];\n    \n  //   var screen_i = Math.min(selection.start.si, selection.end.si)\n  //   const draft_i = Math.min(selection.start.i, selection.end.i);\n  //   const draft_j = Math.min(selection.start.j, selection.end.j);\n  \n  //   const rows = pattern.length;\n  //   const cols = pattern[0].length;\n\n  //   var w,h;\n\n  //   w = Math.ceil(selection.width);\n  //   h = Math.ceil(selection.height);\n\n\n  //   if(selection.target.id === \"warp-systems\"){\n  //     h = pattern.length;\n  //     screen_i = 0;\n  //   } \n  //   if(selection.target.id === \"weft-systems\"){\n  //     w = pattern[0].length;\n  //   } \n\n  //   if(selection.target.id === \"warp-materials\"){\n  //      h = pattern.length;\n  //      screen_i = 0;\n  //   }\n  //   if(selection.target.id === \"weft-materials\"){\n  //     w = pattern[0].length;\n  //   } \n\n  //   //cycle through each visible row/column of the selection\n  //   for (var i = 0; i >} - the pattern used to fill the area.\n   * @returns {void}\n   */\n\n\n  private maskArea(pattern: Array>) {\n   \n\n    // var dims = this.render.getCellDims(\"base\");\n    // var updates = [];\n\n    // const rows = pattern.length;\n    // const cols = pattern[0].length;\n\n\n    // //iterate through cell\n    // for (var i = 0; i  this.weave.loom.min_frames; \n        has_mask = false;\n        \n        if(is_up)  color = \"#333333\";\n        i = this.weave.loom.frame_mapping[frame];\n\n      break;\n      case 'tieup':\n        if(!this.render.isFront()) return;\n        is_up = (this.weave.loom.tieup[i][j]);\n        beyond = i > this.weave.loom.min_frames; \n        has_mask = false;\n        if(is_up) color = \"#333333\";\n        i = this.weave.loom.frame_mapping[i];\n\n      break;\n      case 'treadling':\n        if(!this.render.isFront()) return;\n        //i and j is going to come from the UI which is only showing visible rows\n        var row = this.weave.visibleRows[i];\n        beyond = this.weave.loom.treadling[row] > this.weave.loom.min_treadles; \n        is_up = (this.weave.loom.treadling[row] == j);\n        has_mask = false;\n        if(is_up)  color = \"#333333\";\n\n      break;\n\n    }\n\n     //cx.fillStyle = color;\n     cx.fillStyle = color;\n     cx.fillRect(left+j*base_dims.w + base_fill.x, top+i*base_dims.h + base_fill.y, base_fill.w, base_fill.h);\n\n\n  }\n\n  /**\n   * Redraws one row to avoid drawing the entire canvas.\n   * @extends WeaveDirective\n   * @returns {void}\n   */\n  private redrawRow(y, i, cx) {\n \n    for (var j = 0; j  this.weave.warps) return;\n\n      left = (left+1)*dims.w;\n      top =  (top + 1) * dims.h;\n\n      top += dims.h/2;\n\n\n      cx.lineWidth = shuttle.getThickness()/100 * .9*dims.h;\n      cx.strokeStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor();\n      cx.shadowColor = 'white';\n      cx.shadowOffsetX = 0;\n      cx.shadowOffsetY = .5;\n\n      cx.beginPath();\n      cx.moveTo(left,top);\n      cx.arcTo(left+dims.w/2, top, left+dims.w/2, top - dims.h/2, dims.w/2);\n      cx.stroke();\n  }\n\n  public drawWeftRightUp(top, left, shuttle){\n      //console.log(\"draw right up\", top, left);\n      var dims = this.render.getCellDims(\"base\");\n      var cx = this.cx;\n      var view = this.render.getCurrentView();\n\n      if(left  this.weave.warps) return;\n\n      left = (left+1)*dims.w;\n      top =  (top + 1) * dims.h;\n\n      top += dims.h/2;\n\n\n      cx.lineWidth = shuttle.getThickness()/100 * .9*dims.h;\n      cx.strokeStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor();\n      cx.shadowColor = 'white';\n      cx.shadowOffsetX = 0;\n      cx.shadowOffsetY = .5;\n\n      cx.beginPath();\n      cx.moveTo(left+dims.w,top);\n      cx.arcTo(left+dims.w/2, top, left+dims.w/2, top-dims.h/2, dims.w/2);\n      cx.stroke();\n  }\n\n  public drawWeftBottomLeft(top, left, shuttle){\n      //console.log(\"draw bottom left\", top, left);\n      var dims = this.render.getCellDims(\"base\");\n      var cx = this.cx;\n      var view = this.render.getCurrentView();\n\n      if(left  this.weave.warps) return;\n\n      left = (left+1)*dims.w;\n      top =  (top + 1) * dims.h;\n\n      top += dims.h/2;\n\n\n      cx.lineWidth = shuttle.getThickness()/100 * .9*dims.h;\n      cx.strokeStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor();\n      cx.shadowColor = 'white';\n      cx.shadowOffsetX = .5;\n      cx.shadowOffsetY = 0;\n\n      cx.beginPath();\n      cx.moveTo(left+dims.w/2,top+dims.h/2);\n      cx.arcTo(left+dims.w/2, top, left, top, dims.w/2);\n      cx.stroke();\n  }\n\n  public drawWeftBottomRight(top, left, shuttle){\n      //console.log(\"draw bottom right\", top, left);\n      var dims = this.render.getCellDims(\"base\");\n      var cx = this.cx;\n      var view = this.render.getCurrentView();\n\n      if(left  this.weave.warps) return;\n\n      left = (left+1)*dims.w;\n      top =  (top + 1) * dims.h;\n\n      top += dims.h/2;\n\n\n      cx.lineWidth = shuttle.getThickness()/100 * .9*dims.h;\n      cx.strokeStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor();\n      cx.shadowColor = 'white';\n      cx.shadowOffsetX = .5;\n      cx.shadowOffsetY = 0;\n\n      cx.beginPath();\n      cx.moveTo(left+dims.w/2,top+dims.h/2);\n      cx.arcTo(left+dims.w/2, top, left+dims.w, top, dims.w/2);\n              cx.stroke();\n  }\n\n\n  public drawWeftUp(top, left, shuttle){\n     //console.log(\"draw under\", top, left);\n      var dims = this.render.getCellDims(\"base\");\n      var cx = this.cx;\n      var view = this.render.getCurrentView();\n\n      if(left  this.weave.warps) return;\n\n      left = (left+1)*dims.w;\n      top =  (top + 1) * dims.h;\n\n      left += dims.w/2\n\n      var width = shuttle.getThickness()/100 * .9*dims.w;\n      cx.strokeStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor()\n      cx.lineWidth = width;\n      cx.shadowColor = 'white';\n      cx.shadowOffsetX = .5;\n      cx.shadowOffsetY = 0;\n\n      cx.beginPath();\n      cx.moveTo(left, top);\n      cx.lineTo(left, top+dims.h);\n      cx.stroke();\n\n  }\n\n  public drawWeftStart(top, left, shuttle){\n //console.log(\"draw over\", top, left);\n      var dims = this.render.getCellDims(\"base\");\n      var cx = this.cx;\n      var view = this.render.getCurrentView();\n\n      if(left  this.weave.warps) return;\n\n      left = (left+1)*dims.w;\n      top =  (top + 1) * dims.h;\n\n\n      top += dims.h/2;\n\n\n      cx.lineWidth = shuttle.getThickness()/100 * .9*dims.h;\n      cx.strokeStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor();\n      cx.fillStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor();\n\n\n      cx.beginPath();\n      var circle = new Path2D();\n      circle.arc(left+dims.w/2, top, dims.h/2, 0, 2 * Math.PI);\n      cx.fill(circle);\n\n\n}\n\npublic drawWeftEnd(top, left, shuttle){\n //console.log(\"draw over\", top, left);\n      var dims = this.render.getCellDims(\"base\");\n      var cx = this.cx;\n      var view = this.render.getCurrentView();\n\n      if(left  this.weave.warps) return;\n\n      left = (left+1)*dims.w;\n      top =  (top + 1) * dims.h;\n\n\n      top += dims.h/2;\n\n\n      cx.lineWidth = 1;\n      cx.strokeStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor();\n      cx.fillStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor();\n\n      cx.beginPath();\n      var circle = new Path2D();\n      circle.arc(left+dims.w/2, top, dims.h/2, 0, 2 * Math.PI);\n      cx.stroke(circle);\n\n\n}\n\n //break down all cells into the various kinds of drawings\n  public drawWeftOver(top, left, shuttle){\n      //console.log(\"draw over\", top, left);\n      var dims = this.render.getCellDims(\"base\");\n      var cx = this.cx;\n      var view = this.render.getCurrentView();\n\n      if(left  this.weave.warps) return;\n\n      left = (left+1)*dims.w;\n      top =  (top + 1) * dims.h;\n\n      top += dims.h/2;\n\n\n      cx.lineWidth = shuttle.getThickness()/100 * .9*dims.h;\n      cx.strokeStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor();\n      cx.shadowColor = 'white';\n      cx.shadowOffsetX = 0;\n      cx.shadowOffsetY = .5;\n\n      cx.beginPath();\n      cx.moveTo(left, top);\n      cx.lineTo(left+dims.w, top);\n      cx.stroke();\n\n  }\n\n   //break down all cells into the various kinds of drawings\n  public drawWeftUnder(top, left, shuttle){\n      //console.log(\"draw under\", top, left);\n      var dims = this.render.getCellDims(\"base\");\n      var warp_shuttle = this.weave.shuttles[this.weave.colShuttleMapping[left]];\n      var cx = this.cx;\n      var view = this.render.getCurrentView();\n\n      if(left  this.weave.warps) return;\n\n      left = (left+1)*dims.w;\n      top =  (top + 1) * dims.h;\n\n      top += dims.h/2\n\n      var warp_width = warp_shuttle.getThickness()/100 * .9*dims.w;\n      var stroke_width = shuttle.getThickness()/100 * .9*dims.h;\n      var margin = (.9*dims.w - warp_width)/2;\n\n      cx.lineWidth = stroke_width;\n      cx.strokeStyle = (view === \"yarn\" && shuttle.type === 0) ? shuttle.getColor()+\"10\" : shuttle.getColor();\n      cx.shadowColor = 'white';\n      cx.shadowOffsetX = 0;\n      cx.shadowOffsetY = .5;\n\n      cx.fillStyle = \"#393939\";\n      cx.fillRect(left, top-dims.h/2, dims.w, dims.h);\n\n      cx.beginPath();\n      cx.moveTo(left, top);\n      cx.lineTo(left+margin, top);\n      cx.stroke();\n  \n      cx.beginPath();\n      cx.moveTo(left+margin+warp_width, top);\n      cx.lineTo(left+dims.w, top);\n      cx.stroke();\n     \n      cx.lineWidth = warp_width;\n      cx.strokeStyle = (view === \"yarn\" && warp_shuttle.type === 0) ? warp_shuttle.getColor()+\"10\" : warp_shuttle.getColor();\n\n      cx.beginPath();\n      cx.moveTo(left+dims/2, top-dims.h/2);\n      cx.lineTo(left+dims/2, top+dims.h/2);\n      cx.stroke();\n\n  }\n\n  //this does not draw on canvas but just rescales the canvas\n  public rescale(){\n  \n    //var dims = this.render.getCellDims(\"base\");\n\n    let dims ={\n      w: this.warpSystemsCanvas.width / this.weave.warps,\n      h: this.weftSystemsCanvas.height / this.weave.visibleRows.length\n    }\n\n    let offset = this.render.getCellDims(\"select\");\n\n    let scroll_left = this.draftContainer.offsetParent.scrollLeft;\n    let scroll_top = this.draftContainer.offsetParent.scrollTop;\n    let draft_width = this.draftContainer.offsetWidth;\n\n    let top = 0;\n    let left = 0;\n\n\n   // var scaleToFit = Math.min(scaleX, scaleY);\n    var scaleToFit = this.render.getZoom() /50;\n  //  var scaleToCover = Math.max(scaleX, scaleY);\n\n\n    if(!this.render.view_frames){\n\n        this.threadingCanvas.height = 0;\n        this.threadingCanvas.width = 0;\n\n        this.treadlingCanvas.height = 0;\n        this.treadlingCanvas.width = 0;\n\n        this.tieupsCanvas.height = 0;\n        this.tieupsCanvas.width = 0;\n\n    }\n\n    \n    if(this.selection.hasSelection()){\n\n        var x = dims.w / 4;\n        var y = dims.h;\n        var anchor = 'start';\n\n        //styling for the text\n        if (this.selection.start.j  v.isUp() ? overs.concat([idx]) : overs, []);\n        }else{\n          overs = row_values.reduce((overs, v, idx) => !v.isUp() ? overs.concat([idx]) : overs, []);\n        }\n\n        for(var o in overs){\n            const shuttle_id = this.weave.colShuttleMapping[overs[o]];\n            const system_id = this.weave.colSystemMapping[overs[o]];\n            if(this.weave.warp_systems[system_id].isVisible()) this.drawWeftUp(i, overs[o], this.weave.shuttles[shuttle_id]);\n        }\n\n    }\n\n\n  }\n\n  \n\n\n  public redrawYarnView(){\n\n    let started:boolean = false;\n\n    for(let i = 0; i  (this.cxThreading.canvas.height)){ \n      this.redrawLoom();\n      return;\n    }\n\n    for(var u in updates.threading){    \n       this.drawCell( this.cxThreading, updates.threading[u].i, updates.threading[u].j, \"threading\");\n    }\n\n   \n    if((this.weave.loom.num_treadles)*dims.w > this.cxTreadling.canvas.width){ \n      this.redrawLoom();\n      return;\n    }\n\n    for(var u in updates.treadling){   \n      this.drawCell( this.cxTreadling, updates.treadling[u].i, updates.treadling[u].j, \"treadling\");\n    }\n\n    for(var u in updates.tieup){\n      for(var j in updates.tieup[u]){\n        this.drawCell( this.cxTieups, updates.tieup[u][j].i, updates.tieup[u][j].j, \"tieup\");\n      }\n    }\n  }\n\n\n\n  public redrawLoom() {\n\n    var base_dims = this.render.getCellDims(\"base\");\n    var front = this.render.isFront();\n\n    this.cxThreading.clearRect(0,0, this.cxThreading.canvas.width, this.cxThreading.canvas.height);\n    this.cxTreadling.clearRect(0,0, this.cxTreadling.canvas.width, this.cxTreadling.canvas.height);\n    this.cxTieups.clearRect(0,0, this.cxTieups.canvas.width, this.cxTieups.canvas.height);\n\n\n    this.cxThreading.canvas.width = base_dims.w * this.weave.loom.threading.length;\n    this.cxThreading.canvas.height = base_dims.h * this.weave.loom.num_frames;\n    if(front) this.drawGrid(this.cxThreading,this.threadingCanvas);\n    else this.drawBlank(this.cxThreading,this.threadingCanvas);\n\n    this.cxTreadling.canvas.width = base_dims.w * this.weave.loom.num_treadles;\n    this.cxTreadling.canvas.height = base_dims.h * this.weave.visibleRows.length;\n    if(front) this.drawGrid(this.cxTreadling,this.treadlingCanvas);\n    else this.drawBlank(this.cxTreadling,this.treadlingCanvas);\n\n    this.cxTieups.canvas.width = base_dims.w * this.weave.loom.tieup[0].length;\n    this.cxTieups.canvas.height = base_dims.h * this.weave.loom.tieup.length;\n    if(front) this.drawGrid(this.cxTieups,this.tieupsCanvas);\n    else this.drawBlank(this.cxTieups,this.tieupsCanvas);\n    \n\n\n    for (var j = 0; j  0 || !schematic) ? c : c+\"10\";\n          cx.shadowColor = 'white';\n          cx.shadowOffsetX = 0.5;\n          cx.shadowOffsetY = 0;\n\n          cx.beginPath();\n          cx.moveTo((x+1)*base_dims.w + center, 0);\n          cx.lineTo((x+1)*base_dims.w + center, base_dims.h*(this.weave.visibleRows.length+2));\n          cx.stroke();\n\n      }\n    }\n  }\n\n\n\n\n\n  /**\n   * Simulates the visual look of the weave pattern.\n   * @extends WeaveDirective\n   * @returns {void}\n   */\n  public redrawVisualView() {\n\n    var base_dims = this.render.getCellDims(\"base\");\n    var back = this.render.view_back;\n\n    this.cx.fillStyle = \"#3d3d3d\";\n    this.cx.fillRect(0,0,this.canvasEl.width,this.canvasEl.height);\n\n    this.drawWarps(this.cx);\n    \n    this.redrawYarnView();\n\n    if(this.render.getCurrentView() === 'visual'){\n      this.drawWarpsOver();\n    }\n\n    this.cx.strokeStyle = \"#000\";\n    this.cx.fillStyle = \"#000\";\n  }\n\n  /**\n   * Resizes and then redraws the canvas on a change to the wefts or warps. \n   * @extends WeaveDirective\n   * @returns {void}\n   */\n  // public updateSize() {\n  //   var base_dims = this.render.getCellDims(\"base\");\n\n  //   // set the updated width and height\n  //   this.canvasEl.width = this.weave.warps * base_dims.h;\n  //   this.canvasEl.height = this.weave.visibleRows.length * base_dims.w;\n  // }\n\n\n\n  public onUndoRedo() {\n\n  }\n\n  /**\n   * Prints the pattern to the console.\n   * @extends WeaveDirective\n   * @param {Array>} pattern - 2D pattern array.\n   * @returns {void}\n   */\n  public printPattern(pattern) {\n    for (var i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DesignmodesService.html":{"url":"injectables/DesignmodesService.html","title":"injectable - DesignmodesService","body":"\n                   \n\n\n\n\n\n  Injectables\n  DesignmodesService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mixer/provider/designmodes.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                            \n                                \n                                        Creates the objects that track which design mode (draw, select, etc) the user is currently working in. \n            \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getMode\n                                \n                            \n            \n                            \n                                \n            getMode(name: string)\n                                \n                            \n            \n                            \n                                \n                                        A function to retreive a mode by name. Only works if modes are nested no more than 1 deep. \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                name\n                                                            \n                                                            \n                                                                the name of the component we're looking to retreive\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     DesignMode\n            \n                                        \n                                            \n                                                the DeisgnMode associated with that name, or null if nothing was found\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     clearSelection\n                                \n                            \n            \n                            \n                                \n            clearSelection()\n                                \n                            \n            \n                            \n                                \n                                        sets false to the selection parameter on all the modes. \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     select\n                                \n                            \n            \n                            \n                                \n            select(name: string)\n                                \n                            \n            \n                            \n                                \n                                        clears previous selections and selects both parent and child mode associated with name\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                name\n                                                            \n                                                            \n                                                                a string corresponding to the name of this mode\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                boolean cooresponding to whether or no a selection was made \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSelected\n                                \n                            \n            \n                            \n                                \n            getSelected()\n                                \n                            \n            \n                            \n                                \n                                        Get the current modes that are selected\n            \n                                        \n                                        \n                                        \n                                            Returns:     DesignMode[]\n            \n                                        \n                                            \n                                                returns the collection of selected modes\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isSelected\n                                \n                            \n            \n                            \n                                \n            isSelected(name: string)\n                                \n                            \n            \n                            \n                                \n                                        checks if a user specified mode is selected\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                name\n                                                            \n                                                            \n                                                                the name of the mode we are asking about\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                boolean describing if it was selected or not\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     selectedHasInkEnabled\n                                \n                            \n            \n                            \n                                \n            selectedHasInkEnabled()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     modes\n                                \n                            \n                            \n                                \n                                    modes:     DesignMode[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     selected\n                                \n                            \n                            \n                                \n                                    selected:     DesignMode[]\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { elementAt } from 'rxjs/operators';\n\ninterface DesignMode{\n  value: string;\n  viewValue: string;\n  icon: string;\n  children: Array;\n  enable_inks: boolean;\n  selected: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DesignmodesService {\n\n\n  modes: Array;\n  selected: Array;\n\n/**\n * Creates the objects that track which design mode (draw, select, etc) the user is currently working in. \n */\n  constructor() { \n\n    this.selected = [];\n\n    const shapes:Array = [\n      {value: 'line', viewValue: 'Line', icon: \"fas fa-slash\", children: [], enable_inks: true, selected: false},\n      {value: 'fill_circle', viewValue: 'Filled Circle', icon: \"fas fa-circle\", children: [], enable_inks: true, selected: false},\n      {value: 'stroke_circle', viewValue: 'Circle Outline', icon: \"far fa-circle\", children: [], enable_inks: true, selected: false},\n      {value: 'fill_rect', viewValue: 'Filled Rectangle', icon: \"fas fa-square\", children: [], enable_inks: true, selected: false},\n      {value: 'stroke_rect', viewValue: 'Rectangle Outline', icon: \"far fa-square\", children: [], enable_inks: true, selected: false},\n      {value: 'free', viewValue: 'Freehand', icon: \"fas fa-draw-polygon\", children: [], enable_inks: true, selected: false},\n    ]\n\n    \n  \n  this.modes = [\n    {value: 'draw', viewValue: 'Draw', icon: \"fas fa-pen\", children: [], enable_inks: true, selected: false},\n    {value: 'shape', viewValue: 'Shape', icon: \"fas fa-shapes\", children: shapes, enable_inks: true, selected: false},\n    {value: 'select', viewValue: 'Merge', icon: \"fas fa-expand\", children: [], enable_inks: false, selected:false},\n    {value: 'move', viewValue: 'Move', icon: \"fas fa-arrows-alt\", children: [], enable_inks: false, selected:false},\n  ];\n\n  this.select('draw');\n\n  console.log(\"selected\", this.selected);\n  \n  }\n\n\n  /**\n   * A function to retreive a mode by name. Only works if modes are nested no more than 1 deep. \n   * @param name the name of the component we're looking to retreive\n   * @returns the DeisgnMode associated with that name, or null if nothing was found\n   */\n\n  getMode(name: string): DesignMode {\n   let found: DesignMode = null;\n\n   this.modes.forEach( mode => {\n      if(mode.value === name) found =  mode;\n      mode.children.forEach(child => {\n        if(child.value === name) found = child;\n      });\n   });\n   return found;\n  }\n\n  /**\n   * sets false to the selection parameter on all the modes. \n   */\n  clearSelection(){\n    this.selected.forEach( mode => {\n      mode.selected = false;\n    });\n    this.selected = [];\n  }\n\n/**\n * clears previous selections and selects both parent and child mode associated with name\n * @param name a string corresponding to the name of this mode\n * @returns boolean cooresponding to whether or no a selection was made \n */\n  select(name: string): boolean{\n\n    let found: boolean = false;\n    this.clearSelection();\n\n    this.modes.forEach( mode => {\n      if(mode.value === name){\n        mode.selected = true;\n        found = true;\n        this.selected.push(mode);\n      } \n      mode.children.forEach(child => {\n        if(child.value === name){\n          mode.selected = true;\n          child.selected = true;\n          found = true;\n          this.selected.push(mode);\n          this.selected.push(child);\n        } \n      });\n   });\n\n   return found;\n  }\n\n\n\n  /**\n   * Get the current modes that are selected\n   * @returns returns the collection of selected modes\n   */\n  getSelected():Array{\n    return this.selected;\n  }\n\n  /**\n   * checks if a user specified mode is selected\n   * @param name the name of the mode we are asking about\n   * @returns boolean describing if it was selected or not\n   */\n  isSelected(name:string):boolean{\n    const found:DesignMode = this.selected.find(el => el.value == name);\n    return (found === undefined) ? false : true;\n  }\n\n  selectedHasInkEnabled():boolean{\n    let enabled:boolean = false;\n    const modes: Array = this.getSelected();\n    modes.forEach(mode =>{\n     enabled = mode.enable_inks;\n    });\n    return enabled;\n  }\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InkService.html":{"url":"injectables/InkService.html","title":"injectable - InkService","body":"\n                   \n\n\n\n\n\n  Injectables\n  InkService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mixer/provider/ink.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getInks\n                                \n                            \n            \n                            \n                                \n            getInks()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Ink[]\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     selectedHasMask\n                                \n                            \n            \n                            \n                                \n            selectedHasMask()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getInk\n                                \n                            \n            \n                            \n                                \n            getInk(name: string)\n                                \n                            \n            \n                            \n                                \n                                        A function to retreive an ink by name. \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                name\n                                                            \n                                                            \n                                                                the name of the ink we're looking to retreive\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     Ink\n            \n                                        \n                                            \n                                                the Ink associated with that name, or null if nothing was found\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     clearSelection\n                                \n                            \n            \n                            \n                                \n            clearSelection()\n                                \n                            \n            \n                            \n                                \n                                        sets false to the selection parameter on all the modes. \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     select\n                                \n                            \n            \n                            \n                                \n            select(name: string)\n                                \n                            \n            \n                            \n                                \n                                        clears previous selections and selects ink associated with name\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                name\n                                                            \n                                                            \n                                                                a string corresponding to the name of this ink\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                boolean cooresponding to whether or not a selection was made \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSelected\n                                \n                            \n            \n                            \n                                \n            getSelected()\n                                \n                            \n            \n                            \n                                \n                                        Get the current ink name that is selected\n            \n                                        \n                                        \n                                        \n                                            Returns:     string\n            \n                                        \n                                            \n                                                returns the selected ink name\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isSelected\n                                \n                            \n            \n                            \n                                \n            isSelected(name: string)\n                                \n                            \n            \n                            \n                                \n                                        checks if a user specified ink is selected\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                name\n                                                            \n                                                            \n                                                                the name of the mode we are asking about\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                boolean describing if it was selected or not\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private inks\n                                \n                            \n                            \n                                \n                                    inks:     Ink[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private selected\n                                \n                            \n                            \n                                \n                                    selected:     Ink\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\n\n\n\ninterface Ink{\n  value: string;\n  viewValue: string;\n  dx: string;\n  icon: string;\n  selected: boolean;\n  uses_mask: boolean;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InkService {\n  private inks: Array;\n  private selected: Ink;\n\n\n  constructor() { \n\n\n    this.inks = [\n      {value: 'neq', viewValue: 'Reversing Ink', dx: \"REVERSING INK compares this pattern with what is underneight and draws black square when they are not equal\", icon: \"fas fa-adjust\", selected: false, uses_mask:false},\n      {value: 'up', viewValue: 'Setting Ink', dx: \"SETTING INK sets this pattern within the draft no matter what is under it\", icon: \"fas fa-square\",  selected: false, uses_mask:false},\n      {value: 'down', viewValue: 'Erasing Ink', dx: \"ERASING INK places all the heddle downs atop the draft underneith it\", icon: \"far fa-square\",  selected: false, uses_mask:false},\n      {value: 'unset', viewValue: 'Removing Ink', dx: \"REMOVING INK removes the use of this heddle in the draft (for shape and inlay weaving)\", icon: \"fas fa-times\", selected: false, uses_mask:false},\n      {value: 'and', viewValue: 'Masking Ink', dx: \"MASKING INK only reveals bottom pattern in areas where this pattern is black\", icon: \"fas fa-mask\", selected: false, uses_mask:true},\n      {value: 'or', viewValue: 'Overlaying Ink', dx: \"OVERLAYING INK copies all black pattern cells atop the draft\", icon: \"fas fa-plus\", selected: false, uses_mask:false}\n    ];\n  \n    this.select('neq');\n\n    \n  \n  }\n\n  getInks():Array{\n    return this.inks;\n  }\n\n  selectedHasMask():boolean{\n    const mode:Ink = this.getInk(this.getSelected());\n    return mode.uses_mask;\n  }\n\n  /**\n   * A function to retreive an ink by name. \n   * @param name the name of the ink we're looking to retreive\n   * @returns the Ink associated with that name, or null if nothing was found\n   */\n\n   getInk(name: string): Ink {\n    let found: Ink = null;\n \n    this.inks.forEach( ink => {\n       if(ink.value === name) found =  ink;\n    });\n    return found;\n   }\n \n   /**\n    * sets false to the selection parameter on all the modes. \n    */\n   clearSelection(){\n     this.selected = null\n   }\n \n /**\n  * clears previous selections and selects ink associated with name\n  * @param name a string corresponding to the name of this ink\n  * @returns boolean cooresponding to whether or not a selection was made \n  */\n   select(name: string): boolean{\n \n     let found: boolean = false;\n     this.clearSelection();\n \n     this.inks.forEach(ink => {\n       if(ink.value === name){\n         ink.selected = true;\n         found = true;\n         this.selected = ink;\n       } else{\n         ink.selected = false;\n       }\n    });\n \n    return found;\n   }\n \n \n   /**\n    * Get the current ink name that is selected\n    * @returns returns the selected ink name\n    */\n   getSelected():string{\n     return this.selected.value;\n   }\n \n   /**\n    * checks if a user specified ink is selected\n    * @param name the name of the mode we are asking about\n    * @returns boolean describing if it was selected or not\n    */\n   isSelected(name:string):boolean{\n     return(name == this.selected.value);\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayersService.html":{"url":"injectables/LayersService.html","title":"injectable - LayersService","body":"\n                   \n\n\n\n\n\n  Injectables\n  LayersService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mixer/provider/layers.service.ts\n        \n\n            \n                Description\n            \n            \n                a service that keeps track of how many elements are on the screen so that newlayers can always be drawn in front\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     createLayer\n                                \n                            \n            \n                            \n                                \n            createLayer()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     number\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     clearLayers\n                                \n                            \n            \n                            \n                                \n            clearLayers()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getFrontLayer\n                                \n                            \n            \n                            \n                                \n            getFrontLayer()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     number\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     count\n                                \n                            \n                            \n                                \n                                    count:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\n\n\n/**\n * a service that keeps track of how many elements are on the screen so that new \n * layers can always be drawn in front\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayersService {\n\n  count: number;\n\n  constructor() {\n    this.count = 0;\n   }\n\n   createLayer(): number{\n     this.count++;\n     return this.count;\n   }\n\n   clearLayers(){\n     this.count = 0;\n   }\n\n  getFrontLayer():number{\n    return this.count;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatternService.html":{"url":"injectables/PatternService.html","title":"injectable - PatternService","body":"\n                   \n\n\n\n\n\n  Injectables\n  PatternService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/provider/pattern.service.ts\n        \n\n            \n                Description\n            \n            \n                Definition of pattern provider.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: HttpClient)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getPatterns\n                                \n                            \n            \n                            \n                                \n            getPatterns()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n/**\n * Definition of pattern provider.\n * @class\n */\n@Injectable()\nexport class PatternService {\n\n  constructor(private http: HttpClient) { }\n\n  getPatterns() {\n    return this.http.get('assets/patterns.json', {observe: 'response'});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/uploads/upload.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(af: AngularFireAuth, db: AngularFireDatabase, st: AngularFireStorage, http: HttpClient, httpClient: HttpClient)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     createImageFromBlob\n                                \n                            \n            \n                            \n                                \n            createImageFromBlob(image: Blob)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     pushUpload\n                                \n                            \n            \n                            \n                                \n            pushUpload(upload: Upload)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getDownloadURL\n                                \n                            \n            \n                            \n                                \n            getDownloadURL(id: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private saveFileData\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    saveFileData(upload: Upload)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteUpload\n                                \n                            \n            \n                            \n                                \n            deleteUpload(upload: Upload)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private deleteFileData\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteFileData(key: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private deleteFileStorage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteFileStorage(name: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private basePath\n                                \n                            \n                            \n                                \n                                    basePath:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: /uploads\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     imageToShow\n                                \n                            \n                            \n                                \n                                    imageToShow:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     uploadProgress\n                                \n                            \n                            \n                                \n                                    uploadProgress:     Observable\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { AngularFireStorage } from 'angularfire2/storage';\nimport { Upload } from './upload';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport * as firebase from 'firebase/app';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n  })\n};\n\n@Injectable()\nexport class UploadService {\n\n  constructor(private af: AngularFireAuth, \n              private db: AngularFireDatabase,\n              private st: AngularFireStorage,\n              private http: HttpClient,\n              private httpClient: HttpClient) { }\n\n  private basePath:string = '/uploads';\n  uploadProgress: Observable;\n  imageToShow: any;\n\n  createImageFromBlob(image: Blob) {\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n       this.imageToShow = reader.result;\n    }, false);\n\n    if (image) {\n       reader.readAsDataURL(image);\n    }\n  }\n\n  pushUpload(upload: Upload) {\n\n    //LD - Right now we're just writing an ID to the database, not sure why\n    const id = Math.random().toString(36).substring(2);\n    let storageRef = this.st.ref(id);\n    let uploadTask = storageRef.put(upload.file);\n\n\n    this.uploadProgress = uploadTask.percentageChanges();\n\n    this.uploadProgress.subscribe((p) => {\n      upload.progress = p;\n    });\n\n    upload.name = id;\n\n    this.saveFileData(upload);\n    return uploadTask.snapshotChanges();\n  }\n\n  getDownloadURL(id) {\n    let storageRef = this.st.ref('');\n    return storageRef.child(id).getDownloadURL();\n  }\n\n\n\n  // Writes the file details to the realtime db\n  private saveFileData(upload: Upload) {\n    // this.db.list(`${this.basePath}/`).push(upload);\n  }\n\n  deleteUpload(upload: Upload) {\n    // this.deleteFileData(upload.$key)\n    // .then( () => {\n    //   this.deleteFileStorage(upload.name)\n    // })\n    // .catch(error => console.log(error))\n  }\n\n  // Deletes the file details from the realtime db\n  private deleteFileData(key: string) {\n    return this.db.list(`${this.basePath}/`).remove(key);\n  }\n\n  // Firebase files must have unique names in their respective storage dir\n  // So the name serves as a unique key\n  private deleteFileStorage(name:string) {\n    // let storageRef = this.st.ref(name);\n    // storageRef.child(`${this.basePath}/${name}`).delete()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\nRoutes\n\n    \n        \n            path\n            pathMatch\n            component\n            redirectTo\n        \n\n        \n            \n                    mixer\n            \n            \n            MixerComponent\n            \n        \n        \n            \n                    weaver\n            \n            \n            WeaverComponent\n            \n        \n\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterPipe.html":{"url":"pipes/FilterPipe.html","title":"pipe - FilterPipe","body":"\n                   \n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/pipe/filter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Creates a filter pipe.\n\n            \n\n            \n                Example\n            \n            \n            \n\n    \n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Creates a filter pipe.\n * @class\n */\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: Array, args?: any): any {\n    let results = [];\n    if (value) {\n      for (let item of value) {\n        if (item) {\n          let found = true;\n          for (let key in args) {\n            let val = args[key];\n\n            if (val != item[key]) {\n              found = false;\n            }\n          }\n\n          if (found) {\n            results.push(item);\n          }\n        }\n      }\n    }\n    return results;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdaCADWeaverPage.html":{"url":"classes/AdaCADWeaverPage.html","title":"class - AdaCADWeaverPage","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  AdaCADWeaverPage\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            e2e/app.po.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     navigateTo\n                                \n                            \n            \n                            \n                                \n            navigateTo()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getParagraphText\n                                \n                            \n            \n                            \n                                \n            getParagraphText()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { browser, by, element } from 'protractor';\n\nexport class AdaCADWeaverPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/cell.ts\n        \n\n            \n                Description\n            \n            \n                Definition of Cell object.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(setting: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                setting\n                                                            \n                                                            \n                                                                describes if the Cell should be set to heddle up or not. Null value leaves cell unset. \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     reloadCell\n                                \n                            \n            \n                            \n                                \n            reloadCell(params: any)\n                                \n                            \n            \n                            \n                                \n                                        this is called from the reload file. it takes a cell in the form of a list of params and sets the variables that are present\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                params\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isSet\n                                \n                            \n            \n                            \n                                \n            isSet()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setHeddleUp\n                                \n                            \n            \n                            \n                                \n            setHeddleUp()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setHeddleDown\n                                \n                            \n            \n                            \n                                \n            setHeddleDown()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setNorth\n                                \n                            \n            \n                            \n                                \n            setNorth()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setEast\n                                \n                            \n            \n                            \n                                \n            setEast()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setNorthSouth\n                                \n                            \n            \n                            \n                                \n            setNorthSouth()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setEastWest\n                                \n                            \n            \n                            \n                                \n            setEastWest()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setSouth\n                                \n                            \n            \n                            \n                                \n            setSouth()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setWest\n                                \n                            \n            \n                            \n                                \n            setWest()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsetNorth\n                                \n                            \n            \n                            \n                                \n            unsetNorth()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsetEast\n                                \n                            \n            \n                            \n                                \n            unsetEast()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsetSouth\n                                \n                            \n            \n                            \n                                \n            unsetSouth()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsetWest\n                                \n                            \n            \n                            \n                                \n            unsetWest()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasNorth\n                                \n                            \n            \n                            \n                                \n            hasNorth()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isEastWest\n                                \n                            \n            \n                            \n                                \n            isEastWest()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isSouthEast\n                                \n                            \n            \n                            \n                                \n            isSouthEast()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isSouthWest\n                                \n                            \n            \n                            \n                                \n            isSouthWest()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isNorthSouth\n                                \n                            \n            \n                            \n                                \n            isNorthSouth()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isNorthEast\n                                \n                            \n            \n                            \n                                \n            isNorthEast()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isNorthWest\n                                \n                            \n            \n                            \n                                \n            isNorthWest()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isWest\n                                \n                            \n            \n                            \n                                \n            isWest()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isEast\n                                \n                            \n            \n                            \n                                \n            isEast()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasEast\n                                \n                            \n            \n                            \n                                \n            hasEast()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasSouth\n                                \n                            \n            \n                            \n                                \n            hasSouth()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasWest\n                                \n                            \n            \n                            \n                                \n            hasWest()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isUp\n                                \n                            \n            \n                            \n                                \n            isUp()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getPoles\n                                \n                            \n            \n                            \n                                \n            getPoles()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getMaskId\n                                \n                            \n            \n                            \n                                \n            getMaskId()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setHeddle\n                                \n                            \n            \n                            \n                                \n            setHeddle(value: boolean)\n                                \n                            \n            \n                            \n                                \n                                        sets the value to true or false. If null, will unset the heddle\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                value\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getHeddle\n                                \n                            \n            \n                            \n                                \n            getHeddle()\n                                \n                            \n            \n                            \n                                \n                                        sets the value to true or false. If null, will unset the heddle\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                value\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     toggleHeddle\n                                \n                            \n            \n                            \n                                \n            toggleHeddle()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setPoles\n                                \n                            \n            \n                            \n                                \n            setPoles(poles: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setMaskId\n                                \n                            \n            \n                            \n                                \n            setMaskId(id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsetMaskId\n                                \n                            \n            \n                            \n                                \n            unsetMaskId()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsetHeddle\n                                \n                            \n            \n                            \n                                \n            unsetHeddle()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsetPoles\n                                \n                            \n            \n                            \n                                \n            unsetPoles()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     is_set\n                                \n                            \n                            \n                                \n                                    is_set:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     is_up\n                                \n                            \n                            \n                                \n                                    is_up:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     mask_id\n                                \n                            \n                            \n                                \n                                    mask_id:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     poles\n                                \n                            \n                            \n                                \n                                    poles:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export class Cell {\n  poles: number;\n  is_up: boolean;\n  is_set: boolean;\n  mask_id: number;\n\n  /**\n   * \n   * @param setting describes if the Cell should be set to heddle up or not. Null value leaves cell unset. \n   */\n  constructor(setting: boolean) {\n\n    this.poles = 0b0000;\n    this.mask_id = -1;\n    if(setting === null || setting === undefined){\n      this.is_set = false;\n      this.is_up = false;\n    } \n    else {\n      this.is_set = true;\n      this.is_up = setting;\n    }\n  }\n\n  /**\n   * this is called from the reload file. it takes a cell in the form of a list of params and sets the variables that are present\n   * @param params \n   */\n  reloadCell(params: any){\n    this.is_up = (params.is_up === undefined) ? false : params.is_up;\n    this.is_set = (params.is_set === undefined) ? false : params.is_set;\n    this.mask_id = (params.mask_id === undefined) ? false : params.mask_id;\n    this.poles = (params.poles === undefined) ? 0 : params.poles;\n\n  }\n\n\n  \n  isSet(){\n    return this.is_set;\n  }\n\n  setHeddleUp(){\n    this.is_up = true;\n    this.is_set = true;\n  }\n\n  setHeddleDown(){\n     this.is_set = true;\n     this.is_up = false;\n  }\n\n  setNorth(){\n    this.poles = this.poles | 0b1000;\n  }\n\n  setEast(){\n    this.poles = this.poles | 0b0100;\n\n  }\n\n  setNorthSouth(){\n    this.setNorth();\n    this.setSouth();\n  }\n\n  setEastWest(){\n    this.setEast();\n    this.setWest();\n  }\n\n  setSouth(){\n    this.poles = this.poles | 0b0010;\n  }\n\n  setWest(){\n    this.poles = this.poles | 0b0001;\n  }\n\n  unsetNorth(){\n    this.poles = this.poles ^ 0b1000;\n  }\n\n  unsetEast(){\n    this.poles = this.poles ^ 0b0100;\n\n  }\n\n  unsetSouth(){\n    this.poles = this.poles ^ 0b0010;\n  }\n\n  unsetWest(){\n    this.poles = this.poles ^ 0b0001;\n  }\n\n\n  hasNorth():boolean{\n    let p:number = this.poles >>> 3;\n    return(p === 1);\n  }\n\n  isEastWest():boolean{\n    return (this.poles & 0b0101) === 0b0101;\n  }\n\n  isSouthEast():boolean{\n    return (this.poles & 0b0110) === 0b0110;\n  }\n\n  isSouthWest():boolean{\n    return (this.poles & 0b0011) === 0b0011;\n  }\n\n  isNorthSouth():boolean{\n    return (this.poles & 0b1010) === 0b1010;\n  }\n\n  isNorthEast():boolean{\n    return (this.poles & 0b1100) === 0b1100;\n  }\n\n  isNorthWest():boolean{\n    return (this.poles & 0b1001) === 0b1001;\n  }\n\n  isWest():boolean{\n    return (this.poles & 0b0001) === 0b0001;\n  }\n\n  isEast():boolean{\n    return (this.poles & 0b0100) === 0b0100;\n  }\n\n  hasEast():boolean{\n    let p:number = this.poles >>> 2;\n    return((p %2)===1);\n  }\n\n  hasSouth():boolean{\n    let p:number = this.poles >>> 1;\n    return((p %2)===1);\n  }\n\n  hasWest():boolean{\n    return((this.poles %2)===1);\n  }\n\n  isUp():boolean{\n    return this.is_up;\n  }\n\n  getPoles(){\n    return this.poles;\n  }\n\n  getMaskId(){\n    return this.mask_id;\n  }\n\n  /**\n   * sets the value to true or false. If null, will unset the heddle\n   * @param value \n   */\n  setHeddle(value:boolean){\n    if(value === null){\n      this.is_up = false;\n      this.is_set = false;\n    }else{\n      this.is_up = value;\n      this.is_set = true;\n    }\n  }\n\n    /**\n   * sets the value to true or false. If null, will unset the heddle\n   * @param value \n   */\n     getHeddle():boolean{\n       if(this.is_set){\n        return this.is_up;\n       }\n       return null;\n      \n    }\n\n  toggleHeddle(){\n    if(!this.is_set){\n      this.is_set = true;\n      this.is_up = true;\n    }else{\n      this.is_up = !this.is_up;\n    }\n  }\n\n  setPoles(poles:number){\n    this.poles = poles;\n  }\n\n  setMaskId(id: number){\n    this.mask_id = id;\n  }\n\n  unsetMaskId(){\n    this.mask_id = -1;\n  }\n\n  unsetHeddle(){\n    this.is_up = false;\n    this.is_set = false;\n  }\n\n  unsetPoles(){\n    this.poles = 0b0000;\n  }\n\n\n\n  \n  \n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Connection.html":{"url":"classes/Connection.html","title":"class - Connection","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Connection\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weaver/modal/connection/connection.modal.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     x\n                                \n                            \n                            \n                                \n                                    x:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     y\n                                \n                            \n                            \n                                \n                                    y:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\nexport class Point {\n  x: number;\n  y: number;\n}\n\nclass Connection {\n  start: Point;\n  end: Point;\n  shuttleId: number;\n}\n\n@Component({\n  selector: 'app-connection',\n  templateUrl: './connection.modal.html',\n  styleUrls: ['./connection.modal.scss']\n})\nexport class ConnectionModal implements OnInit {\n  connection: Connection = new Connection();\n  shuttles: any;\n\n  constructor(private dialogRef: MatDialogRef,\n             @Inject(MAT_DIALOG_DATA) private data: any) { }\n\n  ngOnInit() {\n    this.connection.start = new Point();\n    this.connection.end = new Point();\n    this.shuttles = this.data.shuttles;\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  save() {\n    this.dialogRef.close(this.connection);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Draft.html":{"url":"classes/Draft.html","title":"class - Draft","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Draft\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/draft.ts\n        \n\n            \n                Description\n            \n            \n                Definition and implementation of draft object.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(undefined: { [x: string]: any; })\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     reload\n                                \n                            \n            \n                            \n                                \n            reload(undefined: { [x: string]: any; })\n                                \n                            \n            \n                            \n                                \n                                        a method to import the parameters from one draft into anotherused when we need to maintain the id of a parent draft, but load new values\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                param0\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     reloadForMixer\n                                \n                            \n            \n                            \n                                \n            reloadForMixer(undefined: { [x: string]: any; })\n                                \n                            \n            \n                            \n                                \n                                        reload for mixer runs when updating drafts on moves and is scaled down to its most limited functionalityto ensure speed\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                param0\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     makeRandomPattern\n                                \n                            \n            \n                            \n                                \n            makeRandomPattern(w: number, h: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     recomputeWidth\n                                \n                            \n            \n                            \n                                \n            recomputeWidth()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasCell\n                                \n                            \n            \n                            \n                                \n            hasCell(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isUp\n                                \n                            \n            \n                            \n                                \n            isUp(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isSet\n                                \n                            \n            \n                            \n                                \n            isSet(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateWarpSystemsFromPattern\n                                \n                            \n            \n                            \n                                \n            updateWarpSystemsFromPattern(pattern: number[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateWeftSystemsFromPattern\n                                \n                            \n            \n                            \n                                \n            updateWeftSystemsFromPattern(pattern: number[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateWeftShuttlesFromPattern\n                                \n                            \n            \n                            \n                                \n            updateWeftShuttlesFromPattern(pattern: number[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateWarpShuttlesFromPattern\n                                \n                            \n            \n                            \n                                \n            updateWarpShuttlesFromPattern(pattern: number[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isMask\n                                \n                            \n            \n                            \n                                \n            isMask(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setMask\n                                \n                            \n            \n                            \n                                \n            setMask(i: number, j: number, bool: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setHeddle\n                                \n                            \n            \n                            \n                                \n            setHeddle(i: number, j: number, bool: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     rowToSystem\n                                \n                            \n            \n                            \n                                \n            rowToSystem(screen_row: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     rowToShuttle\n                                \n                            \n            \n                            \n                                \n            rowToShuttle(screen_row: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     colToSystem\n                                \n                            \n            \n                            \n                                \n            colToSystem(col: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     colToShuttle\n                                \n                            \n            \n                            \n                                \n            colToShuttle(col: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateVisible\n                                \n                            \n            \n                            \n                                \n            updateVisible()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addLabel\n                                \n                            \n            \n                            \n                                \n            addLabel(row: number, label: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createConnection\n                                \n                            \n            \n                            \n                                \n            createConnection(shuttle: Shuttle, line: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteConnection\n                                \n                            \n            \n                            \n                                \n            deleteConnection(lineId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     trimUnsetRows\n                                \n                            \n            \n                            \n                                \n            trimUnsetRows()\n                                \n                            \n            \n                            \n                                \n                                        removes any boundary rows that are unset\n            \n                                        \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     trimUnsetCols\n                                \n                            \n            \n                            \n                                \n            trimUnsetCols()\n                                \n                            \n            \n                            \n                                \n                                        removes any boundary cols that are unset\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteNRowsFromFront\n                                \n                            \n            \n                            \n                                \n            deleteNRowsFromFront(n: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteNRowsFromBack\n                                \n                            \n            \n                            \n                                \n            deleteNRowsFromBack(n: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     insertRows\n                                \n                            \n            \n                            \n                                \n            insertRows(amount: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     insertRow\n                                \n                            \n            \n                            \n                                \n            insertRow(i: number, shuttleId: number, systemId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cloneRow\n                                \n                            \n            \n                            \n                                \n            cloneRow(i: number, c: number, shuttleId: number, systemId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteRow\n                                \n                            \n            \n                            \n                                \n            deleteRow(i: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     insertSingleRow\n                                \n                            \n            \n                            \n                                \n            insertSingleRow(si: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteSingleRow\n                                \n                            \n            \n                            \n                                \n            deleteSingleRow(si: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteRows\n                                \n                            \n            \n                            \n                                \n            deleteRows(amount: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     insertCol\n                                \n                            \n            \n                            \n                                \n            insertCol(i: number, shuttleId: number, systemId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     cloneCol\n                                \n                            \n            \n                            \n                                \n            cloneCol(i: number, shuttleId: number, systemId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteCol\n                                \n                            \n            \n                            \n                                \n            deleteCol(i: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addShuttle\n                                \n                            \n            \n                            \n                                \n            addShuttle(shuttle: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addWeftSystem\n                                \n                            \n            \n                            \n                                \n            addWeftSystem(system: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addWarpSystem\n                                \n                            \n            \n                            \n                                \n            addWarpSystem(system: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getWeftSystemCode\n                                \n                            \n            \n                            \n                                \n            getWeftSystemCode(index: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getWarpSystemCode\n                                \n                            \n            \n                            \n                                \n            getWarpSystemCode(index: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getColor\n                                \n                            \n            \n                            \n                                \n            getColor(index: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getColorCol\n                                \n                            \n            \n                            \n                                \n            getColorCol(index: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateDraftFromThreading\n                                \n                            \n            \n                            \n                                \n            updateDraftFromThreading(updates: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateDraftFromTreadling\n                                \n                            \n            \n                            \n                                \n            updateDraftFromTreadling(updates: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateDraftFromTieup\n                                \n                            \n            \n                            \n                                \n            updateDraftFromTieup(updates: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     recalculateDraft\n                                \n                            \n            \n                            \n                                \n            recalculateDraft(tieup: any, treadling: any, threading: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getDirection\n                                \n                            \n            \n                            \n                                \n            getDirection(neighbors: number, is_up: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updatePoles\n                                \n                            \n            \n                            \n                                \n            updatePoles(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     pingNeighbors\n                                \n                            \n            \n                            \n                                \n            pingNeighbors(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     number\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasWestNeighbor\n                                \n                            \n            \n                            \n                                \n            hasWestNeighbor(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setWestNeighbors\n                                \n                            \n            \n                            \n                                \n            setWestNeighbors(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsetWestNeighbors\n                                \n                            \n            \n                            \n                                \n            unsetWestNeighbors(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasEastNeighbor\n                                \n                            \n            \n                            \n                                \n            hasEastNeighbor(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setEastNeighbors\n                                \n                            \n            \n                            \n                                \n            setEastNeighbors(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsetEastNeighbors\n                                \n                            \n            \n                            \n                                \n            unsetEastNeighbors(i: number, j: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasNorthNeighbor\n                                \n                            \n            \n                            \n                                \n            hasNorthNeighbor(i: number, j: number, shuttle_id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setNorthNeighbors\n                                \n                            \n            \n                            \n                                \n            setNorthNeighbors(i: number, j: number, shuttle_id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasSouthNeighbor\n                                \n                            \n            \n                            \n                                \n            hasSouthNeighbor(i: number, j: number, shuttle_id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     recomputeLoom\n                                \n                            \n            \n                            \n                                \n            recomputeLoom()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateSystemVisibility\n                                \n                            \n            \n                            \n                                \n            updateSystemVisibility(type: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setNorthSouth\n                                \n                            \n            \n                            \n                                \n            setNorthSouth(row: number, i: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setEastWest\n                                \n                            \n            \n                            \n                                \n            setEastWest(row: number, i: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setSouth\n                                \n                            \n            \n                            \n                                \n            setSouth(row: number, i: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setNorth\n                                \n                            \n            \n                            \n                                \n            setNorth(row: number, i: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setEast\n                                \n                            \n            \n                            \n                                \n            setEast(row: number, i: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setWest\n                                \n                            \n            \n                            \n                                \n            setWest(row: number, i: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getNextPath\n                                \n                            \n            \n                            \n                                \n            getNextPath(paths: any, i: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     computeYarnPaths\n                                \n                            \n            \n                            \n                                \n            computeYarnPaths()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public fillArea\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    fillArea(selection: Selection, pattern: Pattern, type: string)\n                                \n                            \n            \n                            \n                                \n                                        Fills in selected area of canvas. Updates the pattern within selection.- the pattern used to fill the area.- the type of logic used to fill selected area.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                selection\n                                                                    :     Selection\n            \n                                                            \n                                                            \n                                                                \n            defined user selected area to fill.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public fill\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    fill(pattern: Cell[][], type: string)\n                                \n                            \n            \n                            \n                                \n                                        Fills in the entire draft- the pattern used to fill the area.- the type of logic used to fill selected area.\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private updateLoomFromDraft\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updateLoomFromDraft(currentPos: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     colShuttleMapping\n                                \n                            \n                            \n                                \n                                    colShuttleMapping:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     colShuttlePattern\n                                \n                            \n                            \n                                \n                                    colShuttlePattern:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     colSystemMapping\n                                \n                            \n                            \n                                \n                                    colSystemMapping:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     colSystemPattern\n                                \n                            \n                            \n                                \n                                    colSystemPattern:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     connections\n                                \n                            \n                            \n                                \n                                    connections:     any[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     epi\n                                \n                            \n                            \n                                \n                                    epi:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     id\n                                \n                            \n                            \n                                \n                                    id:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     labels\n                                \n                            \n                            \n                                \n                                    labels:     any[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     loom\n                                \n                            \n                            \n                                \n                                    loom:     Loom\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     masks\n                                \n                            \n                            \n                                \n                                    masks:     String[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     notes\n                                \n                            \n                            \n                                \n                                    notes:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     pattern\n                                \n                            \n                            \n                                \n                                    pattern:     Cell[][]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     patterns\n                                \n                            \n                            \n                                \n                                    patterns:     Pattern[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     rowShuttleMapping\n                                \n                            \n                            \n                                \n                                    rowShuttleMapping:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     rowShuttlePattern\n                                \n                            \n                            \n                                \n                                    rowShuttlePattern:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     rowSystemMapping\n                                \n                            \n                            \n                                \n                                    rowSystemMapping:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     rowSystemPattern\n                                \n                            \n                            \n                                \n                                    rowSystemPattern:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     shuttles\n                                \n                            \n                            \n                                \n                                    shuttles:     Shuttle[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     units\n                                \n                            \n                            \n                                \n                                    units:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     visibleRows\n                                \n                            \n                            \n                                \n                                    visibleRows:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     warp_systems\n                                \n                            \n                            \n                                \n                                    warp_systems:     System[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     warps\n                                \n                            \n                            \n                                \n                                    warps:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     weft_systems\n                                \n                            \n                            \n                                \n                                    weft_systems:     System[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     wefts\n                                \n                            \n                            \n                                \n                                    wefts:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     width\n                                \n                            \n                            \n                                \n                                    width:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Shuttle } from './shuttle';\nimport { System } from './system';\nimport { Loom } from './loom';\nimport { Cell } from './cell';\nimport { Pattern } from './pattern';\nimport { Selection } from '../../weaver/model/selection';\nimport { Point, Interlacement } from './datatypes';\n\nimport * as _ from 'lodash';\n\n/**\n * Definition of draft interface.\n * @interface inteface to a draft object\n */\nexport interface DraftInterface {\n\n  id: number;\n  name: string;\n  notes: string;\n\n  pattern: Array>; // the single design pattern\n  shuttles: Array;    //the shuttles used in this draft \n  \n  //tracks stores row/col index, shuttle index\n  rowShuttleMapping: Array;\n  colShuttleMapping: Array;  \n  rowShuttlePattern: Array;\n  colShuttlePattern: Array;\n\n  rowSystemMapping: Array;\n  colSystemMapping: Array;\n  rowSystemPattern: Array;\n  colSystemPattern: Array;\n\n  visibleRows: Array; //this seems to be something that can belong to the renderer\n  patterns: Array; //the collection of smaller subpatterns from the pattern bar \n \n  masks: Array; //associates a mask id with a name\n  \n  weft_systems: Array; //weft-systems\n  warp_systems: Array; //warp-systems\n\n\n  connections: Array;\n  labels: Array;\n  \n  wefts: number;\n  warps: number;\n  width: number;\n  epi: number;\n  units: string;\n  loom: Loom;\n\n\n}\n\n/**\n * Definition and implementation of draft object.\n * @class stores the draft \n * @param a user defined for this draft used for saving\n * @param a unique id for this draft\n */\nexport class Draft implements DraftInterface {\n  name: string;\n  id: number;\n\n  pattern: Array>; // the single design pattern\n  shuttles: Array;    //the shuttles used in this draft \n  notes: string;\n\n  //tracks stores row/col index, shuttle index\n  rowShuttleMapping: Array;\n  colShuttleMapping: Array;  \n  rowShuttlePattern: Array;\n  colShuttlePattern: Array;\n  \n  //tracks stores row/col index with the system index\n  rowSystemMapping: Array;\n  colSystemMapping: Array;\n  rowSystemPattern: Array; //stores a pattern used for rows\n  colSystemPattern: Array; //stores a pattern of ids of cols\n\n  visibleRows: Array;\n\n  patterns: Array; //the collection of smaller subpatterns from the pattern bar \n  masks: Array; //associates a mask id with a name\n  \n  weft_systems: Array; //weft-systems\n  warp_systems: Array; //warp-systems\n\n  // rowMaterialMap: Array;\n  // colMaterialMap: Array;\n\n\n  connections: Array;\n  labels: Array;\n  \n  wefts: number;\n  warps: number;\n  width: number;\n  epi: number;\n  units: string;\n  loom: Loom;\n\n  constructor({...params}) {\n    this.id = Date.now();\n\n    this.name = (params.name === undefined) ?  'adacad-draft' : params.name;\n    this.wefts = (params.wefts === undefined) ?  8 : params.wefts;\n    this.warps = (params.warps === undefined) ? 8 : params.warps;\n    this.epi = (params.epi === undefined) ? 10 : params.epi;\n    this.units = (params.units === undefined) ? \"in\" : params.units;\n    this.visibleRows = (params.visibleRows === undefined) ? [] : params.visibleRows;\n    this.pattern = (params.pattern === undefined) ? [] : params.pattern;\n    this.connections = (params.connections === undefined)? [] : params.connections;\n    this.labels = (params.labels === undefined)? [] : params.labels;\n    this.masks = (params.masks === undefined)? [] : params.masks;\n    this.notes = (params.notes === undefined)? \"\" : params.notes;\n\n\n\n    if(params.loom === undefined) {\n      this.loom = new Loom('frame', this.wefts, this.warps, 8, 10);\n\n    } else {\n\n      this.loom = new Loom(params.loom.type, this.wefts, this.warps, params.loom.num_frames, params.loom.num_treadles);\n      if(params.loom.threading != undefined) this.loom.threading = params.loom.threading;\n      if(params.loom.tieup != undefined) this.loom.tieup = params.loom.tieup;\n      if(params.loom.treadling != undefined) this.loom.treadling = params.loom.treadling;\n    }\n\n  \n\n    //nothing has been added, load with 2 mateials and 1 shuttle on each material\n    if(params.shuttles === undefined){\n\n      const randomColor = Math.floor(Math.random()*16777215).toString(16);\n\n      let s0 = new Shuttle({id: 0, name: 'Color 1', type: 0,  thickness:50, color: '#333333', visible: true, insert:false, notes: \"\"});\n      let s1 = new Shuttle({id: 1, name: 'Color 2', type: 0, thickness:50, color: '#'+randomColor, visible:true, insert:false, notes: \"\"});\n      let s2 = new Shuttle({id: 2, name: 'Conductive', type: 1, thickness:50, color: '#61c97d', visible:true, insert:false, notes: \"\"});\n      this.shuttles = [s0, s1, s2];\n\n    }else{\n\n      var shuttles = params.shuttles\n      var sd = [];\n      for (var i in shuttles) {\n        var s = new Shuttle(shuttles[i]);\n        sd.push(s);\n      }\n      this.shuttles = sd;\n    }\n\n\n    //automatically create 4\n    if(params.warp_systems === undefined){\n\n      let s0 = new System({id: 0, name: 'Warp System 1', visible: true, notes: \"\"});\n      let s1 = new System({id: 1, name: 'Warp System 2', visible: true, notes: \"\"});\n      let s2 = new System({id: 2, name: 'Warp System 3', visible: true, notes: \"\"});\n      let s3 = new System({id: 3, name: 'Warp System 4', visible: true, notes: \"\"});\n      this.warp_systems = [s0, s1, s2, s3];\n    }else{\n      var systems = params.warp_systems\n          var sd = [];\n          for (var i in systems) {\n            var sys = new System(systems[i]);\n            sd.push(sys);\n          }\n        this.warp_systems = sd;\n      \n      while(this.warp_systems.length  = patterns[i];\n            const formatted: Pattern = new Pattern(single_pattern); \n            pts.push(formatted);\n          }\n        this.patterns = pts;\n    }\n\n\n    //turn this off for now\n   // var fill_pattern = this.makeRandomPattern(this.loom.num_frames, this.loom.num_treadles);\n\n    this.pattern = [];\n    for(var ii = 0; ii  = [];\n          for (i in patterns) {\n            pts.push(new Pattern(patterns[i]));\n          }\n        this.patterns = pts;\n    } else if (params.loom.threading !== undefined && params.loom.treadling !== undefined && params.loom.tieup !== undefined) {\n      this.recalculateDraft(params.loom.tieup, params.loom.treadling, params.loom.threading);\n    }\n\n\n\n  \n    this.pattern = [];\n    for(var ii = 0; ii >();\n      for(var i = 0; i  this.wefts) return false;\n    if(j  this.warps) return false;\n    return true;\n  }\n  //assumes i is the draft row\n  isUp(i:number, j:number) : boolean{\n    if ( i > -1 && i  -1 && j  -1 && i  -1 && j ){\n\n    //repopulate the system map\n    this.colSystemPattern = [];\n    for(let i = 0; i ){\n\n    //repopulate the system map\n    this.rowSystemPattern = [];\n    for(let i = 0; i ){\n\n    //repopulate the system map\n    this.rowShuttlePattern = []\n    for(let i = 0; i ){\n\n    //repopulate the system map\n    this.colShuttlePattern = []\n    for(let i = 0; i  -1 && i  -1 && j  = [];\n    const to_delete: Array = [];\n\n    //make a list of rows that contains the number of set cells\n    this.pattern.forEach(row => {\n      const active_cells: Array = row.filter(cell => (cell.isSet()));\n      rowmap.push(active_cells.length);\n    });\n\n    console.log(\"row map\", rowmap);\n\n    let delete_top: number = 0;\n    let top_hasvalue: boolean = false;\n    \n    //scan from top and bottom to see how many rows we shoudl delete\n    for(let ndx = 0; ndx = 0; ndx--){\n      if(rowmap[ndx] == 0 && !bottom_hasvalue){\n        delete_bottom++;\n      }else{\n        bottom_hasvalue = true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * removes any boundary cols that are unset\n   * @return returns true if it deleted all the cols\n   */\n  trimUnsetCols(){\n    return false;\n  }\n\n  deleteNRowsFromFront(n: number) {\n      this.wefts -= n;\n      this.rowShuttleMapping.splice(0, n);\n      this.rowSystemMapping.splice(0, n);\n      this.pattern.splice(0, n);\n      //this.mask.splice(i, n);\n      this.loom.treadling.splice(0,n);\n      this.updateVisible();\n  }\n\n  deleteNRowsFromBack(n: number) {\n    this.wefts -= n;\n    this.rowShuttleMapping.splice(-n, n);\n    this.rowSystemMapping.splice(-n, n);\n    this.pattern.splice(-n, n);\n    //this.mask.splice(i, n);\n    this.loom.treadling.splice(-n,n);\n    this.updateVisible();\n}\n  \n\n    //insert a number of rows after the one shown at screen index si\n  insertRows(amount: number) {\n    \n    var row = [];\n    for(var i = 0; i  index) {\n  //       c.start.y += offset;\n  //     }\n  //     if (c.end.y > index) {\n  //       c.end.y += offset;\n  //     }\n  //   }\n  // }\n\n\n\n  // splicePatternCol(i: number, n:number, val:any){\n  //   for(var i = 0; i  0; i--) {\n  //     var idx = Math.min(max, i);\n  //     this.rowShuttleMapping.splice(idx,0,shuttle.id);\n  //     this.mask.splice(idx,0,data[i - 1]);\n  //   }\n  // }\n\n\n  getWeftSystemCode(index) {\n    var row = this.visibleRows[index];\n    var id = this.rowSystemMapping[row];\n    var system = this.weft_systems[id];\n\n    return String.fromCharCode(97 + system.id);\n  }\n\n  getWarpSystemCode(index) {\n\n     var col = this.colSystemMapping[index];\n     var system = this.warp_systems[col];\n\n    return  String.fromCharCode(97 + system.id);\n  }\n\n\n  getColor(index) {\n    var row = this.visibleRows[index];\n    var id = this.rowShuttleMapping[row];\n    var shuttle = this.shuttles[id];\n\n    return shuttle.color;\n  }\n\n  getColorCol(index) {\n\n\n    var col = this.colShuttleMapping[index];\n    var shuttle = this.shuttles[col];\n\n    return shuttle.color;\n  }\n\n/***\n   * updates the draft based on changes that happened within the threading.\n   * @param update{i: threading frame, j: threading warp, val: true or false for setting}\n   * more than one update object may be sent in the case where a thread is switching from one frame to another\n   * @returns (nothing) in the future - this can return the specific points to update on the draft\n   */  \n  updateDraftFromThreading(updates){\n\n    for(var u in updates){\n\n      if(updates[u].i !== undefined){\n\n        var idxs = this.loom.getAffectedDrawdownPoints({warp: updates[u].j, frame: updates[u].i});\n        var conflicts = [];\n\n        for(var i = 0; i = 0; ndx--){\n        if(this.pattern[i][ndx].isUp()) return true;\n      }\n      return false;\n  }\n\n\n  /***\n  If this doesn't have east set, then there is nothing to the west\n  */\n  setWestNeighbors(i:number, j:number){\n\n      for(var ndx = j-1; ndx >= 0; ndx--){\n        this.pattern[i][ndx].setEast();\n        if(this.pattern[i][ndx].isUp()) return;\n      }\n\n      return;\n  }\n\n  unsetWestNeighbors(i:number, j:number){\n\n      //there is something else for the western cells to reference\n      if(this.hasEastNeighbor(i,j)) return; \n\n      //unset until you find the next set cell\n      for(var ndx = j-1; ndx >= 0; ndx--){\n        this.pattern[i][ndx].unsetEast(); \n        if(this.pattern[i][ndx].isUp()) return;\n      }\n\n      return;\n  }\n\n\n  //searches to the east (on this row only) for an interlacement\n  hasEastNeighbor(i:number, j:number): boolean{\n      \n      for(var ndx = j+1; ndx = 0; ndx--){\n        if(this.rowShuttleMapping[ndx] === shuttle_id){\n          if(this.pattern[ndx][j].isUp()) return true;\n          if(this.hasWestNeighbor(ndx,j)) return true;\n          if(this.hasEastNeighbor(ndx,j)) return true;\n        }\n      }\n      return false;\n  }\n\n  //searches rows to the north for any interlacement on the same shuttle\n  setNorthNeighbors(i:number, j:number, shuttle_id: number): boolean{\n      var c: Cell;\n\n      for(var ndx = i-1; ndx >= 0; ndx--){\n        if(this.rowShuttleMapping[ndx] === shuttle_id){\n          \n             \n\n          for(var col = 0; col  0 && i  0 && i  0 && i  0 && i  0 && i  0 && i  v === shuttle.id ? acc.concat([idx]) : acc, []);\n\n      //screen rows are reversed to go from bottom to top\n      //[row index] -> (indexes where there is interlacement)\n      let path = [];\n      for (var i = 0; i  v.isUp() ? overs.concat([idx]) : overs, []);\n\n        //only push the rows with at least one interlacement     \n        if(overs.length > 0 && overs.length  = path[k].overs; \n\n        let next_path = this.getNextPath(path, k);\n\n        let min_ndx:number = overs.shift();\n        let max_ndx:number = overs.pop();\n        \n        let next_min_ndx:number;\n        let next_max_ndx:number;\n        \n        if(next_path.row !== -1 ){\n         \n          next_max_ndx = next_path.overs[next_path.overs.length-1];\n          next_min_ndx = next_path.overs[0];\n\n        }else{\n          next_min_ndx = min_ndx;\n          next_max_ndx = max_ndx;\n        }  \n\n\n\n        let moving_left:boolean = (k%2 === 0 && shuttle.insert) || (k%2 !== 0 && !shuttle.insert);\n\n        if(moving_left){\n          if(started) max_ndx = Math.max(max_ndx, last.ndx);\n          min_ndx = Math.min(min_ndx, next_min_ndx);\n        } else {\n          max_ndx = Math.max(max_ndx, next_max_ndx);\n          if(started) min_ndx = Math.min(min_ndx, last.ndx);\n\n        }\n       \n        //draw upwards if required\n        if(started){\n\n          \n         // console.log(\"row/last.row\", row, last.row);\n          // for(let j = last.row-1; j > row; j--){\n          //  if(moving_left) this.setNorthSouth(j, last.ndx+1);\n          //  else this.setNorthSouth(j, last.ndx-1);\n          // }\n        }\n\n        //set by lookiing at the ends ends\n        if(moving_left){\n\n          if(started){\n             this.setSouth(row,max_ndx+1); //set where it came from\n          } \n          \n          this.setWest(row, max_ndx+1);\n\n          this.setNorth(row, min_ndx-1);\n          this.setEast(row, min_ndx-1);\n\n          last.ndx = min_ndx;\n\n        }else{\n\n          if(started){\n            this.setSouth(row, min_ndx-1);\n          }\n\n          this.setEast(row, min_ndx-1);\n          \n          this.setNorth(row, max_ndx+1);\n          this.setWest(row, max_ndx+1);\n          \n          last.ndx = max_ndx;\n\n        } \n\n        //set in between\n        for(i = min_ndx; i >} - the pattern used to fill the area.\n   * @param {string} - the type of logic used to fill selected area.\n   * @returns {void}\n   */\n  public fillArea(\n    selection: Selection, \n    pattern: Pattern, \n    type: string\n  ) {\n\n    console.log(\"fill area called\");\n    console.log(selection, pattern, type);\n\n    var updates = [];\n    \n    var screen_i = Math.min(selection.start.si, selection.end.si)\n    const draft_j = Math.min(selection.start.j, selection.end.j);\n  \n    const rows = pattern.height;\n    const cols = pattern.width;\n\n    var w,h;\n\n    w = Math.ceil(selection.width);\n    h = Math.ceil(selection.height);\n\n\n    if(selection.target.id === \"warp-systems\"){\n      h = pattern.height;\n      screen_i = 0;\n    } \n    if(selection.target.id === \"weft-systems\"){\n      w = pattern.width;\n    } \n\n    if(selection.target.id === \"warp-materials\"){\n       h = pattern.height;\n       screen_i = 0;\n    }\n    if(selection.target.id === \"weft-materials\"){\n      w = pattern.width;\n    } \n\n    //cycle through each visible row/column of the selection\n    for (var i = 0; i >} - the pattern used to fill the area.\n   * @param {string} - the type of logic used to fill selected area.\n   * @returns {void}\n   */\n    public fill(\n      pattern: Array>, \n      type: string\n    ) {\n  \n      \n      const rows = pattern.length;\n      const cols = pattern[0].length;\n  \n      var w,h;\n  \n      w = this.warps;\n      h = this.wefts;\n  \n  \n      //cycle through each visible row/column of the draft\n      for (var i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Loom.html":{"url":"classes/Loom.html","title":"class - Loom","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Loom\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/loom.ts\n        \n\n            \n                Description\n            \n            \n                The Loom class stores the threading, tieup, and treadling informatino for a given draft.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(type: string, wefts: number, warps: number, frames: number, treadles: number)\n                                \n                            \n            \n                            \n                                \n                                        constructs a new loom object\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                type\n                                                            \n                                                            \n                                                                current handled types are 'frame' and 'jacquard'\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                wefts\n                                                            \n                                                            \n                                                                number of wefts of the drawdown\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                warps\n                                                            \n                                                            \n                                                                number of warps in the drawdown\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                frames\n                                                            \n                                                            \n                                                                the number of frames available in this loom\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                treadles\n                                                            \n                                                            \n                                                                the number of treadles available in this loom\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     loadNew\n                                \n                            \n            \n                            \n                                \n            loadNew(type: string, wefts: number, warps: number, frames: number, treadles: number)\n                                \n                            \n            \n                            \n                                \n                                        loads a new set of data into this existing loom object\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                type\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                wefts\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                warps\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                frames\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                treadles\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setMinFrames\n                                \n                            \n            \n                            \n                                \n            setMinFrames(frames: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setMinTreadles\n                                \n                            \n            \n                            \n                                \n            setMinTreadles(treadles: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateTieupSize\n                                \n                            \n            \n                            \n                                \n            updateTieupSize()\n                                \n                            \n            \n                            \n                                \n                                        scans the current frames and treadles for unused and updates the size accordingly\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     resetFrameMapping\n                                \n                            \n            \n                            \n                                \n            resetFrameMapping(frames: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     clearAllData\n                                \n                            \n            \n                            \n                                \n            clearAllData(warps: number, wefts: number)\n                                \n                            \n            \n                            \n                                \n                                        clears all the data in this object, resets to sizes described by warps and wefts\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                warps\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                wefts\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     resetThreading\n                                \n                            \n            \n                            \n                                \n            resetThreading(warps: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     resetTieup\n                                \n                            \n            \n                            \n                                \n            resetTieup(frames: number, treadles: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     resetTreadling\n                                \n                            \n            \n                            \n                                \n            resetTreadling(wefts: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateFromDrawdown\n                                \n                            \n            \n                            \n                                \n            updateFromDrawdown(ndx: Interlacement, drawdown: Cell[][])\n                                \n                            \n            \n                            \n                                \n                                        updates the threading, tieup, and treadling in response to an update upon the drawdown\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                ndx\n                                                            \n                                                            \n                                                                the updated location \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                drawdown\n                                                            \n                                                            \n                                                                an Array of Cells representing the drawdown\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     LoomUpdate\n            \n                                        \n                                            \n                                                a list of all the treadling, threading, and tieups that need to be updated\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getEmptyTreadle\n                                \n                            \n            \n                            \n                                \n            getEmptyTreadle()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getEmptyFrame\n                                \n                            \n            \n                            \n                                \n            getEmptyFrame()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfig\n                                \n                            \n            \n                            \n                                \n            getConfig(ndx: Interlacement, drawdown: Cell[][])\n                                \n                            \n            \n                            \n                                \n                                        describes the required frame andd treadle assignment for a given interlacement within the drawdown\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                ndx\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                drawdown\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     LoomCoords\n            \n                                        \n                                            \n                                                a description of the assigned frames and treadles\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateConfig\n                                \n                            \n            \n                            \n                                \n            updateConfig(config: LoomCoords)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     LoomUpdate\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getAffectedDrawdownPoints\n                                \n                            \n            \n                            \n                                \n            getAffectedDrawdownPoints(obj: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     inTieupRange\n                                \n                            \n            \n                            \n                                \n            inTieupRange(ndx: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasTieup\n                                \n                            \n            \n                            \n                                \n            hasTieup(ndx: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     inThreadingRange\n                                \n                            \n            \n                            \n                                \n            inThreadingRange(ndx: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isInFrame\n                                \n                            \n            \n                            \n                                \n            isInFrame(warp: number, frame: number)\n                                \n                            \n            \n                            \n                                \n                                        checks if the given warp is assigned to the given frame\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                warp\n                                                            \n                                                            \n                                                                the warm in the draft\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                frame\n                                                            \n                                                            \n                                                                the frame in question\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                null if out of range or true/false if it is in this warp\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     inTreadlingRange\n                                \n                            \n            \n                            \n                                \n            inTreadlingRange(ndx: Interlacement)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isInTreadle\n                                \n                            \n            \n                            \n                                \n            isInTreadle(weft: number, treadle: number)\n                                \n                            \n            \n                            \n                                \n                                        checks if the given weft is assigned to the given treadle\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                weft\n                                                            \n                                                            \n                                                                the weft in the draft\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                treadle\n                                                            \n                                                            \n                                                                the treadle in question\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                null if out of range or true/false if it is in this weft\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateTieup\n                                \n                            \n            \n                            \n                                \n            updateTieup(ndx: InterlacementVal)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     InterlacementVal[]\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateThreading\n                                \n                            \n            \n                            \n                                \n            updateThreading(ndx: InterlacementVal)\n                                \n                            \n            \n                            \n                                \n                                        updates the therading given this interlacement val\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                ndx\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     InterlacementVal[]\n            \n                                        \n                                            \n                                                a list of the updates made\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateTreadling\n                                \n                            \n            \n                            \n                                \n            updateTreadling(ndx: InterlacementVal)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     InterlacementVal[]\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateNumFramesFromThreading\n                                \n                            \n            \n                            \n                                \n            updateNumFramesFromThreading()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateNumTreadlesFromTreadling\n                                \n                            \n            \n                            \n                                \n            updateNumTreadlesFromTreadling()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     clearTieupCol\n                                \n                            \n            \n                            \n                                \n            clearTieupCol(i: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     clearTieupRow\n                                \n                            \n            \n                            \n                                \n            clearTieupRow(i: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateUnused\n                                \n                            \n            \n                            \n                                \n            updateUnused(struct: number[], min: number, num: number, type: string)\n                                \n                            \n            \n                            \n                                \n                                        scans through the loom and reorients the assignments to condense into the minimum number of frames and columns\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                struct\n                                                            \n                                                            \n                                                                the array of threading/treadling to check\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                min\n                                                            \n                                                            \n                                                                the min number of this struct\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                num\n                                                            \n                                                            \n                                                                the current number used in this struct\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                type\n                                                            \n                                                            \n                                                                describes if it is threadling or threading\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                boolean indicating whether or not condensing took place\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     epi\n                                \n                            \n                            \n                                \n                                    epi:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     frame_mapping\n                                \n                            \n                            \n                                \n                                    frame_mapping:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     min_frames\n                                \n                            \n                            \n                                \n                                    min_frames:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     min_treadles\n                                \n                            \n                            \n                                \n                                    min_treadles:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     num_frames\n                                \n                            \n                            \n                                \n                                    num_frames:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     num_treadles\n                                \n                            \n                            \n                                \n                                    num_treadles:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     threading\n                                \n                            \n                            \n                                \n                                    threading:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     tieup\n                                \n                            \n                            \n                                \n                                    tieup:     boolean[][]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     treadling\n                                \n                            \n                            \n                                \n                                    treadling:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     type\n                                \n                            \n                            \n                                \n                                    type:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     units\n                                \n                            \n                            \n                                \n                                    units:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     width\n                                \n                            \n                            \n                                \n                                    width:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Cell } from './cell';\nimport { Interlacement, InterlacementVal, LoomCoords, LoomUpdate } from './datatypes';\nimport utilInstance from './util';\n/**\n * The Loom class stores the threading, tieup, and treadling informatino for a given draft.\n * @param type 'frame' or 'jacquard'\n * @param epi  a number describing the density of the weave \n * @param units a string fom the density units type that describes if it should be read in epi or ends per 10 cm\n * @param the width of the fabric given the epi and number of warps\n * @param threading array the same size as warps that has the id for the frame it is associated with or -1. \n * @param min_frames the available number of frames on the loom (as defined by user)\n * @param num_frames the total number of frames required for the given drawdown\n * @param frame_mapping used to describe the ordering of frames in the view \n * @param treadling array the same size as wefts that has the id for the frame it is associated with or -1. \n * @param min_treadles the available number of treadles on the loom (as defined by user)\n * @param num_treadles the total number of treadles required for the given drawdown\n * @param tieup a 2D array of boooleans size frames x treadles that represents the tieup\n */ \nexport class Loom{\n    type: string;\n    epi: number;\n    units: string;\n    width: number;\n\n\n    threading: Array; \n    min_frames: number; \n    num_frames: number; //the number frames in use\n    frame_mapping: Array;\n    \n    treadling: Array;\n    min_treadles: number;\n    num_treadles: number;\n\n    // 2-d arraw of size frames x treadles\n    tieup: Array>; \n\n    /**\n     * constructs a new loom object\n     * @param type current handled types are 'frame' and 'jacquard'\n     * @param wefts number of wefts of the drawdown\n     * @param warps number of warps in the drawdown\n     * @param frames the number of frames available in this loom\n     * @param treadles the number of treadles available in this loom\n     */\n    constructor(type: string, wefts: number, warps: number, frames: number, treadles:number) {\n\n\n        this.type = type;\n        \n\n        this.min_frames = frames; \n        this.min_treadles = treadles;\n        this.num_frames = frames; \n        this.num_treadles = treadles;\n\n\n        this.resetFrameMapping(frames);\n        this.resetThreading(warps);\n        this.resetTreadling(wefts);\n        this.resetTieup(frames, treadles);\n      \n    }\n\n    /**\n     * loads a new set of data into this existing loom object\n     * @param type \n     * @param wefts \n     * @param warps \n     * @param frames \n     * @param treadles \n     */\n     loadNew(type: string, wefts: number, warps: number, frames: number, treadles:number) {\n\n\n\n        this.type = type;\n        \n        this.min_frames = frames;\n        this.min_treadles = treadles;\n        this.num_frames = frames;\n        this.num_treadles = treadles;\n\n\n        this.resetFrameMapping(frames);\n        this.resetThreading(warps);\n        this.resetTreadling(wefts);\n        this.resetTieup(frames, treadles);\n      \n    }\n\n\n\n    setMinFrames(frames:number){\n\n      //get the max frame being used\n      this.updateNumFramesFromThreading();\n\n      if(frames >= this.num_frames){\n        this.min_frames = frames;\n        this.num_frames = frames;\n        this.resetFrameMapping(frames);\n      }else{\n        this.min_frames = frames;\n      }\n     this.updateTieupSize();\n\n\n    }\n\n    setMinTreadles(treadles:number){\n\n      this.updateNumTreadlesFromTreadling();\n\n      if(treadles >= this.num_treadles){\n        this.min_treadles = treadles;\n        this.num_treadles = treadles;\n      }else{\n        this.min_treadles = treadles;\n      }\n\n      this.updateTieupSize();\n\n    }\n\n    /**\n     * scans the current frames and treadles for unused and updates the size accordingly\n     */\n    updateTieupSize(){\n\n      //if the tieup is larger than the num frames or treadles, trim it\n      if(this.num_frames = this.tieup[0].length){\n            this.tieup[i][j] = false;\n          }else if(i >= this.tieup.length && j >): LoomUpdate{\n      return this.updateConfig(this.getConfig(ndx, drawdown));\n    }\n\n\n    getEmptyTreadle(){\n\n      for(var i = 0; i  element === i);\n        if(idx === undefined) return i;\n      }\n\n      return this.num_treadles;\n    }\n\n    //this will always get the first empty frame\n    getEmptyFrame(){\n\n      for(var i = 0; i  element === i);\n        if(idx === undefined) return i;\n      }\n\n      return this.num_frames;\n    }\n\n/**\n * describes the required frame andd treadle assignment for a given interlacement within the drawdown\n * @param ndx \n * @param drawdown \n * @returns a description of the assigned frames and treadles\n */\ngetConfig(ndx:Interlacement, drawdown: Array>):LoomCoords{\n\n\n      var config: LoomCoords = {\n        ndx: ndx,\n        frame: -1,\n        treadle:-1,\n        drawdown: drawdown\n      }\n\n\n      var j_pattern = drawdown.map(element => element[ndx.j]);\n      var i_pattern = drawdown[ndx.i];\n      \n\n      //(1) check if the row is unique\n      var found = false;\n      for(var i = 0; i  element.isUp() !== i_pattern[ndx].isUp());\n          if(idx === undefined){\n              found = true;\n              config.treadle = this.treadling[i];\n          }\n        }\n      }\n\n      if(!found){\n        var count = utilInstance.countOccurrences(this.treadling, this.treadling[ndx.i]);\n        if(this.treadling[ndx.i] != -1 && count == 1){\n          config.treadle = this.treadling[ndx.i];\n        }else{\n          config.treadle = this.getEmptyTreadle();\n        }\n      }\n\n     //(1) check if the column is unique\n      found = false;\n      for(var j = 0; j  element[j]);\n          const idx = col.find((element, ndx) => element.isUp() !== j_pattern[ndx].isUp());\n\n          if(idx === undefined){\n              found = true;\n              config.frame = this.threading[j];\n          }\n        }\n      }\n\n\n      if(!found ){\n        var count = utilInstance.countOccurrences(this.threading, this.threading[ndx.j]);\n        if(this.threading[ndx.j] != -1 && count == 1){\n          config.frame = this.threading[ndx.j];\n        }else{\n          config.frame = this.getEmptyFrame();\n        }\n      }\n\n      return config;\n    }\n\n\n\n\n\n\n    updateConfig(config:LoomCoords):LoomUpdate{\n      \n      var updates:LoomUpdate = {\n        threading: [],\n        treadling: [],\n        tieup: []\n      }\n\n\n      //if this is within the existing frames\n      if(config.frame = this.tieup[0].length){\n            this.tieup[i][j] = false;\n            updates.tieup[i][j] = ({i: i, j:j, val: false});\n          }else if(i >= this.tieup.length && j  element === j);\n\n        if(idx !== -1){\n            //clear the tieup associated with this treadle\n            for(var i = 0; i = 0 && ndx.i = 0 && ndx.j = 0 && ndx.j = 0 && ndx.i = 0 && ndx.j = 0 && ndx.i {\n       var updates:Array = [];\n        this.tieup[ndx.i][ndx.j] = ndx.val;\n        updates.push({i:ndx.i, j:ndx.j, val:ndx.val});\n        return updates;\n    }\n\n\n\n    /**\n     * updates the therading given this interlacement val\n     * @param ndx \n     * @returns a list of the updates made\n     */\n    updateThreading(ndx: InterlacementVal):Array{\n      var updates = [];\n      var frame = this.threading[ndx.j];\n\n      if(!this.inThreadingRange({i:ndx.i, j:ndx.j, si: -1})) return updates;\n\n      //a new value is coming in\n      if(ndx.val){\n\n        //nothing is assigned to this frame, send an update to unset the pixel\n        if(frame !== -1) updates.push({i:frame, j: ndx.j, val:false});\n\n        updates.push({i:ndx.i, j: ndx.j, val:ndx.val});\n\n      }else{\n\n        if(frame === ndx.i){\n          updates.push({i:ndx.i, j: ndx.j, val:ndx.val});\n          this.threading[ndx.j] = -1;\n        }\n\n      }\n      \n      return updates;\n    }\n\n\n    updateTreadling(ndx: InterlacementVal):Array{\n      var updates = [];\n      var treadle = this.treadling[ndx.i];\n\n\n      if(!this.inTreadlingRange({i:ndx.i, j:ndx.j, si: -1})) return updates;\n\n      if(ndx.val){\n\n        if(treadle !== -1) updates.push({i:ndx.i, j: treadle, val:false});\n        updates.push({i:ndx.i, j: ndx.j, val:true});\n        this.treadling[ndx.i] = ndx.j;\n\n      }else{\n\n        if(treadle === ndx.j){\n          updates.push({i:ndx.i, j: ndx.j, val:false});\n          this.treadling[ndx.i] = -1;\n        }\n\n      }\n\n      return updates;\n\n    }\n\n    updateNumFramesFromThreading(){\n      //sets num_frames from values in the threading draft\n      var max = -1;\n\n      for(var j= 0; j  max) max = this.threading[j];\n      }\n\n      this.num_frames = max + 1;\n      if(this.num_frames  max) max = this.treadling[j];\n      }\n\n      this.num_treadles = max + 1;\n      if(this.num_treadles , min:number, num:number, type:string):boolean{\n\n        var status = [];\n        var zeros = []; \n        var map = [];        //map [new-index] = old-index\n\n        //first check if the frames/treadles are being used or not\n        //push unusued frames to zero:\n        for(var i = 0; i  (min-1)){\n                  //delete a frame\n                  //this.num_frames--;\n                  this.updateNumFramesFromThreading();\n                  this.resetFrameMapping(this.num_frames);\n                  this.tieup.splice(i, 1);\n                }else{\n                  this.clearTieupRow(i);\n                }\n\n              } else{\n\n                if(i > (min-1)){\n                  this.updateNumTreadlesFromTreadling();\n                  //this.num_treadles--;\n                  for(var j = 0; j  (min-1); i--){\n           \n           var old_index = map[i];\n           \n           \n           if(status[old_index] === 0){\n              if(type === \"threading\"){\n                //this.num_frames--;\n                this.updateNumFramesFromThreading();\n                this.resetFrameMapping(this.num_frames);\n                this.tieup.splice(i, 1);\n\n              } else{\n                this.updateNumTreadlesFromTreadling();\n                //this.num_treadles--;\n                for(var j = 0; j \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pattern.html":{"url":"classes/Pattern.html","title":"class - Pattern","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Pattern\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/pattern.ts\n        \n\n            \n                Description\n            \n            \n                Definition of pattern object.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(obj: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     setPattern\n                                \n                            \n            \n                            \n                                \n            setPattern(pattern: boolean[][])\n                                \n                            \n            \n                            \n                                \n                                        takes a 2D array of booleans and converts to a pattern object (replacing boolean with Cells)\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                pattern\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     toggleFavorite\n                                \n                            \n            \n                            \n                                \n            toggleFavorite()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     favorite\n                                \n                            \n                            \n                                \n                                    favorite:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     height\n                                \n                            \n                            \n                                \n                                    height:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     id\n                                \n                            \n                            \n                                \n                                    id:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     pattern\n                                \n                            \n                            \n                                \n                                    pattern:     Cell[][]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     width\n                                \n                            \n                            \n                                \n                                    width:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Cell } from './cell';\n\n/**\n * Definition of pattern object.\n * @class\n */\n\nexport class Pattern {\n  height: number;\n  width: number;\n  pattern: Array>;\n  favorite: boolean;\n  id: number;\n  name: string;\n\n  constructor(obj: any) {\n\n    this.favorite = (obj.favorite !== undefined) ? obj.favorite : false;\n    this.id = (obj.id !== undefined) ? obj.id : -1;\n    this.name = (obj.name !== undefined) ? obj.name : \"unnamed\";\n    \n    this.pattern = [];\n\n    if(obj.pattern !== undefined){\n      this.height = obj.pattern.length;\n      this.width =  obj.pattern[0].length;\n      for(let i = 0; i >) {\n    this.height = pattern.length;\n    if(this.height > 0) this.width = pattern[0].length\n\n    for(let i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Point.html":{"url":"classes/Point.html","title":"class - Point","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Point\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weaver/modal/connection/connection.modal.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     x\n                                \n                            \n                            \n                                \n                                    x:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     y\n                                \n                            \n                            \n                                \n                                    y:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\nexport class Point {\n  x: number;\n  y: number;\n}\n\nclass Connection {\n  start: Point;\n  end: Point;\n  shuttleId: number;\n}\n\n@Component({\n  selector: 'app-connection',\n  templateUrl: './connection.modal.html',\n  styleUrls: ['./connection.modal.scss']\n})\nexport class ConnectionModal implements OnInit {\n  connection: Connection = new Connection();\n  shuttles: any;\n\n  constructor(private dialogRef: MatDialogRef,\n             @Inject(MAT_DIALOG_DATA) private data: any) { }\n\n  ngOnInit() {\n    this.connection.start = new Point();\n    this.connection.end = new Point();\n    this.shuttles = this.data.shuttles;\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  save() {\n    this.dialogRef.close(this.connection);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Render.html":{"url":"classes/Render.html","title":"class - Render","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Render\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weaver/model/render.ts\n        \n\n            \n                Description\n            \n            \n                Definition of render object.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(view_frames: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     interpolate\n                                \n                            \n            \n                            \n                                \n            interpolate(base: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTextInterval\n                                \n                            \n            \n                            \n                                \n            getTextInterval()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getCellDims\n                                \n                            \n            \n                            \n                                \n            getCellDims(type: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getInterpolationDims\n                                \n                            \n            \n                            \n                                \n            getInterpolationDims(type: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setZoom\n                                \n                            \n            \n                            \n                                \n            setZoom(z: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getZoom\n                                \n                            \n            \n                            \n                                \n            getZoom()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     zoomOut\n                                \n                            \n            \n                            \n                                \n            zoomOut()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     zoomIn\n                                \n                            \n            \n                            \n                                \n            zoomIn()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getOffset\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getOffset(type: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     toggleViewFrames\n                                \n                            \n            \n                            \n                                \n            toggleViewFrames()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     showingFrames\n                                \n                            \n            \n                            \n                                \n            showingFrames()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isYarnBasedView\n                                \n                            \n            \n                            \n                                \n            isYarnBasedView()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getCurrentView\n                                \n                            \n            \n                            \n                                \n            getCurrentView()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setCurrentView\n                                \n                            \n            \n                            \n                                \n            setCurrentView(view: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isFront\n                                \n                            \n            \n                            \n                                \n            isFront()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setFront\n                                \n                            \n            \n                            \n                                \n            setFront(value: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     base_cell\n                                \n                            \n                            \n                                \n                                    base_cell:     { w: { max: number; min: number; }; h: { max: number; min: number; }; margin_fill_x: { max: numbe...\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     current_view\n                                \n                            \n                            \n                                \n                                    current_view:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     select\n                                \n                            \n                            \n                                \n                                    select:     { offset_x: { max: number; min: number; }; offset_y: { max: number; min: number; }; }\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     view_frames\n                                \n                            \n                            \n                                \n                                    view_frames:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     view_front\n                                \n                            \n                            \n                                \n                                    view_front:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     zoom\n                                \n                            \n                            \n                                \n                                    zoom:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export class Render {\n\n  view_frames: boolean;\n  current_view: string;\n  view_front: boolean;\n\n  zoom: number;\n\n  base_cell: {\n    w: {max: number, min: number},\n    h: {max: number, min: number},\n    margin_fill_x: {max: number, min: number},\n    margin_fill_y: {max: number, min: number},\n    margin_clear_x: {max: number, min: number},\n    margin_clear_y: {max: number, min: number},\n  };\n\n  select:{\n    offset_x: {max: number, min: number},\n    offset_y: {max: number, min: number};\n  }\n\n  constructor(view_frames) {\n\n    //max values\n    this.zoom = 50;\n    this.view_frames = view_frames;\n    this.current_view = 'pattern';\n    this.view_front = true;\n\n    //renders at min -  expands to max\n    this.base_cell = {\n    w: {max: 20, min: 10},\n    h: {max: 20, min: 10},\n    margin_fill_x: {max: 1, min: 0},\n    margin_fill_y: {max: 1, min: 0},\n    margin_clear_x: {max: 2, min: 0},\n    margin_clear_y: {max: 2, min: 0},\n  };\n\n   this.select = {\n    offset_x: {max: 7, min: 0},\n    offset_y: {max: 7, min: 0}\n   }\n\n  }\n\n  interpolate(base: any){\n    // console.log(\"interp\", base);\n      var r1 = base.max - base.min; \n      if(r1 == 0) return 0;\n     //console.log(\"i\", r1, this.zoom/100, base.min);\n\n     var diff = this.zoom - 50; //difference from base zoom\n\n      return r1 * (diff/50) + base.min;\n\n\n  }\n\n\n  getTextInterval(){\n    if(this.zoom > 90) return 1;\n    if(this.zoom > 85) return 2;\n    if(this.zoom > 80) return 4;\n    if(this.zoom > 75) return 5;\n    if(this.zoom > 60) return 8; \n    if(this.zoom > 50) return 10;\n    if(this.zoom > 45) return 12;\n    if(this.zoom > 40) return 15;\n    if(this.zoom > 35) return 20;\n    if(this.zoom > 30) return 30; \n    if(this.zoom > 25) return 50; \n    return 100;\n  }\n\n  getCellDims(type: string){\n\n    return {\n      x: this.getOffset(type+\"_x\"),\n      y: this.getOffset(type+\"_y\"),\n      w: this.base_cell.w.min,\n      h: this.base_cell.h.min\n    };\n\n  }\n\n  getInterpolationDims(type: string){\n    var x = this.interpolate({max: this.getOffset(type+\"_x\"), min: this.getOffset(type+\"_x\")});\n    var y = this.interpolate({max: this.getOffset(type+\"_y\"), min: this.getOffset(type+\"_y\")});\n\n\n    return {\n      x: x,\n      y: y,\n      w: this.interpolate({max: this.base_cell.w.max - (x*2), min: this.base_cell.w.min}),\n      h: this.interpolate({max: this.base_cell.h.max - (y*2), min: this.base_cell.h.min})\n    }\n\n  }\n\n  setZoom(z: number){\n    this.zoom = z;\n  }\n\n  getZoom(){\n    return this.zoom;\n  }\n\n   zoomOut(){\n    this.zoom -= 10; \n    if(this.zoom  100) this.zoom = 100;\n\n  }\n\n  private getOffset(type) {\n    if(type ===\"select_x\") return this.select.offset_x.min;\n    if(type ===\"select_y\") return this.select.offset_y.min;\n    if(type ===\"base_clear_x\") return this.base_cell.margin_clear_x.min;\n    if(type ===\"base_clear_y\") return this.base_cell.margin_clear_y.min;\n    if(type ===\"base_fill_x\") return this.base_cell.margin_fill_x.min;\n    if(type ===\"base_fill_y\") return this.base_cell.margin_fill_y.min;\n    else return 0;\n  }\n\n  toggleViewFrames(){\n    this.view_frames = !this.view_frames;\n  }\n\n  showingFrames():boolean{\n    return this.view_frames;\n  }\n\n  isYarnBasedView(): boolean{\n    return (this.current_view == 'visual' || this.current_view == 'yarn');\n  }\n\n  getCurrentView(): string{\n    return this.current_view;\n  }\n\n  setCurrentView(view:string){\n    this.current_view = view;\n  }\n\n  isFront(){\n    return this.view_front;\n  }\n\n  setFront(value:boolean){\n    return this.view_front = value;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Selection.html":{"url":"classes/Selection.html","title":"class - Selection","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Selection\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weaver/model/selection.ts\n        \n\n            \n                Description\n            \n            \n                Definition of selection object.\n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     setParameters\n                                \n                            \n            \n                            \n                                \n            setParameters()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsetParameters\n                                \n                            \n            \n                            \n                                \n            unsetParameters()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasSelection\n                                \n                            \n            \n                            \n                                \n            hasSelection()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTop\n                                \n                            \n            \n                            \n                                \n            getTop()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getLeft\n                                \n                            \n            \n                            \n                                \n            getLeft()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setTarget\n                                \n                            \n            \n                            \n                                \n            setTarget(t: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTarget\n                                \n                            \n            \n                            \n                                \n            getTarget()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTargetId\n                                \n                            \n            \n                            \n                                \n            getTargetId()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     end\n                                \n                            \n                            \n                                \n                                    end:     Interlacement\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     height\n                                \n                            \n                            \n                                \n                                    height:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     start\n                                \n                            \n                            \n                                \n                                    start:     Interlacement\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     target\n                                \n                            \n                            \n                                \n                                    target:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     width\n                                \n                            \n                            \n                                \n                                    width:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Interlacement } from '../../core/model/datatypes'\n\n/**\n * Definition of selection object.\n * @class\n */\nexport class Selection {\n  start: Interlacement;\n  end: Interlacement;\n  width: number;\n  height: number;\n  target: any;\n\n\n  setParameters() {\n    this.width = Math.abs(this.start.j - this.end.j);\n    this.height = Math.abs(this.start.si - this.end.si);\n\n    if(this.target.id == \"weft-systems\" || this.target.id == \"weft-materials\"){\n      this.width = 1;\n    }else if(this.target.id == \"warp-systems\" || this.target.id == \"warp-materials\"){\n      this.height = 1;\n    }\n  }\n\n  unsetParameters() {\n    this.width = -1;\n    this.height = -1;\n  }\n\n  hasSelection(){\n    return (this.width >= 0 && this.height >= 0);\n  }\n\n  getTop(){\n    return Math.min(this.start.si, this.end.si);\n  }\n\n  getLeft(){\n    return Math.min(this.start.j, this.end.j);\n  }\n\n  setTarget(t){\n  \tthis.target = t;\n  }\n\n  getTarget(){\n  \treturn this.target;\n  }\n\n  getTargetId(){\n    if(this.target !== undefined) return this.target.id;\n    return undefined;\n  }\n\n\n\n\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Shape.html":{"url":"classes/Shape.html","title":"class - Shape","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Shape\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mixer/model/shape.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(shape_canvas: HTMLCanvasElement, bounds: Bounds, scale: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                shape_canvas\n                                                            \n                                                            \n                                                                \n            a canvas with the shape on it \n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                bounds\n                                                            \n                                                            \n                                                                \n            the bounds of the shape we are converting\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                scale\n                                                            \n                                                            \n                                                                \n            the scale of each cell within the canvas. \n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getImageData\n                                \n                            \n            \n                            \n                                \n            getImageData()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     resample\n                                \n                            \n            \n                            \n                                \n            resample(rows: number, cols: number)\n                                \n                            \n            \n                            \n                                \n                                        rescale the draft in its current size to have this number of rows and cols\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                bounds\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     Cell[][]\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     read\n                                \n                            \n            \n                            \n                                \n            read()\n                                \n                            \n            \n                            \n                                \n                                        rescale the draft in its current size to have this number of rows and cols\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                bounds\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getDraft\n                                \n                            \n            \n                            \n                                \n            getDraft()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Cell[][]\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     draft\n                                \n                            \n                            \n                                \n                                    draft:     Cell[][]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     filled\n                                \n                            \n                            \n                                \n                                    filled:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     img_data\n                                \n                            \n                            \n                                \n                                    img_data:     ImageData\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     scale\n                                \n                            \n                            \n                                \n                                    scale:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Cell } from \"../../core/model/cell\";\nimport { Bounds } from \"../../core/model/datatypes\";\n\n/**\n * @class Shape\n * This class manages drafts that are linked to a shaped region. \n * It offers functions to translate between shapes represented as HTML Elements \n * and converting them into 2D array's of cells\n */\nexport class Shape {\n\n  img_data: ImageData;\n  scale: number;\n  draft: Array>;\n  filled: boolean;\n\n  \n/**\n * @constructor takes a canvas element and bounds and converts it to data. \n * @param shape_canvas - a canvas with the shape on it \n * @param bounds - the bounds of the shape we are converting\n * @param scale - the scale of each cell within the canvas. \n */\n  constructor(shape_canvas: HTMLCanvasElement, bounds:Bounds, scale:number) {\n    this.scale = scale;\n    const context = shape_canvas.getContext('2d');\n    const download = shape_canvas.toDataURL(\"image/png\");\n   // document.write('');\n\n\n    this.img_data = context.getImageData(bounds.topleft.x, bounds.topleft.y, bounds.width, bounds.height);\n    this.draft = this.resample(Math.floor(bounds.height/scale), Math.floor(bounds.width/scale));\n  };\n\n  getImageData(){\n    return this.img_data;\n  }\n\n\n  /**\n   * rescale the draft in its current size to have this number of rows and cols\n   * @param bounds \n   */\n  resample(rows: number, cols: number):Array>{\n    this.draft = [];\n    const margin: number = this.scale/2; // used to check the center of cells\n\n    for(let i = 0; i = 150){\n        //   console.log(i, j, \"set\");\n        // }else if(p_grn >{\n    return this.draft;\n  }\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Shuttle.html":{"url":"classes/Shuttle.html","title":"class - Shuttle","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Shuttle\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/shuttle.ts\n        \n\n            \n                Description\n            \n            \n                Definition of Shuttle object.a shuttle inhertis from a material. \n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(shuttleDict: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     updateVariables\n                                \n                            \n            \n                            \n                                \n            updateVariables(undefined: { id: any; name: any; insert: any; visible: any; color: any; thickness: any; type: any; notes: an...)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setID\n                                \n                            \n            \n                            \n                                \n            setID(id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getId\n                                \n                            \n            \n                            \n                                \n            getId()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setColor\n                                \n                            \n            \n                            \n                                \n            setColor(color: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setThickness\n                                \n                            \n            \n                            \n                                \n            setThickness(n: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setType\n                                \n                            \n            \n                            \n                                \n            setType(type: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setVisible\n                                \n                            \n            \n                            \n                                \n            setVisible(visible: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getColor\n                                \n                            \n            \n                            \n                                \n            getColor()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getThickness\n                                \n                            \n            \n                            \n                                \n            getThickness()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getType\n                                \n                            \n            \n                            \n                                \n            getType()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getName\n                                \n                            \n            \n                            \n                                \n            getName()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     color\n                                \n                            \n                            \n                                \n                                    color:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     endLabel\n                                \n                            \n                            \n                                \n                                    endLabel:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     id\n                                \n                            \n                            \n                                \n                                    id:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     insert\n                                \n                            \n                            \n                                \n                                    insert:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     notes\n                                \n                            \n                            \n                                \n                                    notes:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     startLabel\n                                \n                            \n                            \n                                \n                                    startLabel:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     thickness\n                                \n                            \n                            \n                                \n                                    thickness:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     type\n                                \n                            \n                            \n                                \n                                    type:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     visible\n                                \n                            \n                            \n                                \n                                    visible:     boolean\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export class Shuttle {\n  id: number;\n  name: string;\n  insert: boolean; //true is left, false is right\n  visible: boolean;\n  color: string;\n  thickness: number; //percentage of base dims\n  type: number;\n  // image?: any;\n  startLabel?: string;\n  endLabel?: string;\n  notes: string;\n\n\n  constructor(shuttleDict = null) {\n\n    //defaults\n    this.id = -1;\n    this.name=\"\";\n    this.insert = true;\n    this.visible = true;\n    this.color=\"#666666\";\n    this.thickness=100;\n    this.type = 0;\n    this.notes = \"\";\n\n    if (shuttleDict) this.updateVariables(shuttleDict);\n\n  }\n\n  updateVariables({id, name, insert, visible, color, thickness, type, notes}) {\n    this.id = id;\n    this.name = name;\n    this.insert = insert;\n    this.visible = visible;\n    this.color = color;\n    this.thickness = thickness;\n    this.type = type;\n    if(this.type === undefined) this.type = 0;\n  // this.image = image;\n    // this.startLabel = startLabel;\n    // this.endLabel = endLabel;\n    this.notes = notes;\n  }\n\n  setID(id: number) {\n    this.id = id;\n    if (!this.name) {\n      this.name = 'Shuttle ' + (id + 1);\n    }\n  }\n\n  getId(){\n    return this.id;\n  }\n\n  setColor(color: string) {\n    this.color = color;\n  }\n\n  setThickness(n: number) {\n    this.thickness = n;\n  }\n\n  //indexs into type list\n  setType(type: number) {\n    this.type = type;\n  }\n\n  setVisible(visible:boolean){\n    this.visible = visible;\n  }\n\n  getColor() {\n    return this.color;\n  }\n\n  getThickness() {\n    return this.thickness;\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  getName(){\n    return this.name;\n  }\n\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/System.html":{"url":"classes/System.html","title":"class - System","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  System\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/system.ts\n        \n\n            \n                Description\n            \n            \n                Definition of System object.a system describes a structural relationship between rows and wefts. Used in overshot, mutipic structures, or adding conductive rows\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(systemDict: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     updateVariables\n                                \n                            \n            \n                            \n                                \n            updateVariables(undefined: { id: any; name: any; notes: any; visible: any; })\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setID\n                                \n                            \n            \n                            \n                                \n            setID(id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isVisible\n                                \n                            \n            \n                            \n                                \n            isVisible()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setVisible\n                                \n                            \n            \n                            \n                                \n            setVisible(bool: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getChar\n                                \n                            \n            \n                            \n                                \n            getChar()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     id\n                                \n                            \n                            \n                                \n                                    id:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     notes\n                                \n                            \n                            \n                                \n                                    notes:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     visible\n                                \n                            \n                            \n                                \n                                    visible:     boolean\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export class System {\n  id: number;\n  name: string;\n  notes: string;\n  visible: boolean;\n\n  constructor(systemDict = null) {\n\n    //defaults\n    this.id = -1;\n    this.name = \"weft system\"\n    this.notes = \"\";\n    this.visible = true;\n\n    if (systemDict) this.updateVariables(systemDict);\n  }\n\n  updateVariables({id, name, notes, visible}) {\n    this.id = id;\n    this.name = name;\n    this.notes = notes;\n    this.visible = visible;\n  }\n\n  setID(id: number) {\n    this.id = id;\n    if (!this.name) {\n      this.name = 'System ' + (id + 1);\n    }\n  }\n\n  isVisible(){\n    return this.visible;\n  }\n\n  setVisible(bool: boolean) {\n    this.visible = bool;\n  }\n\n  getChar(){\n    return String.fromCharCode(97 + this.id)\n  }\n\n\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timeline.html":{"url":"classes/Timeline.html","title":"class - Timeline","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Timeline\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/timeline.ts\n        \n\n            \n                Description\n            \n            \n                Definition of history state object.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public addHistoryState\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    addHistoryState(draft: Draft)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public restoreNextHistoryState\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    restoreNextHistoryState()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Draft\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public restorePreviousHistoryState\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    restorePreviousHistoryState()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Draft\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public logState\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    logState(draft: Draft)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     active_id\n                                \n                            \n                            \n                                \n                                    active_id:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     max_size\n                                \n                            \n                            \n                                \n                                    max_size:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 10\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     redo_disabled\n                                \n                            \n                            \n                                \n                                    redo_disabled:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     timeline\n                                \n                            \n                            \n                                \n                                    timeline:     HistoryState[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     undo_disabled\n                                \n                            \n                            \n                                \n                                    undo_disabled:     boolean\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Draft } from './draft';\nimport {cloneDeep, now} from 'lodash';\n\n\n\ninterface HistoryState {\n  draft: Draft;\n}\n/**\n * Definition of history state object.\n * @class\n */\nexport class Timeline {\n  active_id = 0;\n  max_size = 10;\n  undo_disabled: boolean;\n  redo_disabled: boolean;\n  timeline: Array; //new states are always pushed to front of draft\n\n  constructor() {\n   \n  this.active_id = 0;\n \tthis.timeline = [];\n \tthis.undo_disabled = true;\n \tthis.redo_disabled = true;\n\n  }\n \n\n \n\n  public addHistoryState(draft:Draft):void{\n\n    var state = {\n      draft: cloneDeep(draft),\n    }\n\n    //we are looking at the most recent state\n    if(this.active_id > 0){\n\n\n      //erase all states until you get to the active row\n      this.timeline.splice(0, this.active_id);\n      this.active_id = 0;\n      this.redo_disabled = true;\n\n    }\n\n    //add the new element to position 0\n    var len = this.timeline.unshift(state);\n    if(len > this.max_size) this.timeline.pop();\n\n    if(this.timeline.length > 1) this.undo_disabled = false;\n\n    this.logState(draft);\n\n  }\n\n  \n  //called on redo\n  public restoreNextHistoryState(): Draft{\n\n    if(this.active_id == 0) return; \n\n  \tthis.active_id--;\n\n    console.log('restoring state', this.active_id);\n    if(this.active_id == 0) this.redo_disabled = true;\n\n    return this.timeline[this.active_id].draft;\n    \n\n  }\n\n  //called on undo\n   public restorePreviousHistoryState():Draft{\n\n     this.active_id++;\n\n      //you've hit the end of available states to restore\n     if(this.active_id >= this.timeline.length){\n        this.active_id--;\n        this.undo_disabled = true;\n        return null; \n     } \n\n     console.log(\"restoring state \", this.active_id);\n     this.redo_disabled = false;\n     return this.timeline[this.active_id].draft;\n      \n  }\n\n  public logState(draft: Draft){\n\n  //this just lags on big drafts\n  if(draft.warps*draft.wefts > 10000) return;\n\n  var timestamp = Math.floor(Date.now() / 1000);\n  var theJSON = JSON.stringify(draft);\n  if(theJSON.length \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Upload.html":{"url":"classes/Upload.html","title":"class - Upload","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Upload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/uploads/upload.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(file: File)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     $key\n                                \n                            \n                            \n                                \n                                    $key:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createdAt\n                                \n                            \n                            \n                                \n                                    createdAt:     Date\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     file\n                                \n                            \n                            \n                                \n                                    file:     File\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     progress\n                                \n                            \n                            \n                                \n                                    progress:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     url\n                                \n                            \n                            \n                                \n                                    url:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export class Upload {\n  $key: string;\n  file:File;\n  name:string;\n  url:string;\n  progress:number;\n  createdAt: Date = new Date();\n\n  constructor(file:File) {\n    this.file = file;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Util.html":{"url":"classes/Util.html","title":"class - Util","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Util\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/util.ts\n        \n\n            \n                Description\n            \n            \n                A collection of functions that are heplful within many areas of the tool\n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     equals\n                                \n                            \n            \n                            \n                                \n            equals(array1: any, array2: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     countOnes\n                                \n                            \n            \n                            \n                                \n            countOnes(array: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     xor\n                                \n                            \n            \n                            \n                                \n            xor(array1: any, array2: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     maxOfPositiveList\n                                \n                            \n            \n                            \n                                \n            maxOfPositiveList(array: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     minOfList\n                                \n                            \n            \n                            \n                                \n            minOfList(array: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     findSmallestElmtBiggerThan\n                                \n                            \n            \n                            \n                                \n            findSmallestElmtBiggerThan(n: any, array: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     findSmallestGap\n                                \n                            \n            \n                            \n                                \n            findSmallestGap(array: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Public countOccurrences\n                                \n                            \n                            \n                                \n                                    countOccurrences:     (arr: any, val: any) => any\n            \n                                \n                            \n                            \n                                \n                                    A function to count the number of occurances of a give value within an array\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        class Util {\n\n    /*Input: two arrays\n    Result: a boolean value for if they are equal or not\n    */\n    equals(array1, array2) {\n      if (array1.length != array2.length){\n        return false;\n      } \n      else {\n        for (var i =0; i  arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\n\n      \n    /*Input: an array of booleans\n    Result: the number of \"ones\" in the \"bitstring\" (in this context, returns the number of true valued booleans in the array of booleans)\n    */\n    countOnes(array) {\n      var counter = 0;\n      for (var i = 0; i  max) {\n          max = array[i];\n        }\n      }\n      return max;\n    }\n\n    minOfList(array) {\n      var min = array[0]\n      for (var i = 0; i  n && minElmtBiggerThanN[i] > array[i]) {\n          minElmtBiggerThanN = array[i];\n        }\n      }\n      return minElmtBiggerThanN;\n    }\n\n    findSmallestGap(array) {\n      var min = this.minOfList(array);\n      var smallestElmtBiggerThan = this.findSmallestElmtBiggerThan(min,array);\n      var max = this.maxOfPositiveList(array);\n      while (smallestElmtBiggerThan-min \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bounds.html":{"url":"interfaces/Bounds.html","title":"interface - Bounds","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Bounds\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/datatypes.ts\n        \n\n            \n                Description\n            \n            \n                Describes a rectangle on the screen.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        topleft\n                                    \n                                \n                                \n                                    \n                                        topleft:     Point\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Point\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Cell } from \"./cell\";\n\n/**\n * describes a point using x,y coordinates\n * often used for referencing mouse and/or screen drawing positions\n */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * represents a location within a draft.\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param si is the location of this cell within the current view (where the view may be hiding some rows)\n *        this value can be de-indexed to absolute position in the rows using draft.visibleRows array\n * @example const i: number = draft.visibleRows[si];\n */\ninterface Interlacement {\n  i: number;  \n  j: number;  \n  si: number; \n}\n\n/**\n * represents a location within a draft as well as the value to be placed at that location\n * used by Loom to stage updates before settting them\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param val the value to be assigned at the given location\n */\n\n interface InterlacementVal {\n  i: number;  \n  j: number \n  val: boolean; \n}\n\n\n/**\n * returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n */\ninterface LoomCoords{\n  ndx: Interlacement\n  frame: number,\n  treadle:number,\n  drawdown: Array>\n}\n\n\n\n\n/**\n * Describes a rectangle on the screen.\n * @param topleft - position of this rectanble\n * @param width - the width of the rectangle\n * @param height - the height of this rectanble.\n */\ninterface Bounds {\n  topleft: Point;  //row on draft\n  width: number;  //column on draft \n  height: number; //corresponding screen row\n}\n\n/**\n * A type to communicate locations on the loom that have been updated in response to a given action\n */\ninterface LoomUpdate {\n  threading: Array,\n  treadling: Array,\n  tieup: Array>\n}\n\ninterface LoomTypes {\n  value: string;\n  viewValue: string;\n}\n\ninterface MaterialTypes {\n  value: number;\n  viewValue: string;\n}\n\ninterface DensityUnits {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface ViewModes {\n  value: string;\n  viewValue: string;\n}\n\n// interface ToolModes{\n//   value: string; \n//   viewValue: string;\n//   icon: string;\n//   menu: string;\n\n// }\n\nexport{\n  Point,\n  Interlacement,\n  InterlacementVal,\n  Bounds,\n  LoomCoords,\n  LoomUpdate,\n  LoomTypes,\n  DensityUnits,\n  ViewModes,\n  MaterialTypes\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DensityUnits.html":{"url":"interfaces/DensityUnits.html","title":"interface - DensityUnits","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DensityUnits\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/datatypes.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Cell } from \"./cell\";\n\n/**\n * describes a point using x,y coordinates\n * often used for referencing mouse and/or screen drawing positions\n */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * represents a location within a draft.\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param si is the location of this cell within the current view (where the view may be hiding some rows)\n *        this value can be de-indexed to absolute position in the rows using draft.visibleRows array\n * @example const i: number = draft.visibleRows[si];\n */\ninterface Interlacement {\n  i: number;  \n  j: number;  \n  si: number; \n}\n\n/**\n * represents a location within a draft as well as the value to be placed at that location\n * used by Loom to stage updates before settting them\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param val the value to be assigned at the given location\n */\n\n interface InterlacementVal {\n  i: number;  \n  j: number \n  val: boolean; \n}\n\n\n/**\n * returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n */\ninterface LoomCoords{\n  ndx: Interlacement\n  frame: number,\n  treadle:number,\n  drawdown: Array>\n}\n\n\n\n\n/**\n * Describes a rectangle on the screen.\n * @param topleft - position of this rectanble\n * @param width - the width of the rectangle\n * @param height - the height of this rectanble.\n */\ninterface Bounds {\n  topleft: Point;  //row on draft\n  width: number;  //column on draft \n  height: number; //corresponding screen row\n}\n\n/**\n * A type to communicate locations on the loom that have been updated in response to a given action\n */\ninterface LoomUpdate {\n  threading: Array,\n  treadling: Array,\n  tieup: Array>\n}\n\ninterface LoomTypes {\n  value: string;\n  viewValue: string;\n}\n\ninterface MaterialTypes {\n  value: number;\n  viewValue: string;\n}\n\ninterface DensityUnits {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface ViewModes {\n  value: string;\n  viewValue: string;\n}\n\n// interface ToolModes{\n//   value: string; \n//   viewValue: string;\n//   icon: string;\n//   menu: string;\n\n// }\n\nexport{\n  Point,\n  Interlacement,\n  InterlacementVal,\n  Bounds,\n  LoomCoords,\n  LoomUpdate,\n  LoomTypes,\n  DensityUnits,\n  ViewModes,\n  MaterialTypes\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DesignActions.html":{"url":"interfaces/DesignActions.html","title":"interface - DesignActions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DesignActions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weaver/weaver.component.ts\n        \n\n            \n                Description\n            \n            \n                Controller of the Weaver component.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Component, ElementRef, OnInit, OnDestroy, HostListener, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport {enableProdMode} from '@angular/core';\n\nimport { PatternService } from '../core/provider/pattern.service';\nimport { WeaveDirective } from './directives/weave.directive';\nimport { ScrollDispatcher } from '@angular/cdk/overlay';\nimport { Timeline } from '../core/model/timeline';\nimport { LoomTypes, MaterialTypes, ViewModes, DensityUnits } from '../core/model/datatypes';\nimport { Draft } from '../core/model/draft';\nimport { Render } from '../weaver/model/render';\nimport { Pattern } from '../core/model/pattern';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { ConnectionModal } from './modal/connection/connection.modal';\nimport { InitModal } from '../core/modal/init/init.modal';\nimport { LabelModal } from './modal/label/label.modal';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {cloneDeep, now} from 'lodash';\nimport { Cell } from '../core/model/cell';\n\n\n//disables some angular checking mechanisms\nenableProdMode();\n\n\n/**\n * Controller of the Weaver component.\n * @class\n */\n\n\ninterface DesignActions{\n  value: string;\n  viewValue: string;\n  icon: string;\n}\n\ninterface DesignModes{\n  value: string;\n  viewValue: string;\n  icon: string;\n}\n\n\n@Component({\n  selector: 'app-weaver',\n  templateUrl: './weaver.component.html',\n  styleUrls: ['./weaver.component.scss']\n})\nexport class WeaverComponent implements OnInit {\n \n  /**\n   * The reference to the weave directive.\n   * @property {WeaveDirective}\n   */\n  @ViewChild(WeaveDirective, {static: false}) weaveRef;\n  @ViewChild('bitmapImage', {static: false}) bitmap;\n\n\n\n  design_modes: DesignModes[]=[\n    {value: 'toggle', viewValue: 'Toggle Heddle', icon: \"fas fa-adjust\"},\n    {value: 'up', viewValue: 'Set Heddle Up', icon: \"fas fa-square\"},\n    {value: 'down', viewValue: 'Set Heddle Down', icon: \"far fa-square\"}\n  ];\n\n  \n  //operations you can perform on a selection \n  design_actions: DesignActions[] = [\n    {value: 'toggle', viewValue: 'Invert Region', icon: \"fas fa-adjust\"},\n    {value: 'up', viewValue: 'Set Region Heddles Up', icon: \"fas fa-square\"},\n    {value: 'down', viewValue: 'Set Region Heddles Down', icon: \"far fa-square\"},\n    {value: 'flip_x', viewValue: 'Vertical Flip', icon: \"fas fa-arrows-alt-v\"},\n    {value: 'flip_y', viewValue: 'Horizontal Flip', icon: \"fas fa-arrows-alt-h\"},\n    {value: 'shift_left', viewValue: 'Shift 1 Warp Left', icon: \"fas fa-arrow-left\"},\n    {value: 'shift_up', viewValue: 'Shift 1 Pic Up', icon: \"fas fa-arrow-up\"},\n    {value: 'copy', viewValue: 'Copy Selected Region', icon: \"fa fa-clone\"},\n    {value: 'paste', viewValue: 'Paste Copyed Pattern to Selected Region', icon: \"fa fa-paste\"}\n  ];\n\n  /**\n   * The name of the current selected brush.\n   * @property {string}\n   */\n  design_mode = {\n    name:'toggle',\n    id: -1\n  }\n\n  /**\n   * The weave Draft object.\n   * @property {Draft}\n   */\n  draft: Draft;\n\n /**\n   * The weave Render object.\n   * @property {Render}\n   */\n  render: Render = new Render(false);\n\n /**\n   * The weave Timeline object.\n   * @property {Timeline}\n   */\n  timeline: Timeline = new Timeline();\n\n\n  /**\n  The current selection, as boolean array \n  **/\n  copy: Array>;\n\n\n /**\n   * The types of looms this version will support.\n   * @property {LoomType}\n   */\n  loomtypes: LoomTypes[] = [\n    {value: 'frame', viewValue: 'Shaft'},\n    {value: 'jacquard', viewValue: 'Jacquard'}\n  ];\n\n\n  material_types: MaterialTypes[] = [\n    {value: 0, viewValue: 'Non-Conductive'},\n    {value: 1, viewValue: 'Conductive'},\n    {value: 2, viewValue: 'Resistive'}\n  ];\n\n  density_units: DensityUnits[] = [\n    {value: 'in', viewValue: 'Ends per Inch'},\n    {value: 'cm', viewValue: 'Ends per 10cm '}\n  ];\n\n  view_modes: ViewModes[] = [\n      {value: 'visual', viewValue: 'Visual'},\n      {value: 'pattern', viewValue: 'Draft'},\n      {value: 'yarn', viewValue: 'Circuit'}\n     // {value: 'mask', viewValue: 'Masks'}\n\n    ];\n\n\n\n\n\n  /**\n   * The list of all patterns saved. Provided by pattern service.\n   * @property {Array}\n   */\n  //patterns;\n\n\n  selected;\n\n  private unsubscribe$ = new Subject();\n\n  default_patterns:any;\n  collapsed:boolean = false;\n  dims:any;\n\n  draftelement:any;\n  scrollingSubscription: any;\n\n  /// ANGULAR FUNCTIONS\n  /**\n   * @constructor\n   * ps - pattern service (variable name is initials). Subscribes to the patterns and used\n   * to get and update stitches.\n   * dialog - Anglar Material dialog module. Used to control the popup modals.\n   */\n  constructor(private ps: PatternService, private dialog: MatDialog, public scroll: ScrollDispatcher) {\n\n\n    this.scrollingSubscription = this.scroll\n          .scrolled()\n          .subscribe((data: any) => {\n            this.onWindowScroll(data);\n    });\n\n\n    //initialize with a draft so that we can load some things faster. \n    //let d =  this.getDraftFromLocalStore();\n    \n    this.copy = [[false,true],[false,true]];\n\n\n\n    //if(d !== undefined) this.draft = new Draft(JSON.parse(d));\n    this.draft = new Draft({wefts: 80, warps: 100});\n    this.draft.name = this.draft.name;\n    this.timeline.addHistoryState(this.draft);\n    \n    this.default_patterns = [];\n\n\n    this.ps.getPatterns().subscribe((res) => {\n       for(var i in res.body){\n          this.default_patterns.push(new Pattern(res.body[i]));\n       }\n    }); \n\n    this.render.view_frames = (this.draft.loom.type === 'frame') ? true : false;     \n    if (this.draft.patterns === undefined) this.draft.patterns = this.default_patterns;\n\n  }\n\n  private onWindowScroll(data: any) {\n    this.weaveRef.rescale();\n  }\n\n\n\n  reInit(result){\n    console.log(\"reinit\");\n\n    this.draft.reload(result);\n    this.timeline.addHistoryState(this.draft);\n\n    this.render.view_frames = (this.draft.loom.type === 'frame') ? true : false;     \n\n    if (this.draft.patterns === undefined) this.draft.patterns = this.default_patterns;\n    \n\n    this.weaveRef.onNewDraftLoaded();\n\n\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale();\n\n  }\n  \n  ngOnInit(){\n    \n  }\n\n  ngAfterViewInit() {\n\n  \n    const dialogRef = this.dialog.open(InitModal, {\n      data: {loomtypes: this.loomtypes, density_units: this.density_units}\n    });\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result !== undefined) this.reInit(result);\n   });\n\n\n    this.weaveRef.onNewDraftLoaded();\n\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale();\n  \n    \n  }\n\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  undo() {\n    let d: Draft = this.timeline.restorePreviousHistoryState();\n    console.log(\"Prevous State is \", d);\n    if(d === undefined || d === null) return;\n\n    this.draft.reload(d);    \n    this.weaveRef.onNewDraftLoaded();\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale(); \n  }\n\n  redo() {\n    let d: Draft = this.timeline.restoreNextHistoryState();\n    console.log(\"Next State is \", d);\n\n    if(d === undefined || d === null) return;\n\n    console.log(d);\n\n    this.draft.reload(d);    \n    this.weaveRef.onNewDraftLoaded();\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale(); \n  }\n\n  /// EVENTS\n\n\n\n\n/**\n   * Call zoom in on Shift+p.\n   * @extends WeaveComponent\n   * @param {Event} shift+p\n   * @returns {void}\n   */\n  @HostListener('window:keydown.Shift.p', ['$event'])\n  private keyEventZoomIn(e) {\n    console.log(\"zoom in\");\n    this.render.zoomIn();\n    this.weaveRef.rescale();\n\n\n  }\n/**\n   * Call zoom out on Shift+o.\n   * @extends WeaveComponent\n   * @param {Event} shift+o\n   * @returns {void}\n   */\n  @HostListener('window:keydown.Shift.o', ['$event'])\n  private keyEventZoomOut(e) {\n    console.log(\"zoom out\");\n    this.render.zoomOut();\n    this.weaveRef.rescale();\n  }\n\n\n  /**\n   * Sets selected area to clear\n   * @extends WeaveComponent\n   * @param {Event} delete key pressed\n   * @returns {void}\n   */\n\n  @HostListener('window:keydown.e', ['$event'])\n  private keyEventErase(e) {\n    this.design_mode = {\n      name: 'down',\n      id: -1\n    };\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets brush to point on key control + d.\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + d\n   * @returns {void}\n   */\n  @HostListener('window:keydown.d', ['$event'])\n  private keyEventPoint(e) {\n    this.design_mode = {\n      name: 'up',\n      id: -1};\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets brush to select on key control + s\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + s\n   * @returns {void}\n   */\n  @HostListener('window:keydown.s', ['$event'])\n  private keyEventSelect(e) {\n    this.design_mode = {\n      name: 'select',\n      id: -1};\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets key control to invert on control + x\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  @HostListener('window:keydown.x', ['$event'])\n  private keyEventInvert(e) {\n    this.design_mode = {\n      name: 'toggle',\n      id: -1\n    };\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets key to copy \n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  // @HostListener('window:keydown.c', ['$event'])\n  // private keyEventCopy(e) {\n  //   this.onCopy();  \n  // }\n\n    /**\n   * Sets key to copy \n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  @HostListener('window:keydown.p', ['$event'])\n  private keyEventPaste(e) {\n    this.onPaste({});\n  }\n\n  /**\n   * Updates the canvas based on the weave view.\n   * @extends WeaveComponent\n   * @param {Event} e - view change event from design component.\n   * @returns {void}\n   */\n  public viewChange(value: any) {\n    \n    this.render.setCurrentView(value);\n\n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n\n    this.weaveRef.redraw({\n      drawdown: true\n    });\n  }\n\n  /**\n   * Change the name of the brush to reflect selected brush.\n   * @extends WeaveComponent\n   * @param {Event} e - brush change event from design component.\n   * @returns {void}\n   */\n  public onDesignModeChange(e:any) {\n\n    this.design_mode = {\n      name: e.name,\n      id: e.id\n    }\n\n    console.log(\"design mode\", this.design_mode.name, this.design_mode.id);\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Tell the weave directive to fill selection with pattern.\n   * @extends WeaveComponent\n   * @param {Event} e - fill event from design component.\n   * @returns {void}\n   */\n  public onFill(e) {\n    \n    let p:Pattern = this.draft.patterns[e.id];\n    \n    this.draft.fillArea(this.weaveRef.selection, p, 'original');\n\n    if(this.render.showingFrames()) this.draft.recomputeLoom();\n\n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n    \n    this.weaveRef.copyArea();\n\n    this.weaveRef.redraw({drawdown:true, loom:true});\n\n    this.timeline.addHistoryState(this.draft);\n    \n  }\n\n  /**\n   * Tell weave reference to clear selection.\n   * @extends WeaveComponent\n   * @param {Event} Delte - clear event from design component.\n   * @returns {void}\n   */\n  public onClear(b:boolean) {\n    \n    const c: Cell = new Cell(b);\n    const p: Pattern = new Pattern({width: 1, height: 1, pattern: [[c]]});\n\n    this.draft.fillArea(this.weaveRef.selection, p, 'original')\n\n    if(this.render.showingFrames()) this.draft.recomputeLoom();\n\n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n\n    this.weaveRef.copyArea();\n\n    this.weaveRef.redraw({drawdown:true, loom:true});\n\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public onScroll(){\n    console.log(\"I has scroll\");\n  }\n\n  /**\n   * Weave reference masks pattern over selected area.\n   * @extends WeaveComponent\n   * @param {Event} e - mask event from design component.\n   * @returns {void}\n   */\n  public onMask(e) {\n    // console.log(e);\n    // var p = this.draft.patterns[e.id].pattern;\n    // this.weaveRef.maskArea(p);\n    // this.redraw();\n  }\n\n  /**\n   * Tells weave reference to paste copied pattern.\n   * @extends WeaveComponent\n   * @param {Event} e - paste event from design component.\n   * @returns {void}\n   */\n  public onPaste(e) {\n\n    var p = this.weaveRef.copy;\n    console.log(\"on paste\", e, p);\n\n\n    var type;\n\n    if(e.type === undefined) type = \"original\";\n    else type =  e.type;\n\n    this.draft.fillArea(this.weaveRef.selection, p, type);\n\n    switch(this.weaveRef.selection.target.id){    \n      case 'drawdown':\n        //if you do this when updates come from loom, it will erase those updates\n        if(this.render.showingFrames()) this.draft.recomputeLoom();\n       break;\n      \n    }\n\n    \n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n\n    this.timeline.addHistoryState(this.draft);\n\n    this.weaveRef.copyArea();\n\n    this.weaveRef.redraw({drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n \n\n  }\n\n  /**\n   * Creates the copied pattern within the weave reference\n   * @extends WeaveComponent\n   * @param {Event} e - copy event from design component.\n   * @returns {void}\n   */\n  public onCopy() {\n\n    console.log(\"on copy\", this.copy);\n\n    this.design_mode = {\n      name: 'copy',\n      id: -1\n    };\n  }\n\n  /**\n   *\n   *\n   */\n  public onSave(e: any) {\n\n    e.bitmap = this.bitmap;\n    console.log(e);\n\n    if (e.type === \"bmp\") this.weaveRef.saveBMP(e.name, e);\n    else if (e.type === \"ada\") this.weaveRef.saveADA(e.name, e);\n    else if (e.type === \"wif\") this.weaveRef.saveWIF(e.name, e);\n    else if (e.type === \"jpg\") this.weaveRef.savePrintableDraft(e.name, e);\n    \n  }\n\n  /**\n   * Open the connection modal.\n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public openConnectionDialog() {\n\n    const dialogRef = this.dialog.open(ConnectionModal, {data: {shuttles: this.draft.shuttles}});\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.draft.connections.push(result);\n      }\n    });\n  }\n\n\n  /**\n   * Open the label modal.\n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public openLabelDialog() {\n\n    const dialogRef = this.dialog.open(LabelModal);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log(result);\n      }\n    });\n  }\n\n\n\n  /// PUBLIC FUNCTIONS\n  /**\n   * \n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public print(e) {\n    console.log(e);\n  }\n\n  /**\n   * Inserts an empty row on system, system\n   */\n  public shuttleColorChange() {\n    this.weaveRef.redraw({drawdown: true, warp_materials:true,  weft_materials:true});\n    this.timeline.addHistoryState(this.draft);\n  }\n\n  /**\n   * inserts an empty row just below the clicked row\n   * @param i the absolute (not screen) index of the row we'll insert\n   * @param shuttle the shuttle id this will be assigned to\n   * @param system the system id to which this row will be assigned\n   */\n  public insertRow(i:number, shuttle:number, system:number) {\n\n    console.log(i);\n    this.draft.insertRow(i, shuttle, system);\n    //this.draft.updateConnections(i, 1);\n    \n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n    \n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public cloneRow(i, c, shuttle, system) {\n    this.draft.cloneRow(i, c, shuttle, system);\n   // this.draft.updateConnections(i, 1);\n\n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public deleteRow(i) {\n    this.draft.deleteRow(i);\n   // this.draft.updateConnections(i, -1);\n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n    this.timeline.addHistoryState(this.draft);\n\n    //this.onAddRow.emit();\n  }\n\n    /**\n   * In\n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public insertCol(i, shuttle,system) {\n    this.draft.insertCol(i, shuttle,system);\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n    this.draft.computeYarnPaths();\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public cloneCol(i, shuttle,system) {\n    this.draft.cloneCol(i, shuttle,system);\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n    this.draft.computeYarnPaths();\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n\n  public deleteCol(i) {\n    this.draft.deleteCol(i);\n    //this.draft.updateConnections(i, -1);\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n    this.draft.computeYarnPaths();\n    this.timeline.addHistoryState(this.draft);\n\n\n  }\n\n  public updatePatterns(e: any) {\n    // this.patterns = e.patterns;\n    // this.draft.patterns = this.patterns;\n    this.draft.patterns = e.patterns;\n\n  }\n\n  public updateWarpSystems(pattern: Array) {\n    console.log(\"update warp sys\", pattern);\n    this.draft.updateWarpSystemsFromPattern(pattern);\n    this.weaveRef.redraw({drawdown: true, warp_systems: true});\n\n  }\n\n  public updateWeftSystems(pattern: Array) {\n    console.log(\"update weft sys\", pattern);\n\n    this.draft.updateWeftSystemsFromPattern(pattern);\n    this.weaveRef.redraw({drawdown: true, weft_systems: true});\n\n  }\n\n  public updateWarpShuttles(pattern: Array) {\n    console.log(\"update warp shut\", pattern);\n\n    this.draft.updateWarpShuttlesFromPattern(pattern);\n    this.weaveRef.redraw({drawdown: true, warp_materials: true});\n\n  }\n\n  public updateWeftShuttles(pattern: Array) {\n    console.log(\"update weft shutf\", pattern);\n\n    this.draft.updateWeftShuttlesFromPattern(pattern);\n    this.draft.computeYarnPaths();\n    this.weaveRef.redraw({drawdown: true, weft_materials: true});\n\n  }\n\n  // public createMaterial(e: any) {\n  //   this.draft.addMaterial(e.material); \n  //   this.weaveRef.redraw();\n  // }\n\n  public createShuttle(e: any) {\n    this.draft.addShuttle(e.shuttle); \n  }\n\n  public createWarpSystem(e: any) {\n    this.draft.addWarpSystem(e.system);\n  }\n\n  public createWeftSystem(e: any) {\n    this.draft.addWarpSystem(e.system);\n  }\n\n  public hideWarpSystem(e:any) {\n    \n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n  }\n\n  public showWarpSystem(e:any) {\n\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n  }  \n\n  public hideWeftSystem(e:any) {\n   \n    this.draft.updateVisible();\n    \n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n  }\n\n  public showWeftSystem(e:any) {\n\n    this.draft.updateVisible();\n\n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n  }\n\n\n  public notesChanged(e:any) {\n\n    console.log(e);\n   this.draft.notes = e;\n  }\n\n  // public hideShuttle(e:any) {\n  //   this.draft.updateVisible();\n  //   this.weaveRef.redraw();\n  //   this.weaveRef.redrawLoom();\n  // }\n\n  // public showShuttle(e:any) {\n  //   this.draft.updateVisible();\n  //   this.weaveRef.redraw();\n  //   this.weaveRef.redrawLoom();\n  // }\n\n  public epiChange(e:any){\n    this.draft.epi = e.epi;\n    this.draft.recomputeWidth();\n  }\n\n  public unitChange(e:any){\n    this.draft.units = e.units;\n    this.draft.recomputeWidth();    \n\n  }\n\n  public thicknessChange(e:any){\n\n    if(this.render.isYarnBasedView()) this.weaveRef.redraw({drawdown: true});\n  }\n\n\n  public loomChange(e:any){\n    \n    this.draft.loom.type = e.loomtype;\n\n    if(this.draft.loom.type == 'jacquard'){\n      this.render.view_frames = false;\n    }else{\n      this.render.view_frames = true;\n      this.weaveRef.recomputeLoom();\n    }\n    \n    this.weaveRef.redraw({loom: true});\n\n  }\n\n  public frameChange(e:any){\n    this.draft.loom.setMinFrames(e.value);\n    this.weaveRef.redraw({loom: true});\n  }\n\n  public treadleChange(e:any){\n    this.draft.loom.setMinTreadles(e.value);\n    this.weaveRef.redraw({loom: true});\n  }\n\n\n  public warpNumChange(e:any) {\n    if(e.warps == \"\") return;\n\n    if(e.warps > this.draft.warps){\n      var diff = e.warps - this.draft.warps;\n      \n      for(var i = 0; i  this.draft.wefts){\n      var diff = e.wefts - this.draft.wefts;\n      \n      for(var i = 0; i  pattern !== e.pattern);\n  }\n\n\n  public updateSelection(e:any){\n    this.copy = e;\n  }\n\n\n  public toggleViewFrames(){\n\n    this.render.toggleViewFrames();\n\n    if(this.render.view_frames && this.draft.loom.type == \"frame\"){\n      this.weaveRef.recomputeLoom();\n    }\n\n    this.weaveRef.redraw({loom:true});\n   \n  }\n\n  public renderChange(e: any){\n     \n     if(e.source === \"slider\"){\n        this.render.setZoom(e.value);\n        this.weaveRef.rescale();\n\n     } \n\n     if(e.source === \"in\"){\n        this.render.zoomIn();\n        this.weaveRef.rescale();\n\n     } \n\n     if(e.source === \"out\"){\n        this.render.zoomOut();\n        this.weaveRef.rescale();\n\n     } \n     if(e.source === \"front\"){\n        this.render.setFront(e.checked);\n        this.weaveRef.redraw({drawdown:true});\n     }      \n  }\n\n  public toggleCollapsed(){\n    this.collapsed = !this.collapsed;\n  }\n\n\n\n\n\n\n//careful! calling this from console will clear all data in local storage\npublic clearLocalStorage(){\n\n  var total = 0;\n  for(var x in localStorage) {\n    localStorage.removeItem(x);\n  }\n  console.log( \"LOCAL STORAGE CLEARED\");\n  console.log(\"local storage size now \"+localStorage.length);\n}\n\n\n//call this from console when you want to write a file of the data\npublic downloadLocalStorage(){\n  // let d_log = loadRawLog();\n\n  // let oldest_stamp = d_log[0].timestamp;\n  //   let newest_stamp =   d_log[0].timestamp\n\n\n  // for(var d in d_log){\n  //   if(d_log[d].timestamp > newest_stamp) newest_stamp = d_log[d].timestamp;\n  //   if(d_log[d].timestamp \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DesignMode.html":{"url":"interfaces/DesignMode.html","title":"interface - DesignMode","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DesignMode\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mixer/provider/designmodes.service.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     DesignMode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DesignMode[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        enable_inks\n                                    \n                                \n                                \n                                    \n                                        enable_inks:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { elementAt } from 'rxjs/operators';\n\ninterface DesignMode{\n  value: string;\n  viewValue: string;\n  icon: string;\n  children: Array;\n  enable_inks: boolean;\n  selected: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DesignmodesService {\n\n\n  modes: Array;\n  selected: Array;\n\n/**\n * Creates the objects that track which design mode (draw, select, etc) the user is currently working in. \n */\n  constructor() { \n\n    this.selected = [];\n\n    const shapes:Array = [\n      {value: 'line', viewValue: 'Line', icon: \"fas fa-slash\", children: [], enable_inks: true, selected: false},\n      {value: 'fill_circle', viewValue: 'Filled Circle', icon: \"fas fa-circle\", children: [], enable_inks: true, selected: false},\n      {value: 'stroke_circle', viewValue: 'Circle Outline', icon: \"far fa-circle\", children: [], enable_inks: true, selected: false},\n      {value: 'fill_rect', viewValue: 'Filled Rectangle', icon: \"fas fa-square\", children: [], enable_inks: true, selected: false},\n      {value: 'stroke_rect', viewValue: 'Rectangle Outline', icon: \"far fa-square\", children: [], enable_inks: true, selected: false},\n      {value: 'free', viewValue: 'Freehand', icon: \"fas fa-draw-polygon\", children: [], enable_inks: true, selected: false},\n    ]\n\n    \n  \n  this.modes = [\n    {value: 'draw', viewValue: 'Draw', icon: \"fas fa-pen\", children: [], enable_inks: true, selected: false},\n    {value: 'shape', viewValue: 'Shape', icon: \"fas fa-shapes\", children: shapes, enable_inks: true, selected: false},\n    {value: 'select', viewValue: 'Merge', icon: \"fas fa-expand\", children: [], enable_inks: false, selected:false},\n    {value: 'move', viewValue: 'Move', icon: \"fas fa-arrows-alt\", children: [], enable_inks: false, selected:false},\n  ];\n\n  this.select('draw');\n\n  console.log(\"selected\", this.selected);\n  \n  }\n\n\n  /**\n   * A function to retreive a mode by name. Only works if modes are nested no more than 1 deep. \n   * @param name the name of the component we're looking to retreive\n   * @returns the DeisgnMode associated with that name, or null if nothing was found\n   */\n\n  getMode(name: string): DesignMode {\n   let found: DesignMode = null;\n\n   this.modes.forEach( mode => {\n      if(mode.value === name) found =  mode;\n      mode.children.forEach(child => {\n        if(child.value === name) found = child;\n      });\n   });\n   return found;\n  }\n\n  /**\n   * sets false to the selection parameter on all the modes. \n   */\n  clearSelection(){\n    this.selected.forEach( mode => {\n      mode.selected = false;\n    });\n    this.selected = [];\n  }\n\n/**\n * clears previous selections and selects both parent and child mode associated with name\n * @param name a string corresponding to the name of this mode\n * @returns boolean cooresponding to whether or no a selection was made \n */\n  select(name: string): boolean{\n\n    let found: boolean = false;\n    this.clearSelection();\n\n    this.modes.forEach( mode => {\n      if(mode.value === name){\n        mode.selected = true;\n        found = true;\n        this.selected.push(mode);\n      } \n      mode.children.forEach(child => {\n        if(child.value === name){\n          mode.selected = true;\n          child.selected = true;\n          found = true;\n          this.selected.push(mode);\n          this.selected.push(child);\n        } \n      });\n   });\n\n   return found;\n  }\n\n\n\n  /**\n   * Get the current modes that are selected\n   * @returns returns the collection of selected modes\n   */\n  getSelected():Array{\n    return this.selected;\n  }\n\n  /**\n   * checks if a user specified mode is selected\n   * @param name the name of the mode we are asking about\n   * @returns boolean describing if it was selected or not\n   */\n  isSelected(name:string):boolean{\n    const found:DesignMode = this.selected.find(el => el.value == name);\n    return (found === undefined) ? false : true;\n  }\n\n  selectedHasInkEnabled():boolean{\n    let enabled:boolean = false;\n    const modes: Array = this.getSelected();\n    modes.forEach(mode =>{\n     enabled = mode.enable_inks;\n    });\n    return enabled;\n  }\n \n\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DesignModes.html":{"url":"interfaces/DesignModes.html","title":"interface - DesignModes","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DesignModes\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weaver/weaver.component.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Component, ElementRef, OnInit, OnDestroy, HostListener, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport {enableProdMode} from '@angular/core';\n\nimport { PatternService } from '../core/provider/pattern.service';\nimport { WeaveDirective } from './directives/weave.directive';\nimport { ScrollDispatcher } from '@angular/cdk/overlay';\nimport { Timeline } from '../core/model/timeline';\nimport { LoomTypes, MaterialTypes, ViewModes, DensityUnits } from '../core/model/datatypes';\nimport { Draft } from '../core/model/draft';\nimport { Render } from '../weaver/model/render';\nimport { Pattern } from '../core/model/pattern';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { ConnectionModal } from './modal/connection/connection.modal';\nimport { InitModal } from '../core/modal/init/init.modal';\nimport { LabelModal } from './modal/label/label.modal';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {cloneDeep, now} from 'lodash';\nimport { Cell } from '../core/model/cell';\n\n\n//disables some angular checking mechanisms\nenableProdMode();\n\n\n/**\n * Controller of the Weaver component.\n * @class\n */\n\n\ninterface DesignActions{\n  value: string;\n  viewValue: string;\n  icon: string;\n}\n\ninterface DesignModes{\n  value: string;\n  viewValue: string;\n  icon: string;\n}\n\n\n@Component({\n  selector: 'app-weaver',\n  templateUrl: './weaver.component.html',\n  styleUrls: ['./weaver.component.scss']\n})\nexport class WeaverComponent implements OnInit {\n \n  /**\n   * The reference to the weave directive.\n   * @property {WeaveDirective}\n   */\n  @ViewChild(WeaveDirective, {static: false}) weaveRef;\n  @ViewChild('bitmapImage', {static: false}) bitmap;\n\n\n\n  design_modes: DesignModes[]=[\n    {value: 'toggle', viewValue: 'Toggle Heddle', icon: \"fas fa-adjust\"},\n    {value: 'up', viewValue: 'Set Heddle Up', icon: \"fas fa-square\"},\n    {value: 'down', viewValue: 'Set Heddle Down', icon: \"far fa-square\"}\n  ];\n\n  \n  //operations you can perform on a selection \n  design_actions: DesignActions[] = [\n    {value: 'toggle', viewValue: 'Invert Region', icon: \"fas fa-adjust\"},\n    {value: 'up', viewValue: 'Set Region Heddles Up', icon: \"fas fa-square\"},\n    {value: 'down', viewValue: 'Set Region Heddles Down', icon: \"far fa-square\"},\n    {value: 'flip_x', viewValue: 'Vertical Flip', icon: \"fas fa-arrows-alt-v\"},\n    {value: 'flip_y', viewValue: 'Horizontal Flip', icon: \"fas fa-arrows-alt-h\"},\n    {value: 'shift_left', viewValue: 'Shift 1 Warp Left', icon: \"fas fa-arrow-left\"},\n    {value: 'shift_up', viewValue: 'Shift 1 Pic Up', icon: \"fas fa-arrow-up\"},\n    {value: 'copy', viewValue: 'Copy Selected Region', icon: \"fa fa-clone\"},\n    {value: 'paste', viewValue: 'Paste Copyed Pattern to Selected Region', icon: \"fa fa-paste\"}\n  ];\n\n  /**\n   * The name of the current selected brush.\n   * @property {string}\n   */\n  design_mode = {\n    name:'toggle',\n    id: -1\n  }\n\n  /**\n   * The weave Draft object.\n   * @property {Draft}\n   */\n  draft: Draft;\n\n /**\n   * The weave Render object.\n   * @property {Render}\n   */\n  render: Render = new Render(false);\n\n /**\n   * The weave Timeline object.\n   * @property {Timeline}\n   */\n  timeline: Timeline = new Timeline();\n\n\n  /**\n  The current selection, as boolean array \n  **/\n  copy: Array>;\n\n\n /**\n   * The types of looms this version will support.\n   * @property {LoomType}\n   */\n  loomtypes: LoomTypes[] = [\n    {value: 'frame', viewValue: 'Shaft'},\n    {value: 'jacquard', viewValue: 'Jacquard'}\n  ];\n\n\n  material_types: MaterialTypes[] = [\n    {value: 0, viewValue: 'Non-Conductive'},\n    {value: 1, viewValue: 'Conductive'},\n    {value: 2, viewValue: 'Resistive'}\n  ];\n\n  density_units: DensityUnits[] = [\n    {value: 'in', viewValue: 'Ends per Inch'},\n    {value: 'cm', viewValue: 'Ends per 10cm '}\n  ];\n\n  view_modes: ViewModes[] = [\n      {value: 'visual', viewValue: 'Visual'},\n      {value: 'pattern', viewValue: 'Draft'},\n      {value: 'yarn', viewValue: 'Circuit'}\n     // {value: 'mask', viewValue: 'Masks'}\n\n    ];\n\n\n\n\n\n  /**\n   * The list of all patterns saved. Provided by pattern service.\n   * @property {Array}\n   */\n  //patterns;\n\n\n  selected;\n\n  private unsubscribe$ = new Subject();\n\n  default_patterns:any;\n  collapsed:boolean = false;\n  dims:any;\n\n  draftelement:any;\n  scrollingSubscription: any;\n\n  /// ANGULAR FUNCTIONS\n  /**\n   * @constructor\n   * ps - pattern service (variable name is initials). Subscribes to the patterns and used\n   * to get and update stitches.\n   * dialog - Anglar Material dialog module. Used to control the popup modals.\n   */\n  constructor(private ps: PatternService, private dialog: MatDialog, public scroll: ScrollDispatcher) {\n\n\n    this.scrollingSubscription = this.scroll\n          .scrolled()\n          .subscribe((data: any) => {\n            this.onWindowScroll(data);\n    });\n\n\n    //initialize with a draft so that we can load some things faster. \n    //let d =  this.getDraftFromLocalStore();\n    \n    this.copy = [[false,true],[false,true]];\n\n\n\n    //if(d !== undefined) this.draft = new Draft(JSON.parse(d));\n    this.draft = new Draft({wefts: 80, warps: 100});\n    this.draft.name = this.draft.name;\n    this.timeline.addHistoryState(this.draft);\n    \n    this.default_patterns = [];\n\n\n    this.ps.getPatterns().subscribe((res) => {\n       for(var i in res.body){\n          this.default_patterns.push(new Pattern(res.body[i]));\n       }\n    }); \n\n    this.render.view_frames = (this.draft.loom.type === 'frame') ? true : false;     \n    if (this.draft.patterns === undefined) this.draft.patterns = this.default_patterns;\n\n  }\n\n  private onWindowScroll(data: any) {\n    this.weaveRef.rescale();\n  }\n\n\n\n  reInit(result){\n    console.log(\"reinit\");\n\n    this.draft.reload(result);\n    this.timeline.addHistoryState(this.draft);\n\n    this.render.view_frames = (this.draft.loom.type === 'frame') ? true : false;     \n\n    if (this.draft.patterns === undefined) this.draft.patterns = this.default_patterns;\n    \n\n    this.weaveRef.onNewDraftLoaded();\n\n\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale();\n\n  }\n  \n  ngOnInit(){\n    \n  }\n\n  ngAfterViewInit() {\n\n  \n    const dialogRef = this.dialog.open(InitModal, {\n      data: {loomtypes: this.loomtypes, density_units: this.density_units}\n    });\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result !== undefined) this.reInit(result);\n   });\n\n\n    this.weaveRef.onNewDraftLoaded();\n\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale();\n  \n    \n  }\n\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  undo() {\n    let d: Draft = this.timeline.restorePreviousHistoryState();\n    console.log(\"Prevous State is \", d);\n    if(d === undefined || d === null) return;\n\n    this.draft.reload(d);    \n    this.weaveRef.onNewDraftLoaded();\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale(); \n  }\n\n  redo() {\n    let d: Draft = this.timeline.restoreNextHistoryState();\n    console.log(\"Next State is \", d);\n\n    if(d === undefined || d === null) return;\n\n    console.log(d);\n\n    this.draft.reload(d);    \n    this.weaveRef.onNewDraftLoaded();\n    this.weaveRef.redraw({\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n    this.weaveRef.rescale(); \n  }\n\n  /// EVENTS\n\n\n\n\n/**\n   * Call zoom in on Shift+p.\n   * @extends WeaveComponent\n   * @param {Event} shift+p\n   * @returns {void}\n   */\n  @HostListener('window:keydown.Shift.p', ['$event'])\n  private keyEventZoomIn(e) {\n    console.log(\"zoom in\");\n    this.render.zoomIn();\n    this.weaveRef.rescale();\n\n\n  }\n/**\n   * Call zoom out on Shift+o.\n   * @extends WeaveComponent\n   * @param {Event} shift+o\n   * @returns {void}\n   */\n  @HostListener('window:keydown.Shift.o', ['$event'])\n  private keyEventZoomOut(e) {\n    console.log(\"zoom out\");\n    this.render.zoomOut();\n    this.weaveRef.rescale();\n  }\n\n\n  /**\n   * Sets selected area to clear\n   * @extends WeaveComponent\n   * @param {Event} delete key pressed\n   * @returns {void}\n   */\n\n  @HostListener('window:keydown.e', ['$event'])\n  private keyEventErase(e) {\n    this.design_mode = {\n      name: 'down',\n      id: -1\n    };\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets brush to point on key control + d.\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + d\n   * @returns {void}\n   */\n  @HostListener('window:keydown.d', ['$event'])\n  private keyEventPoint(e) {\n    this.design_mode = {\n      name: 'up',\n      id: -1};\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets brush to select on key control + s\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + s\n   * @returns {void}\n   */\n  @HostListener('window:keydown.s', ['$event'])\n  private keyEventSelect(e) {\n    this.design_mode = {\n      name: 'select',\n      id: -1};\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets key control to invert on control + x\n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  @HostListener('window:keydown.x', ['$event'])\n  private keyEventInvert(e) {\n    this.design_mode = {\n      name: 'toggle',\n      id: -1\n    };\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Sets key to copy \n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  // @HostListener('window:keydown.c', ['$event'])\n  // private keyEventCopy(e) {\n  //   this.onCopy();  \n  // }\n\n    /**\n   * Sets key to copy \n   * @extends WeaveComponent\n   * @param {Event} e - Press Control + x\n   * @returns {void}\n   */\n  @HostListener('window:keydown.p', ['$event'])\n  private keyEventPaste(e) {\n    this.onPaste({});\n  }\n\n  /**\n   * Updates the canvas based on the weave view.\n   * @extends WeaveComponent\n   * @param {Event} e - view change event from design component.\n   * @returns {void}\n   */\n  public viewChange(value: any) {\n    \n    this.render.setCurrentView(value);\n\n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n\n    this.weaveRef.redraw({\n      drawdown: true\n    });\n  }\n\n  /**\n   * Change the name of the brush to reflect selected brush.\n   * @extends WeaveComponent\n   * @param {Event} e - brush change event from design component.\n   * @returns {void}\n   */\n  public onDesignModeChange(e:any) {\n\n    this.design_mode = {\n      name: e.name,\n      id: e.id\n    }\n\n    console.log(\"design mode\", this.design_mode.name, this.design_mode.id);\n    this.weaveRef.unsetSelection();\n\n  }\n\n  /**\n   * Tell the weave directive to fill selection with pattern.\n   * @extends WeaveComponent\n   * @param {Event} e - fill event from design component.\n   * @returns {void}\n   */\n  public onFill(e) {\n    \n    let p:Pattern = this.draft.patterns[e.id];\n    \n    this.draft.fillArea(this.weaveRef.selection, p, 'original');\n\n    if(this.render.showingFrames()) this.draft.recomputeLoom();\n\n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n    \n    this.weaveRef.copyArea();\n\n    this.weaveRef.redraw({drawdown:true, loom:true});\n\n    this.timeline.addHistoryState(this.draft);\n    \n  }\n\n  /**\n   * Tell weave reference to clear selection.\n   * @extends WeaveComponent\n   * @param {Event} Delte - clear event from design component.\n   * @returns {void}\n   */\n  public onClear(b:boolean) {\n    \n    const c: Cell = new Cell(b);\n    const p: Pattern = new Pattern({width: 1, height: 1, pattern: [[c]]});\n\n    this.draft.fillArea(this.weaveRef.selection, p, 'original')\n\n    if(this.render.showingFrames()) this.draft.recomputeLoom();\n\n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n\n    this.weaveRef.copyArea();\n\n    this.weaveRef.redraw({drawdown:true, loom:true});\n\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public onScroll(){\n    console.log(\"I has scroll\");\n  }\n\n  /**\n   * Weave reference masks pattern over selected area.\n   * @extends WeaveComponent\n   * @param {Event} e - mask event from design component.\n   * @returns {void}\n   */\n  public onMask(e) {\n    // console.log(e);\n    // var p = this.draft.patterns[e.id].pattern;\n    // this.weaveRef.maskArea(p);\n    // this.redraw();\n  }\n\n  /**\n   * Tells weave reference to paste copied pattern.\n   * @extends WeaveComponent\n   * @param {Event} e - paste event from design component.\n   * @returns {void}\n   */\n  public onPaste(e) {\n\n    var p = this.weaveRef.copy;\n    console.log(\"on paste\", e, p);\n\n\n    var type;\n\n    if(e.type === undefined) type = \"original\";\n    else type =  e.type;\n\n    this.draft.fillArea(this.weaveRef.selection, p, type);\n\n    switch(this.weaveRef.selection.target.id){    \n      case 'drawdown':\n        //if you do this when updates come from loom, it will erase those updates\n        if(this.render.showingFrames()) this.draft.recomputeLoom();\n       break;\n      \n    }\n\n    \n    if(this.render.isYarnBasedView()) this.draft.computeYarnPaths();\n\n    this.timeline.addHistoryState(this.draft);\n\n    this.weaveRef.copyArea();\n\n    this.weaveRef.redraw({drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n \n\n  }\n\n  /**\n   * Creates the copied pattern within the weave reference\n   * @extends WeaveComponent\n   * @param {Event} e - copy event from design component.\n   * @returns {void}\n   */\n  public onCopy() {\n\n    console.log(\"on copy\", this.copy);\n\n    this.design_mode = {\n      name: 'copy',\n      id: -1\n    };\n  }\n\n  /**\n   *\n   *\n   */\n  public onSave(e: any) {\n\n    e.bitmap = this.bitmap;\n    console.log(e);\n\n    if (e.type === \"bmp\") this.weaveRef.saveBMP(e.name, e);\n    else if (e.type === \"ada\") this.weaveRef.saveADA(e.name, e);\n    else if (e.type === \"wif\") this.weaveRef.saveWIF(e.name, e);\n    else if (e.type === \"jpg\") this.weaveRef.savePrintableDraft(e.name, e);\n    \n  }\n\n  /**\n   * Open the connection modal.\n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public openConnectionDialog() {\n\n    const dialogRef = this.dialog.open(ConnectionModal, {data: {shuttles: this.draft.shuttles}});\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.draft.connections.push(result);\n      }\n    });\n  }\n\n\n  /**\n   * Open the label modal.\n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public openLabelDialog() {\n\n    const dialogRef = this.dialog.open(LabelModal);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log(result);\n      }\n    });\n  }\n\n\n\n  /// PUBLIC FUNCTIONS\n  /**\n   * \n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public print(e) {\n    console.log(e);\n  }\n\n  /**\n   * Inserts an empty row on system, system\n   */\n  public shuttleColorChange() {\n    this.weaveRef.redraw({drawdown: true, warp_materials:true,  weft_materials:true});\n    this.timeline.addHistoryState(this.draft);\n  }\n\n  /**\n   * inserts an empty row just below the clicked row\n   * @param i the absolute (not screen) index of the row we'll insert\n   * @param shuttle the shuttle id this will be assigned to\n   * @param system the system id to which this row will be assigned\n   */\n  public insertRow(i:number, shuttle:number, system:number) {\n\n    console.log(i);\n    this.draft.insertRow(i, shuttle, system);\n    //this.draft.updateConnections(i, 1);\n    \n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n    \n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public cloneRow(i, c, shuttle, system) {\n    this.draft.cloneRow(i, c, shuttle, system);\n   // this.draft.updateConnections(i, 1);\n\n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public deleteRow(i) {\n    this.draft.deleteRow(i);\n   // this.draft.updateConnections(i, -1);\n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n    this.timeline.addHistoryState(this.draft);\n\n    //this.onAddRow.emit();\n  }\n\n    /**\n   * In\n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public insertCol(i, shuttle,system) {\n    this.draft.insertCol(i, shuttle,system);\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n    this.draft.computeYarnPaths();\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n  public cloneCol(i, shuttle,system) {\n    this.draft.cloneCol(i, shuttle,system);\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n    this.draft.computeYarnPaths();\n    this.timeline.addHistoryState(this.draft);\n\n  }\n\n\n  public deleteCol(i) {\n    this.draft.deleteCol(i);\n    //this.draft.updateConnections(i, -1);\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n    this.draft.computeYarnPaths();\n    this.timeline.addHistoryState(this.draft);\n\n\n  }\n\n  public updatePatterns(e: any) {\n    // this.patterns = e.patterns;\n    // this.draft.patterns = this.patterns;\n    this.draft.patterns = e.patterns;\n\n  }\n\n  public updateWarpSystems(pattern: Array) {\n    console.log(\"update warp sys\", pattern);\n    this.draft.updateWarpSystemsFromPattern(pattern);\n    this.weaveRef.redraw({drawdown: true, warp_systems: true});\n\n  }\n\n  public updateWeftSystems(pattern: Array) {\n    console.log(\"update weft sys\", pattern);\n\n    this.draft.updateWeftSystemsFromPattern(pattern);\n    this.weaveRef.redraw({drawdown: true, weft_systems: true});\n\n  }\n\n  public updateWarpShuttles(pattern: Array) {\n    console.log(\"update warp shut\", pattern);\n\n    this.draft.updateWarpShuttlesFromPattern(pattern);\n    this.weaveRef.redraw({drawdown: true, warp_materials: true});\n\n  }\n\n  public updateWeftShuttles(pattern: Array) {\n    console.log(\"update weft shutf\", pattern);\n\n    this.draft.updateWeftShuttlesFromPattern(pattern);\n    this.draft.computeYarnPaths();\n    this.weaveRef.redraw({drawdown: true, weft_materials: true});\n\n  }\n\n  // public createMaterial(e: any) {\n  //   this.draft.addMaterial(e.material); \n  //   this.weaveRef.redraw();\n  // }\n\n  public createShuttle(e: any) {\n    this.draft.addShuttle(e.shuttle); \n  }\n\n  public createWarpSystem(e: any) {\n    this.draft.addWarpSystem(e.system);\n  }\n\n  public createWeftSystem(e: any) {\n    this.draft.addWarpSystem(e.system);\n  }\n\n  public hideWarpSystem(e:any) {\n    \n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n  }\n\n  public showWarpSystem(e:any) {\n\n    this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n  }  \n\n  public hideWeftSystem(e:any) {\n   \n    this.draft.updateVisible();\n    \n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n  }\n\n  public showWeftSystem(e:any) {\n\n    this.draft.updateVisible();\n\n    this.weaveRef.redraw({drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n  }\n\n\n  public notesChanged(e:any) {\n\n    console.log(e);\n   this.draft.notes = e;\n  }\n\n  // public hideShuttle(e:any) {\n  //   this.draft.updateVisible();\n  //   this.weaveRef.redraw();\n  //   this.weaveRef.redrawLoom();\n  // }\n\n  // public showShuttle(e:any) {\n  //   this.draft.updateVisible();\n  //   this.weaveRef.redraw();\n  //   this.weaveRef.redrawLoom();\n  // }\n\n  public epiChange(e:any){\n    this.draft.epi = e.epi;\n    this.draft.recomputeWidth();\n  }\n\n  public unitChange(e:any){\n    this.draft.units = e.units;\n    this.draft.recomputeWidth();    \n\n  }\n\n  public thicknessChange(e:any){\n\n    if(this.render.isYarnBasedView()) this.weaveRef.redraw({drawdown: true});\n  }\n\n\n  public loomChange(e:any){\n    \n    this.draft.loom.type = e.loomtype;\n\n    if(this.draft.loom.type == 'jacquard'){\n      this.render.view_frames = false;\n    }else{\n      this.render.view_frames = true;\n      this.weaveRef.recomputeLoom();\n    }\n    \n    this.weaveRef.redraw({loom: true});\n\n  }\n\n  public frameChange(e:any){\n    this.draft.loom.setMinFrames(e.value);\n    this.weaveRef.redraw({loom: true});\n  }\n\n  public treadleChange(e:any){\n    this.draft.loom.setMinTreadles(e.value);\n    this.weaveRef.redraw({loom: true});\n  }\n\n\n  public warpNumChange(e:any) {\n    if(e.warps == \"\") return;\n\n    if(e.warps > this.draft.warps){\n      var diff = e.warps - this.draft.warps;\n      \n      for(var i = 0; i  this.draft.wefts){\n      var diff = e.wefts - this.draft.wefts;\n      \n      for(var i = 0; i  pattern !== e.pattern);\n  }\n\n\n  public updateSelection(e:any){\n    this.copy = e;\n  }\n\n\n  public toggleViewFrames(){\n\n    this.render.toggleViewFrames();\n\n    if(this.render.view_frames && this.draft.loom.type == \"frame\"){\n      this.weaveRef.recomputeLoom();\n    }\n\n    this.weaveRef.redraw({loom:true});\n   \n  }\n\n  public renderChange(e: any){\n     \n     if(e.source === \"slider\"){\n        this.render.setZoom(e.value);\n        this.weaveRef.rescale();\n\n     } \n\n     if(e.source === \"in\"){\n        this.render.zoomIn();\n        this.weaveRef.rescale();\n\n     } \n\n     if(e.source === \"out\"){\n        this.render.zoomOut();\n        this.weaveRef.rescale();\n\n     } \n     if(e.source === \"front\"){\n        this.render.setFront(e.checked);\n        this.weaveRef.redraw({drawdown:true});\n     }      \n  }\n\n  public toggleCollapsed(){\n    this.collapsed = !this.collapsed;\n  }\n\n\n\n\n\n\n//careful! calling this from console will clear all data in local storage\npublic clearLocalStorage(){\n\n  var total = 0;\n  for(var x in localStorage) {\n    localStorage.removeItem(x);\n  }\n  console.log( \"LOCAL STORAGE CLEARED\");\n  console.log(\"local storage size now \"+localStorage.length);\n}\n\n\n//call this from console when you want to write a file of the data\npublic downloadLocalStorage(){\n  // let d_log = loadRawLog();\n\n  // let oldest_stamp = d_log[0].timestamp;\n  //   let newest_stamp =   d_log[0].timestamp\n\n\n  // for(var d in d_log){\n  //   if(d_log[d].timestamp > newest_stamp) newest_stamp = d_log[d].timestamp;\n  //   if(d_log[d].timestamp \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DraftInterface.html":{"url":"interfaces/DraftInterface.html","title":"interface - DraftInterface","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DraftInterface\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/draft.ts\n        \n\n            \n                Description\n            \n            \n                Definition of draft interface.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        colShuttleMapping\n                                    \n                                \n                                \n                                    \n                                        colShuttleMapping:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        colShuttlePattern\n                                    \n                                \n                                \n                                    \n                                        colShuttlePattern:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        colSystemMapping\n                                    \n                                \n                                \n                                    \n                                        colSystemMapping:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        colSystemPattern\n                                    \n                                \n                                \n                                    \n                                        colSystemPattern:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        connections\n                                    \n                                \n                                \n                                    \n                                        connections:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        epi\n                                    \n                                \n                                \n                                    \n                                        epi:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        loom\n                                    \n                                \n                                \n                                    \n                                        loom:     Loom\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Loom\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        masks\n                                    \n                                \n                                \n                                    \n                                        masks:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        notes\n                                    \n                                \n                                \n                                    \n                                        notes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:     Cell[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Cell[][]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        patterns\n                                    \n                                \n                                \n                                    \n                                        patterns:     Pattern[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pattern[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        rowShuttleMapping\n                                    \n                                \n                                \n                                    \n                                        rowShuttleMapping:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        rowShuttlePattern\n                                    \n                                \n                                \n                                    \n                                        rowShuttlePattern:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        rowSystemMapping\n                                    \n                                \n                                \n                                    \n                                        rowSystemMapping:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        rowSystemPattern\n                                    \n                                \n                                \n                                    \n                                        rowSystemPattern:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        shuttles\n                                    \n                                \n                                \n                                    \n                                        shuttles:     Shuttle[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Shuttle[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        units\n                                    \n                                \n                                \n                                    \n                                        units:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        visibleRows\n                                    \n                                \n                                \n                                    \n                                        visibleRows:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        warp_systems\n                                    \n                                \n                                \n                                    \n                                        warp_systems:     System[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     System[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        warps\n                                    \n                                \n                                \n                                    \n                                        warps:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        weft_systems\n                                    \n                                \n                                \n                                    \n                                        weft_systems:     System[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     System[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        wefts\n                                    \n                                \n                                \n                                    \n                                        wefts:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Shuttle } from './shuttle';\nimport { System } from './system';\nimport { Loom } from './loom';\nimport { Cell } from './cell';\nimport { Pattern } from './pattern';\nimport { Selection } from '../../weaver/model/selection';\nimport { Point, Interlacement } from './datatypes';\n\nimport * as _ from 'lodash';\n\n/**\n * Definition of draft interface.\n * @interface inteface to a draft object\n */\nexport interface DraftInterface {\n\n  id: number;\n  name: string;\n  notes: string;\n\n  pattern: Array>; // the single design pattern\n  shuttles: Array;    //the shuttles used in this draft \n  \n  //tracks stores row/col index, shuttle index\n  rowShuttleMapping: Array;\n  colShuttleMapping: Array;  \n  rowShuttlePattern: Array;\n  colShuttlePattern: Array;\n\n  rowSystemMapping: Array;\n  colSystemMapping: Array;\n  rowSystemPattern: Array;\n  colSystemPattern: Array;\n\n  visibleRows: Array; //this seems to be something that can belong to the renderer\n  patterns: Array; //the collection of smaller subpatterns from the pattern bar \n \n  masks: Array; //associates a mask id with a name\n  \n  weft_systems: Array; //weft-systems\n  warp_systems: Array; //warp-systems\n\n\n  connections: Array;\n  labels: Array;\n  \n  wefts: number;\n  warps: number;\n  width: number;\n  epi: number;\n  units: string;\n  loom: Loom;\n\n\n}\n\n/**\n * Definition and implementation of draft object.\n * @class stores the draft \n * @param a user defined for this draft used for saving\n * @param a unique id for this draft\n */\nexport class Draft implements DraftInterface {\n  name: string;\n  id: number;\n\n  pattern: Array>; // the single design pattern\n  shuttles: Array;    //the shuttles used in this draft \n  notes: string;\n\n  //tracks stores row/col index, shuttle index\n  rowShuttleMapping: Array;\n  colShuttleMapping: Array;  \n  rowShuttlePattern: Array;\n  colShuttlePattern: Array;\n  \n  //tracks stores row/col index with the system index\n  rowSystemMapping: Array;\n  colSystemMapping: Array;\n  rowSystemPattern: Array; //stores a pattern used for rows\n  colSystemPattern: Array; //stores a pattern of ids of cols\n\n  visibleRows: Array;\n\n  patterns: Array; //the collection of smaller subpatterns from the pattern bar \n  masks: Array; //associates a mask id with a name\n  \n  weft_systems: Array; //weft-systems\n  warp_systems: Array; //warp-systems\n\n  // rowMaterialMap: Array;\n  // colMaterialMap: Array;\n\n\n  connections: Array;\n  labels: Array;\n  \n  wefts: number;\n  warps: number;\n  width: number;\n  epi: number;\n  units: string;\n  loom: Loom;\n\n  constructor({...params}) {\n    this.id = Date.now();\n\n    this.name = (params.name === undefined) ?  'adacad-draft' : params.name;\n    this.wefts = (params.wefts === undefined) ?  8 : params.wefts;\n    this.warps = (params.warps === undefined) ? 8 : params.warps;\n    this.epi = (params.epi === undefined) ? 10 : params.epi;\n    this.units = (params.units === undefined) ? \"in\" : params.units;\n    this.visibleRows = (params.visibleRows === undefined) ? [] : params.visibleRows;\n    this.pattern = (params.pattern === undefined) ? [] : params.pattern;\n    this.connections = (params.connections === undefined)? [] : params.connections;\n    this.labels = (params.labels === undefined)? [] : params.labels;\n    this.masks = (params.masks === undefined)? [] : params.masks;\n    this.notes = (params.notes === undefined)? \"\" : params.notes;\n\n\n\n    if(params.loom === undefined) {\n      this.loom = new Loom('frame', this.wefts, this.warps, 8, 10);\n\n    } else {\n\n      this.loom = new Loom(params.loom.type, this.wefts, this.warps, params.loom.num_frames, params.loom.num_treadles);\n      if(params.loom.threading != undefined) this.loom.threading = params.loom.threading;\n      if(params.loom.tieup != undefined) this.loom.tieup = params.loom.tieup;\n      if(params.loom.treadling != undefined) this.loom.treadling = params.loom.treadling;\n    }\n\n  \n\n    //nothing has been added, load with 2 mateials and 1 shuttle on each material\n    if(params.shuttles === undefined){\n\n      const randomColor = Math.floor(Math.random()*16777215).toString(16);\n\n      let s0 = new Shuttle({id: 0, name: 'Color 1', type: 0,  thickness:50, color: '#333333', visible: true, insert:false, notes: \"\"});\n      let s1 = new Shuttle({id: 1, name: 'Color 2', type: 0, thickness:50, color: '#'+randomColor, visible:true, insert:false, notes: \"\"});\n      let s2 = new Shuttle({id: 2, name: 'Conductive', type: 1, thickness:50, color: '#61c97d', visible:true, insert:false, notes: \"\"});\n      this.shuttles = [s0, s1, s2];\n\n    }else{\n\n      var shuttles = params.shuttles\n      var sd = [];\n      for (var i in shuttles) {\n        var s = new Shuttle(shuttles[i]);\n        sd.push(s);\n      }\n      this.shuttles = sd;\n    }\n\n\n    //automatically create 4\n    if(params.warp_systems === undefined){\n\n      let s0 = new System({id: 0, name: 'Warp System 1', visible: true, notes: \"\"});\n      let s1 = new System({id: 1, name: 'Warp System 2', visible: true, notes: \"\"});\n      let s2 = new System({id: 2, name: 'Warp System 3', visible: true, notes: \"\"});\n      let s3 = new System({id: 3, name: 'Warp System 4', visible: true, notes: \"\"});\n      this.warp_systems = [s0, s1, s2, s3];\n    }else{\n      var systems = params.warp_systems\n          var sd = [];\n          for (var i in systems) {\n            var sys = new System(systems[i]);\n            sd.push(sys);\n          }\n        this.warp_systems = sd;\n      \n      while(this.warp_systems.length  = patterns[i];\n            const formatted: Pattern = new Pattern(single_pattern); \n            pts.push(formatted);\n          }\n        this.patterns = pts;\n    }\n\n\n    //turn this off for now\n   // var fill_pattern = this.makeRandomPattern(this.loom.num_frames, this.loom.num_treadles);\n\n    this.pattern = [];\n    for(var ii = 0; ii  = [];\n          for (i in patterns) {\n            pts.push(new Pattern(patterns[i]));\n          }\n        this.patterns = pts;\n    } else if (params.loom.threading !== undefined && params.loom.treadling !== undefined && params.loom.tieup !== undefined) {\n      this.recalculateDraft(params.loom.tieup, params.loom.treadling, params.loom.threading);\n    }\n\n\n\n  \n    this.pattern = [];\n    for(var ii = 0; ii >();\n      for(var i = 0; i  this.wefts) return false;\n    if(j  this.warps) return false;\n    return true;\n  }\n  //assumes i is the draft row\n  isUp(i:number, j:number) : boolean{\n    if ( i > -1 && i  -1 && j  -1 && i  -1 && j ){\n\n    //repopulate the system map\n    this.colSystemPattern = [];\n    for(let i = 0; i ){\n\n    //repopulate the system map\n    this.rowSystemPattern = [];\n    for(let i = 0; i ){\n\n    //repopulate the system map\n    this.rowShuttlePattern = []\n    for(let i = 0; i ){\n\n    //repopulate the system map\n    this.colShuttlePattern = []\n    for(let i = 0; i  -1 && i  -1 && j  = [];\n    const to_delete: Array = [];\n\n    //make a list of rows that contains the number of set cells\n    this.pattern.forEach(row => {\n      const active_cells: Array = row.filter(cell => (cell.isSet()));\n      rowmap.push(active_cells.length);\n    });\n\n    console.log(\"row map\", rowmap);\n\n    let delete_top: number = 0;\n    let top_hasvalue: boolean = false;\n    \n    //scan from top and bottom to see how many rows we shoudl delete\n    for(let ndx = 0; ndx = 0; ndx--){\n      if(rowmap[ndx] == 0 && !bottom_hasvalue){\n        delete_bottom++;\n      }else{\n        bottom_hasvalue = true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * removes any boundary cols that are unset\n   * @return returns true if it deleted all the cols\n   */\n  trimUnsetCols(){\n    return false;\n  }\n\n  deleteNRowsFromFront(n: number) {\n      this.wefts -= n;\n      this.rowShuttleMapping.splice(0, n);\n      this.rowSystemMapping.splice(0, n);\n      this.pattern.splice(0, n);\n      //this.mask.splice(i, n);\n      this.loom.treadling.splice(0,n);\n      this.updateVisible();\n  }\n\n  deleteNRowsFromBack(n: number) {\n    this.wefts -= n;\n    this.rowShuttleMapping.splice(-n, n);\n    this.rowSystemMapping.splice(-n, n);\n    this.pattern.splice(-n, n);\n    //this.mask.splice(i, n);\n    this.loom.treadling.splice(-n,n);\n    this.updateVisible();\n}\n  \n\n    //insert a number of rows after the one shown at screen index si\n  insertRows(amount: number) {\n    \n    var row = [];\n    for(var i = 0; i  index) {\n  //       c.start.y += offset;\n  //     }\n  //     if (c.end.y > index) {\n  //       c.end.y += offset;\n  //     }\n  //   }\n  // }\n\n\n\n  // splicePatternCol(i: number, n:number, val:any){\n  //   for(var i = 0; i  0; i--) {\n  //     var idx = Math.min(max, i);\n  //     this.rowShuttleMapping.splice(idx,0,shuttle.id);\n  //     this.mask.splice(idx,0,data[i - 1]);\n  //   }\n  // }\n\n\n  getWeftSystemCode(index) {\n    var row = this.visibleRows[index];\n    var id = this.rowSystemMapping[row];\n    var system = this.weft_systems[id];\n\n    return String.fromCharCode(97 + system.id);\n  }\n\n  getWarpSystemCode(index) {\n\n     var col = this.colSystemMapping[index];\n     var system = this.warp_systems[col];\n\n    return  String.fromCharCode(97 + system.id);\n  }\n\n\n  getColor(index) {\n    var row = this.visibleRows[index];\n    var id = this.rowShuttleMapping[row];\n    var shuttle = this.shuttles[id];\n\n    return shuttle.color;\n  }\n\n  getColorCol(index) {\n\n\n    var col = this.colShuttleMapping[index];\n    var shuttle = this.shuttles[col];\n\n    return shuttle.color;\n  }\n\n/***\n   * updates the draft based on changes that happened within the threading.\n   * @param update{i: threading frame, j: threading warp, val: true or false for setting}\n   * more than one update object may be sent in the case where a thread is switching from one frame to another\n   * @returns (nothing) in the future - this can return the specific points to update on the draft\n   */  \n  updateDraftFromThreading(updates){\n\n    for(var u in updates){\n\n      if(updates[u].i !== undefined){\n\n        var idxs = this.loom.getAffectedDrawdownPoints({warp: updates[u].j, frame: updates[u].i});\n        var conflicts = [];\n\n        for(var i = 0; i = 0; ndx--){\n        if(this.pattern[i][ndx].isUp()) return true;\n      }\n      return false;\n  }\n\n\n  /***\n  If this doesn't have east set, then there is nothing to the west\n  */\n  setWestNeighbors(i:number, j:number){\n\n      for(var ndx = j-1; ndx >= 0; ndx--){\n        this.pattern[i][ndx].setEast();\n        if(this.pattern[i][ndx].isUp()) return;\n      }\n\n      return;\n  }\n\n  unsetWestNeighbors(i:number, j:number){\n\n      //there is something else for the western cells to reference\n      if(this.hasEastNeighbor(i,j)) return; \n\n      //unset until you find the next set cell\n      for(var ndx = j-1; ndx >= 0; ndx--){\n        this.pattern[i][ndx].unsetEast(); \n        if(this.pattern[i][ndx].isUp()) return;\n      }\n\n      return;\n  }\n\n\n  //searches to the east (on this row only) for an interlacement\n  hasEastNeighbor(i:number, j:number): boolean{\n      \n      for(var ndx = j+1; ndx = 0; ndx--){\n        if(this.rowShuttleMapping[ndx] === shuttle_id){\n          if(this.pattern[ndx][j].isUp()) return true;\n          if(this.hasWestNeighbor(ndx,j)) return true;\n          if(this.hasEastNeighbor(ndx,j)) return true;\n        }\n      }\n      return false;\n  }\n\n  //searches rows to the north for any interlacement on the same shuttle\n  setNorthNeighbors(i:number, j:number, shuttle_id: number): boolean{\n      var c: Cell;\n\n      for(var ndx = i-1; ndx >= 0; ndx--){\n        if(this.rowShuttleMapping[ndx] === shuttle_id){\n          \n             \n\n          for(var col = 0; col  0 && i  0 && i  0 && i  0 && i  0 && i  0 && i  v === shuttle.id ? acc.concat([idx]) : acc, []);\n\n      //screen rows are reversed to go from bottom to top\n      //[row index] -> (indexes where there is interlacement)\n      let path = [];\n      for (var i = 0; i  v.isUp() ? overs.concat([idx]) : overs, []);\n\n        //only push the rows with at least one interlacement     \n        if(overs.length > 0 && overs.length  = path[k].overs; \n\n        let next_path = this.getNextPath(path, k);\n\n        let min_ndx:number = overs.shift();\n        let max_ndx:number = overs.pop();\n        \n        let next_min_ndx:number;\n        let next_max_ndx:number;\n        \n        if(next_path.row !== -1 ){\n         \n          next_max_ndx = next_path.overs[next_path.overs.length-1];\n          next_min_ndx = next_path.overs[0];\n\n        }else{\n          next_min_ndx = min_ndx;\n          next_max_ndx = max_ndx;\n        }  \n\n\n\n        let moving_left:boolean = (k%2 === 0 && shuttle.insert) || (k%2 !== 0 && !shuttle.insert);\n\n        if(moving_left){\n          if(started) max_ndx = Math.max(max_ndx, last.ndx);\n          min_ndx = Math.min(min_ndx, next_min_ndx);\n        } else {\n          max_ndx = Math.max(max_ndx, next_max_ndx);\n          if(started) min_ndx = Math.min(min_ndx, last.ndx);\n\n        }\n       \n        //draw upwards if required\n        if(started){\n\n          \n         // console.log(\"row/last.row\", row, last.row);\n          // for(let j = last.row-1; j > row; j--){\n          //  if(moving_left) this.setNorthSouth(j, last.ndx+1);\n          //  else this.setNorthSouth(j, last.ndx-1);\n          // }\n        }\n\n        //set by lookiing at the ends ends\n        if(moving_left){\n\n          if(started){\n             this.setSouth(row,max_ndx+1); //set where it came from\n          } \n          \n          this.setWest(row, max_ndx+1);\n\n          this.setNorth(row, min_ndx-1);\n          this.setEast(row, min_ndx-1);\n\n          last.ndx = min_ndx;\n\n        }else{\n\n          if(started){\n            this.setSouth(row, min_ndx-1);\n          }\n\n          this.setEast(row, min_ndx-1);\n          \n          this.setNorth(row, max_ndx+1);\n          this.setWest(row, max_ndx+1);\n          \n          last.ndx = max_ndx;\n\n        } \n\n        //set in between\n        for(i = min_ndx; i >} - the pattern used to fill the area.\n   * @param {string} - the type of logic used to fill selected area.\n   * @returns {void}\n   */\n  public fillArea(\n    selection: Selection, \n    pattern: Pattern, \n    type: string\n  ) {\n\n    console.log(\"fill area called\");\n    console.log(selection, pattern, type);\n\n    var updates = [];\n    \n    var screen_i = Math.min(selection.start.si, selection.end.si)\n    const draft_j = Math.min(selection.start.j, selection.end.j);\n  \n    const rows = pattern.height;\n    const cols = pattern.width;\n\n    var w,h;\n\n    w = Math.ceil(selection.width);\n    h = Math.ceil(selection.height);\n\n\n    if(selection.target.id === \"warp-systems\"){\n      h = pattern.height;\n      screen_i = 0;\n    } \n    if(selection.target.id === \"weft-systems\"){\n      w = pattern.width;\n    } \n\n    if(selection.target.id === \"warp-materials\"){\n       h = pattern.height;\n       screen_i = 0;\n    }\n    if(selection.target.id === \"weft-materials\"){\n      w = pattern.width;\n    } \n\n    //cycle through each visible row/column of the selection\n    for (var i = 0; i >} - the pattern used to fill the area.\n   * @param {string} - the type of logic used to fill selected area.\n   * @returns {void}\n   */\n    public fill(\n      pattern: Array>, \n      type: string\n    ) {\n  \n      \n      const rows = pattern.length;\n      const cols = pattern[0].length;\n  \n      var w,h;\n  \n      w = this.warps;\n      h = this.wefts;\n  \n  \n      //cycle through each visible row/column of the draft\n      for (var i = 0; i \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryState.html":{"url":"interfaces/HistoryState.html","title":"interface - HistoryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryState\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/timeline.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        draft\n                                    \n                                \n                                \n                                    \n                                        draft:     Draft\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Draft\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Draft } from './draft';\nimport {cloneDeep, now} from 'lodash';\n\n\n\ninterface HistoryState {\n  draft: Draft;\n}\n/**\n * Definition of history state object.\n * @class\n */\nexport class Timeline {\n  active_id = 0;\n  max_size = 10;\n  undo_disabled: boolean;\n  redo_disabled: boolean;\n  timeline: Array; //new states are always pushed to front of draft\n\n  constructor() {\n   \n  this.active_id = 0;\n \tthis.timeline = [];\n \tthis.undo_disabled = true;\n \tthis.redo_disabled = true;\n\n  }\n \n\n \n\n  public addHistoryState(draft:Draft):void{\n\n    var state = {\n      draft: cloneDeep(draft),\n    }\n\n    //we are looking at the most recent state\n    if(this.active_id > 0){\n\n\n      //erase all states until you get to the active row\n      this.timeline.splice(0, this.active_id);\n      this.active_id = 0;\n      this.redo_disabled = true;\n\n    }\n\n    //add the new element to position 0\n    var len = this.timeline.unshift(state);\n    if(len > this.max_size) this.timeline.pop();\n\n    if(this.timeline.length > 1) this.undo_disabled = false;\n\n    this.logState(draft);\n\n  }\n\n  \n  //called on redo\n  public restoreNextHistoryState(): Draft{\n\n    if(this.active_id == 0) return; \n\n  \tthis.active_id--;\n\n    console.log('restoring state', this.active_id);\n    if(this.active_id == 0) this.redo_disabled = true;\n\n    return this.timeline[this.active_id].draft;\n    \n\n  }\n\n  //called on undo\n   public restorePreviousHistoryState():Draft{\n\n     this.active_id++;\n\n      //you've hit the end of available states to restore\n     if(this.active_id >= this.timeline.length){\n        this.active_id--;\n        this.undo_disabled = true;\n        return null; \n     } \n\n     console.log(\"restoring state \", this.active_id);\n     this.redo_disabled = false;\n     return this.timeline[this.active_id].draft;\n      \n  }\n\n  public logState(draft: Draft){\n\n  //this just lags on big drafts\n  if(draft.warps*draft.wefts > 10000) return;\n\n  var timestamp = Math.floor(Date.now() / 1000);\n  var theJSON = JSON.stringify(draft);\n  if(theJSON.length \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ink.html":{"url":"interfaces/Ink.html","title":"interface - Ink","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Ink\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mixer/provider/ink.service.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        dx\n                                    \n                                \n                                \n                                    \n                                        dx:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        uses_mask\n                                    \n                                \n                                \n                                    \n                                        uses_mask:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\n\n\n\ninterface Ink{\n  value: string;\n  viewValue: string;\n  dx: string;\n  icon: string;\n  selected: boolean;\n  uses_mask: boolean;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InkService {\n  private inks: Array;\n  private selected: Ink;\n\n\n  constructor() { \n\n\n    this.inks = [\n      {value: 'neq', viewValue: 'Reversing Ink', dx: \"REVERSING INK compares this pattern with what is underneight and draws black square when they are not equal\", icon: \"fas fa-adjust\", selected: false, uses_mask:false},\n      {value: 'up', viewValue: 'Setting Ink', dx: \"SETTING INK sets this pattern within the draft no matter what is under it\", icon: \"fas fa-square\",  selected: false, uses_mask:false},\n      {value: 'down', viewValue: 'Erasing Ink', dx: \"ERASING INK places all the heddle downs atop the draft underneith it\", icon: \"far fa-square\",  selected: false, uses_mask:false},\n      {value: 'unset', viewValue: 'Removing Ink', dx: \"REMOVING INK removes the use of this heddle in the draft (for shape and inlay weaving)\", icon: \"fas fa-times\", selected: false, uses_mask:false},\n      {value: 'and', viewValue: 'Masking Ink', dx: \"MASKING INK only reveals bottom pattern in areas where this pattern is black\", icon: \"fas fa-mask\", selected: false, uses_mask:true},\n      {value: 'or', viewValue: 'Overlaying Ink', dx: \"OVERLAYING INK copies all black pattern cells atop the draft\", icon: \"fas fa-plus\", selected: false, uses_mask:false}\n    ];\n  \n    this.select('neq');\n\n    \n  \n  }\n\n  getInks():Array{\n    return this.inks;\n  }\n\n  selectedHasMask():boolean{\n    const mode:Ink = this.getInk(this.getSelected());\n    return mode.uses_mask;\n  }\n\n  /**\n   * A function to retreive an ink by name. \n   * @param name the name of the ink we're looking to retreive\n   * @returns the Ink associated with that name, or null if nothing was found\n   */\n\n   getInk(name: string): Ink {\n    let found: Ink = null;\n \n    this.inks.forEach( ink => {\n       if(ink.value === name) found =  ink;\n    });\n    return found;\n   }\n \n   /**\n    * sets false to the selection parameter on all the modes. \n    */\n   clearSelection(){\n     this.selected = null\n   }\n \n /**\n  * clears previous selections and selects ink associated with name\n  * @param name a string corresponding to the name of this ink\n  * @returns boolean cooresponding to whether or not a selection was made \n  */\n   select(name: string): boolean{\n \n     let found: boolean = false;\n     this.clearSelection();\n \n     this.inks.forEach(ink => {\n       if(ink.value === name){\n         ink.selected = true;\n         found = true;\n         this.selected = ink;\n       } else{\n         ink.selected = false;\n       }\n    });\n \n    return found;\n   }\n \n \n   /**\n    * Get the current ink name that is selected\n    * @returns returns the selected ink name\n    */\n   getSelected():string{\n     return this.selected.value;\n   }\n \n   /**\n    * checks if a user specified ink is selected\n    * @param name the name of the mode we are asking about\n    * @returns boolean describing if it was selected or not\n    */\n   isSelected(name:string):boolean{\n     return(name == this.selected.value);\n   }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Interlacement.html":{"url":"interfaces/Interlacement.html","title":"interface - Interlacement","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Interlacement\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/datatypes.ts\n        \n\n            \n                Description\n            \n            \n                represents a location within a draft.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        i\n                                    \n                                \n                                \n                                    \n                                        i:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        j\n                                    \n                                \n                                \n                                    \n                                        j:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        si\n                                    \n                                \n                                \n                                    \n                                        si:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Cell } from \"./cell\";\n\n/**\n * describes a point using x,y coordinates\n * often used for referencing mouse and/or screen drawing positions\n */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * represents a location within a draft.\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param si is the location of this cell within the current view (where the view may be hiding some rows)\n *        this value can be de-indexed to absolute position in the rows using draft.visibleRows array\n * @example const i: number = draft.visibleRows[si];\n */\ninterface Interlacement {\n  i: number;  \n  j: number;  \n  si: number; \n}\n\n/**\n * represents a location within a draft as well as the value to be placed at that location\n * used by Loom to stage updates before settting them\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param val the value to be assigned at the given location\n */\n\n interface InterlacementVal {\n  i: number;  \n  j: number \n  val: boolean; \n}\n\n\n/**\n * returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n */\ninterface LoomCoords{\n  ndx: Interlacement\n  frame: number,\n  treadle:number,\n  drawdown: Array>\n}\n\n\n\n\n/**\n * Describes a rectangle on the screen.\n * @param topleft - position of this rectanble\n * @param width - the width of the rectangle\n * @param height - the height of this rectanble.\n */\ninterface Bounds {\n  topleft: Point;  //row on draft\n  width: number;  //column on draft \n  height: number; //corresponding screen row\n}\n\n/**\n * A type to communicate locations on the loom that have been updated in response to a given action\n */\ninterface LoomUpdate {\n  threading: Array,\n  treadling: Array,\n  tieup: Array>\n}\n\ninterface LoomTypes {\n  value: string;\n  viewValue: string;\n}\n\ninterface MaterialTypes {\n  value: number;\n  viewValue: string;\n}\n\ninterface DensityUnits {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface ViewModes {\n  value: string;\n  viewValue: string;\n}\n\n// interface ToolModes{\n//   value: string; \n//   viewValue: string;\n//   icon: string;\n//   menu: string;\n\n// }\n\nexport{\n  Point,\n  Interlacement,\n  InterlacementVal,\n  Bounds,\n  LoomCoords,\n  LoomUpdate,\n  LoomTypes,\n  DensityUnits,\n  ViewModes,\n  MaterialTypes\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterlacementVal.html":{"url":"interfaces/InterlacementVal.html","title":"interface - InterlacementVal","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  InterlacementVal\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/datatypes.ts\n        \n\n            \n                Description\n            \n            \n                represents a location within a draft as well as the value to be placed at that locationused by Loom to stage updates before settting them\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        i\n                                    \n                                \n                                \n                                    \n                                        i:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        j\n                                    \n                                \n                                \n                                    \n                                        j:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        val\n                                    \n                                \n                                \n                                    \n                                        val:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Cell } from \"./cell\";\n\n/**\n * describes a point using x,y coordinates\n * often used for referencing mouse and/or screen drawing positions\n */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * represents a location within a draft.\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param si is the location of this cell within the current view (where the view may be hiding some rows)\n *        this value can be de-indexed to absolute position in the rows using draft.visibleRows array\n * @example const i: number = draft.visibleRows[si];\n */\ninterface Interlacement {\n  i: number;  \n  j: number;  \n  si: number; \n}\n\n/**\n * represents a location within a draft as well as the value to be placed at that location\n * used by Loom to stage updates before settting them\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param val the value to be assigned at the given location\n */\n\n interface InterlacementVal {\n  i: number;  \n  j: number \n  val: boolean; \n}\n\n\n/**\n * returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n */\ninterface LoomCoords{\n  ndx: Interlacement\n  frame: number,\n  treadle:number,\n  drawdown: Array>\n}\n\n\n\n\n/**\n * Describes a rectangle on the screen.\n * @param topleft - position of this rectanble\n * @param width - the width of the rectangle\n * @param height - the height of this rectanble.\n */\ninterface Bounds {\n  topleft: Point;  //row on draft\n  width: number;  //column on draft \n  height: number; //corresponding screen row\n}\n\n/**\n * A type to communicate locations on the loom that have been updated in response to a given action\n */\ninterface LoomUpdate {\n  threading: Array,\n  treadling: Array,\n  tieup: Array>\n}\n\ninterface LoomTypes {\n  value: string;\n  viewValue: string;\n}\n\ninterface MaterialTypes {\n  value: number;\n  viewValue: string;\n}\n\ninterface DensityUnits {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface ViewModes {\n  value: string;\n  viewValue: string;\n}\n\n// interface ToolModes{\n//   value: string; \n//   viewValue: string;\n//   icon: string;\n//   menu: string;\n\n// }\n\nexport{\n  Point,\n  Interlacement,\n  InterlacementVal,\n  Bounds,\n  LoomCoords,\n  LoomUpdate,\n  LoomTypes,\n  DensityUnits,\n  ViewModes,\n  MaterialTypes\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoomCoords.html":{"url":"interfaces/LoomCoords.html","title":"interface - LoomCoords","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LoomCoords\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/datatypes.ts\n        \n\n            \n                Description\n            \n            \n                returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        drawdown\n                                    \n                                \n                                \n                                    \n                                        drawdown:     Cell[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Cell[][]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        frame\n                                    \n                                \n                                \n                                    \n                                        frame:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        ndx\n                                    \n                                \n                                \n                                    \n                                        ndx:     Interlacement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Interlacement\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        treadle\n                                    \n                                \n                                \n                                    \n                                        treadle:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Cell } from \"./cell\";\n\n/**\n * describes a point using x,y coordinates\n * often used for referencing mouse and/or screen drawing positions\n */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * represents a location within a draft.\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param si is the location of this cell within the current view (where the view may be hiding some rows)\n *        this value can be de-indexed to absolute position in the rows using draft.visibleRows array\n * @example const i: number = draft.visibleRows[si];\n */\ninterface Interlacement {\n  i: number;  \n  j: number;  \n  si: number; \n}\n\n/**\n * represents a location within a draft as well as the value to be placed at that location\n * used by Loom to stage updates before settting them\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param val the value to be assigned at the given location\n */\n\n interface InterlacementVal {\n  i: number;  \n  j: number \n  val: boolean; \n}\n\n\n/**\n * returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n */\ninterface LoomCoords{\n  ndx: Interlacement\n  frame: number,\n  treadle:number,\n  drawdown: Array>\n}\n\n\n\n\n/**\n * Describes a rectangle on the screen.\n * @param topleft - position of this rectanble\n * @param width - the width of the rectangle\n * @param height - the height of this rectanble.\n */\ninterface Bounds {\n  topleft: Point;  //row on draft\n  width: number;  //column on draft \n  height: number; //corresponding screen row\n}\n\n/**\n * A type to communicate locations on the loom that have been updated in response to a given action\n */\ninterface LoomUpdate {\n  threading: Array,\n  treadling: Array,\n  tieup: Array>\n}\n\ninterface LoomTypes {\n  value: string;\n  viewValue: string;\n}\n\ninterface MaterialTypes {\n  value: number;\n  viewValue: string;\n}\n\ninterface DensityUnits {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface ViewModes {\n  value: string;\n  viewValue: string;\n}\n\n// interface ToolModes{\n//   value: string; \n//   viewValue: string;\n//   icon: string;\n//   menu: string;\n\n// }\n\nexport{\n  Point,\n  Interlacement,\n  InterlacementVal,\n  Bounds,\n  LoomCoords,\n  LoomUpdate,\n  LoomTypes,\n  DensityUnits,\n  ViewModes,\n  MaterialTypes\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoomTypes.html":{"url":"interfaces/LoomTypes.html","title":"interface - LoomTypes","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LoomTypes\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/datatypes.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Cell } from \"./cell\";\n\n/**\n * describes a point using x,y coordinates\n * often used for referencing mouse and/or screen drawing positions\n */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * represents a location within a draft.\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param si is the location of this cell within the current view (where the view may be hiding some rows)\n *        this value can be de-indexed to absolute position in the rows using draft.visibleRows array\n * @example const i: number = draft.visibleRows[si];\n */\ninterface Interlacement {\n  i: number;  \n  j: number;  \n  si: number; \n}\n\n/**\n * represents a location within a draft as well as the value to be placed at that location\n * used by Loom to stage updates before settting them\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param val the value to be assigned at the given location\n */\n\n interface InterlacementVal {\n  i: number;  \n  j: number \n  val: boolean; \n}\n\n\n/**\n * returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n */\ninterface LoomCoords{\n  ndx: Interlacement\n  frame: number,\n  treadle:number,\n  drawdown: Array>\n}\n\n\n\n\n/**\n * Describes a rectangle on the screen.\n * @param topleft - position of this rectanble\n * @param width - the width of the rectangle\n * @param height - the height of this rectanble.\n */\ninterface Bounds {\n  topleft: Point;  //row on draft\n  width: number;  //column on draft \n  height: number; //corresponding screen row\n}\n\n/**\n * A type to communicate locations on the loom that have been updated in response to a given action\n */\ninterface LoomUpdate {\n  threading: Array,\n  treadling: Array,\n  tieup: Array>\n}\n\ninterface LoomTypes {\n  value: string;\n  viewValue: string;\n}\n\ninterface MaterialTypes {\n  value: number;\n  viewValue: string;\n}\n\ninterface DensityUnits {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface ViewModes {\n  value: string;\n  viewValue: string;\n}\n\n// interface ToolModes{\n//   value: string; \n//   viewValue: string;\n//   icon: string;\n//   menu: string;\n\n// }\n\nexport{\n  Point,\n  Interlacement,\n  InterlacementVal,\n  Bounds,\n  LoomCoords,\n  LoomUpdate,\n  LoomTypes,\n  DensityUnits,\n  ViewModes,\n  MaterialTypes\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoomUpdate.html":{"url":"interfaces/LoomUpdate.html","title":"interface - LoomUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LoomUpdate\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/datatypes.ts\n        \n\n            \n                Description\n            \n            \n                A type to communicate locations on the loom that have been updated in response to a given action\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        threading\n                                    \n                                \n                                \n                                    \n                                        threading:     InterlacementVal[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InterlacementVal[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        tieup\n                                    \n                                \n                                \n                                    \n                                        tieup:     InterlacementVal[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InterlacementVal[][]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        treadling\n                                    \n                                \n                                \n                                    \n                                        treadling:     InterlacementVal[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InterlacementVal[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Cell } from \"./cell\";\n\n/**\n * describes a point using x,y coordinates\n * often used for referencing mouse and/or screen drawing positions\n */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * represents a location within a draft.\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param si is the location of this cell within the current view (where the view may be hiding some rows)\n *        this value can be de-indexed to absolute position in the rows using draft.visibleRows array\n * @example const i: number = draft.visibleRows[si];\n */\ninterface Interlacement {\n  i: number;  \n  j: number;  \n  si: number; \n}\n\n/**\n * represents a location within a draft as well as the value to be placed at that location\n * used by Loom to stage updates before settting them\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param val the value to be assigned at the given location\n */\n\n interface InterlacementVal {\n  i: number;  \n  j: number \n  val: boolean; \n}\n\n\n/**\n * returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n */\ninterface LoomCoords{\n  ndx: Interlacement\n  frame: number,\n  treadle:number,\n  drawdown: Array>\n}\n\n\n\n\n/**\n * Describes a rectangle on the screen.\n * @param topleft - position of this rectanble\n * @param width - the width of the rectangle\n * @param height - the height of this rectanble.\n */\ninterface Bounds {\n  topleft: Point;  //row on draft\n  width: number;  //column on draft \n  height: number; //corresponding screen row\n}\n\n/**\n * A type to communicate locations on the loom that have been updated in response to a given action\n */\ninterface LoomUpdate {\n  threading: Array,\n  treadling: Array,\n  tieup: Array>\n}\n\ninterface LoomTypes {\n  value: string;\n  viewValue: string;\n}\n\ninterface MaterialTypes {\n  value: number;\n  viewValue: string;\n}\n\ninterface DensityUnits {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface ViewModes {\n  value: string;\n  viewValue: string;\n}\n\n// interface ToolModes{\n//   value: string; \n//   viewValue: string;\n//   icon: string;\n//   menu: string;\n\n// }\n\nexport{\n  Point,\n  Interlacement,\n  InterlacementVal,\n  Bounds,\n  LoomCoords,\n  LoomUpdate,\n  LoomTypes,\n  DensityUnits,\n  ViewModes,\n  MaterialTypes\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MaterialTypes.html":{"url":"interfaces/MaterialTypes.html","title":"interface - MaterialTypes","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MaterialTypes\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/datatypes.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Cell } from \"./cell\";\n\n/**\n * describes a point using x,y coordinates\n * often used for referencing mouse and/or screen drawing positions\n */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * represents a location within a draft.\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param si is the location of this cell within the current view (where the view may be hiding some rows)\n *        this value can be de-indexed to absolute position in the rows using draft.visibleRows array\n * @example const i: number = draft.visibleRows[si];\n */\ninterface Interlacement {\n  i: number;  \n  j: number;  \n  si: number; \n}\n\n/**\n * represents a location within a draft as well as the value to be placed at that location\n * used by Loom to stage updates before settting them\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param val the value to be assigned at the given location\n */\n\n interface InterlacementVal {\n  i: number;  \n  j: number \n  val: boolean; \n}\n\n\n/**\n * returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n */\ninterface LoomCoords{\n  ndx: Interlacement\n  frame: number,\n  treadle:number,\n  drawdown: Array>\n}\n\n\n\n\n/**\n * Describes a rectangle on the screen.\n * @param topleft - position of this rectanble\n * @param width - the width of the rectangle\n * @param height - the height of this rectanble.\n */\ninterface Bounds {\n  topleft: Point;  //row on draft\n  width: number;  //column on draft \n  height: number; //corresponding screen row\n}\n\n/**\n * A type to communicate locations on the loom that have been updated in response to a given action\n */\ninterface LoomUpdate {\n  threading: Array,\n  treadling: Array,\n  tieup: Array>\n}\n\ninterface LoomTypes {\n  value: string;\n  viewValue: string;\n}\n\ninterface MaterialTypes {\n  value: number;\n  viewValue: string;\n}\n\ninterface DensityUnits {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface ViewModes {\n  value: string;\n  viewValue: string;\n}\n\n// interface ToolModes{\n//   value: string; \n//   viewValue: string;\n//   icon: string;\n//   menu: string;\n\n// }\n\nexport{\n  Point,\n  Interlacement,\n  InterlacementVal,\n  Bounds,\n  LoomCoords,\n  LoomUpdate,\n  LoomTypes,\n  DensityUnits,\n  ViewModes,\n  MaterialTypes\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point.html":{"url":"interfaces/Point.html","title":"interface - Point","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Point\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/datatypes.ts\n        \n\n            \n                Description\n            \n            \n                describes a point using x,y coordinatesoften used for referencing mouse and/or screen drawing positions\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Cell } from \"./cell\";\n\n/**\n * describes a point using x,y coordinates\n * often used for referencing mouse and/or screen drawing positions\n */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * represents a location within a draft.\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param si is the location of this cell within the current view (where the view may be hiding some rows)\n *        this value can be de-indexed to absolute position in the rows using draft.visibleRows array\n * @example const i: number = draft.visibleRows[si];\n */\ninterface Interlacement {\n  i: number;  \n  j: number;  \n  si: number; \n}\n\n/**\n * represents a location within a draft as well as the value to be placed at that location\n * used by Loom to stage updates before settting them\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param val the value to be assigned at the given location\n */\n\n interface InterlacementVal {\n  i: number;  \n  j: number \n  val: boolean; \n}\n\n\n/**\n * returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n */\ninterface LoomCoords{\n  ndx: Interlacement\n  frame: number,\n  treadle:number,\n  drawdown: Array>\n}\n\n\n\n\n/**\n * Describes a rectangle on the screen.\n * @param topleft - position of this rectanble\n * @param width - the width of the rectangle\n * @param height - the height of this rectanble.\n */\ninterface Bounds {\n  topleft: Point;  //row on draft\n  width: number;  //column on draft \n  height: number; //corresponding screen row\n}\n\n/**\n * A type to communicate locations on the loom that have been updated in response to a given action\n */\ninterface LoomUpdate {\n  threading: Array,\n  treadling: Array,\n  tieup: Array>\n}\n\ninterface LoomTypes {\n  value: string;\n  viewValue: string;\n}\n\ninterface MaterialTypes {\n  value: number;\n  viewValue: string;\n}\n\ninterface DensityUnits {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface ViewModes {\n  value: string;\n  viewValue: string;\n}\n\n// interface ToolModes{\n//   value: string; \n//   viewValue: string;\n//   icon: string;\n//   menu: string;\n\n// }\n\nexport{\n  Point,\n  Interlacement,\n  InterlacementVal,\n  Bounds,\n  LoomCoords,\n  LoomUpdate,\n  LoomTypes,\n  DensityUnits,\n  ViewModes,\n  MaterialTypes\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StartOptions.html":{"url":"interfaces/StartOptions.html","title":"interface - StartOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  StartOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modal/init/init.modal.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { color } from 'd3';\nimport { rest } from 'lodash';\nimport { Cell } from '../../../core/model/cell';\n\nimport { Loom } from '../../../core/model/loom';\nimport { Shuttle } from \"../../../core/model/shuttle\";\n\n\ninterface StartOptions {\n  value: string;\n  viewValue: string;\n}\n\n\n@Component({\n  selector: 'app-init',\n  templateUrl: './init.modal.html',\n  styleUrls: ['./init.modal.scss']\n})\n\n\n\n\nexport class InitModal implements OnInit {\n\n  opts: StartOptions[] = [\n      {value: 'new', viewValue: 'Begin New Draft'},\n      {value: 'ada', viewValue: 'Load an AdaCAD (.ada) File'},\n      {value: 'bmp', viewValue: 'Load a Bitmap (.bmp) File'},\n      {value: 'wif', viewValue: 'Load a WIF (.wif) File'}   \n    ];\n\n  //form: any = {};\n  selected:string = null;\n  loomtype:string = null;\n  valid:boolean = false; \n  draft: any = {};\n  loomtypes: any;\n  density_units: any;\n\n\n  constructor(private dialogRef: MatDialogRef, \n    @Inject(MAT_DIALOG_DATA) private data: any) {\n      console.log(data);\n      this.loomtypes = data.loomtypes;\n      this.density_units = data.density_units;\n  }\n\n  ngOnInit() {\n\n  }\n\n  handleFile(e: any) {\n\n    if (e.type === \"image\") this.processImageData(e);\n    else if (e.type === \"ada\") this.processDraftData(e);\n    else if (e.type === \"wif\") this.processWifData(e);\n    this.valid = true;\n\n  }\n\n  processImageData(obj: any) {\n\n    let e = obj.data;\n\n    this.draft.warps = e.width;\n    this.draft.wefts = e.height;\n\n    var img = e.data;\n    var data = [];\n\n    for (var i=0; i= 0; i--) {\n      reversedMapping.push(colToShuttleMapping[i]);\n    }\n\n    return reversedMapping;\n  }\n\n  getRowToShuttleMapping(e) {\n    var rowToShuttleMapping = [];\n\n    for (var i = 0; i \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewModes.html":{"url":"interfaces/ViewModes.html","title":"interface - ViewModes","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ViewModes\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/datatypes.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Cell } from \"./cell\";\n\n/**\n * describes a point using x,y coordinates\n * often used for referencing mouse and/or screen drawing positions\n */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * represents a location within a draft.\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param si is the location of this cell within the current view (where the view may be hiding some rows)\n *        this value can be de-indexed to absolute position in the rows using draft.visibleRows array\n * @example const i: number = draft.visibleRows[si];\n */\ninterface Interlacement {\n  i: number;  \n  j: number;  \n  si: number; \n}\n\n/**\n * represents a location within a draft as well as the value to be placed at that location\n * used by Loom to stage updates before settting them\n * @param i is the row/weft number (0 being at the top of the drawdown)\n * @param j is the column/warp number (0 being at the far left of the drawdown)\n * @param val the value to be assigned at the given location\n */\n\n interface InterlacementVal {\n  i: number;  \n  j: number \n  val: boolean; \n}\n\n\n/**\n * returns the assignments of frames and treadles for a given interlacement, as well as the drawdown for context\n */\ninterface LoomCoords{\n  ndx: Interlacement\n  frame: number,\n  treadle:number,\n  drawdown: Array>\n}\n\n\n\n\n/**\n * Describes a rectangle on the screen.\n * @param topleft - position of this rectanble\n * @param width - the width of the rectangle\n * @param height - the height of this rectanble.\n */\ninterface Bounds {\n  topleft: Point;  //row on draft\n  width: number;  //column on draft \n  height: number; //corresponding screen row\n}\n\n/**\n * A type to communicate locations on the loom that have been updated in response to a given action\n */\ninterface LoomUpdate {\n  threading: Array,\n  treadling: Array,\n  tieup: Array>\n}\n\ninterface LoomTypes {\n  value: string;\n  viewValue: string;\n}\n\ninterface MaterialTypes {\n  value: number;\n  viewValue: string;\n}\n\ninterface DensityUnits {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface ViewModes {\n  value: string;\n  viewValue: string;\n}\n\n// interface ToolModes{\n//   value: string; \n//   viewValue: string;\n//   icon: string;\n//   menu: string;\n\n// }\n\nexport{\n  Point,\n  Interlacement,\n  InterlacementVal,\n  Bounds,\n  LoomCoords,\n  LoomUpdate,\n  LoomTypes,\n  DensityUnits,\n  ViewModes,\n  MaterialTypes\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             firebaseConfig\n                        \n                    \n                    \n                        \n                            firebaseConfig:     \n    \n                        \n                    \n                        \n                            \n                                Default value: secrets\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             CanvasToBMP\n                        \n                    \n                    \n                        \n                            CanvasToBMP:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             DraftToWIF\n                        \n                    \n                    \n                        \n                            DraftToWIF:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             utilInstance\n                        \n                    \n                    \n                        \n                            utilInstance:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             httpOptions\n                        \n                    \n                    \n                        \n                            httpOptions:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             generateId\n                        \n                    \n                    \n                        \n                            generateId:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             secrets\n                        \n                    \n                    \n                        \n                            secrets:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ___karma__\n                        \n                    \n                    \n                        \n                            ___karma__:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             require\n                        \n                    \n                    \n                        \n                            require:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             context\n                        \n                    \n                    \n                        \n                            context:     \n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    7%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                e2e/app.po.ts\n            \n            \n                classe\n            \n            \n                AdaCADWeaverPage\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/modal/about/about.modal.ts\n            \n            \n                component\n            \n            \n                AboutModal\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/modal/init/init.modal.ts\n            \n            \n                component\n            \n            \n                InitModal\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                src/app/core/modal/init/init.modal.ts\n            \n            \n                interface\n            \n            \n                StartOptions\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/modal/material/material.modal.ts\n            \n            \n                component\n            \n            \n                MaterialModal\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                src/app/core/modal/pattern/pattern.modal.ts\n            \n            \n                component\n            \n            \n                PatternModal\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                src/app/core/modal/shuttles/shuttles.modal.ts\n            \n            \n                component\n            \n            \n                ShuttlesModal\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                src/app/core/model/cell.ts\n            \n            \n                classe\n            \n            \n                Cell\n            \n            \n                7 %\n                (3/41)\n            \n        \n        \n            \n                src/app/core/model/datatypes.ts\n            \n            \n                interface\n            \n            \n                Bounds\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/core/model/datatypes.ts\n            \n            \n                interface\n            \n            \n                DensityUnits\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/model/datatypes.ts\n            \n            \n                interface\n            \n            \n                Interlacement\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/core/model/datatypes.ts\n            \n            \n                interface\n            \n            \n                InterlacementVal\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/core/model/datatypes.ts\n            \n            \n                interface\n            \n            \n                LoomCoords\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/core/model/datatypes.ts\n            \n            \n                interface\n            \n            \n                LoomTypes\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/model/datatypes.ts\n            \n            \n                interface\n            \n            \n                LoomUpdate\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/core/model/datatypes.ts\n            \n            \n                interface\n            \n            \n                MaterialTypes\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/model/datatypes.ts\n            \n            \n                interface\n            \n            \n                Point\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/model/datatypes.ts\n            \n            \n                interface\n            \n            \n                ViewModes\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/model/draft.ts\n            \n            \n                classe\n            \n            \n                Draft\n            \n            \n                6 %\n                (6/98)\n            \n        \n        \n            \n                src/app/core/model/draft.ts\n            \n            \n                interface\n            \n            \n                DraftInterface\n            \n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                src/app/core/model/loom.ts\n            \n            \n                classe\n            \n            \n                Loom\n            \n            \n                21 %\n                (9/41)\n            \n        \n        \n            \n                src/app/core/model/pattern.ts\n            \n            \n                classe\n            \n            \n                Pattern\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                src/app/core/model/shuttle.ts\n            \n            \n                classe\n            \n            \n                Shuttle\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                src/app/core/model/system.ts\n            \n            \n                classe\n            \n            \n                System\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/app/core/model/timeline.ts\n            \n            \n                classe\n            \n            \n                Timeline\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/app/core/model/timeline.ts\n            \n            \n                interface\n            \n            \n                HistoryState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/core/model/util.ts\n            \n            \n                classe\n            \n            \n                Util\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                src/app/core/pipe/filter.pipe.ts\n            \n            \n                pipe\n            \n            \n                FilterPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/app/core/provider/pattern.service.ts\n            \n            \n                injectable\n            \n            \n                PatternService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/core/tool/materials/materials.component.ts\n            \n            \n                component\n            \n            \n                MaterialsComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/app/core/tool/notes/notes.component.ts\n            \n            \n                component\n            \n            \n                NotesComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/core/tool/patterns/patterns.component.ts\n            \n            \n                component\n            \n            \n                PatternsComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/app/core/tool/systems/systems.component.ts\n            \n            \n                component\n            \n            \n                SystemsComponent\n            \n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                src/app/core/topbar/topbar.component.ts\n            \n            \n                component\n            \n            \n                TopbarComponent\n            \n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                src/app/core/uploads/upload-form/upload-form.component.ts\n            \n            \n                component\n            \n            \n                UploadFormComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/app/core/uploads/upload.service.ts\n            \n            \n                injectable\n            \n            \n                UploadService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/app/core/uploads/upload.ts\n            \n            \n                classe\n            \n            \n                Upload\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/mixer/mixer.component.ts\n            \n            \n                component\n            \n            \n                MixerComponent\n            \n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                src/app/mixer/model/shape.ts\n            \n            \n                classe\n            \n            \n                Shape\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                src/app/mixer/palette/connection/connection.component.ts\n            \n            \n                component\n            \n            \n                ConnectionComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/mixer/palette/operation/operation.component.ts\n            \n            \n                component\n            \n            \n                OperationComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/mixer/palette/palette.component.ts\n            \n            \n                component\n            \n            \n                PaletteComponent\n            \n            \n                68 %\n                (47/69)\n            \n        \n        \n            \n                src/app/mixer/palette/snackbar/snackbar.component.ts\n            \n            \n                component\n            \n            \n                SnackbarComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/app/mixer/palette/subdraft/subdraft.component.ts\n            \n            \n                component\n            \n            \n                SubdraftComponent\n            \n            \n                25 %\n                (13/52)\n            \n        \n        \n            \n                src/app/mixer/palette/subdraft/subdraft.component.ts\n            \n            \n                interface\n            \n            \n                DesignActions\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/mixer/provider/designmodes.service.ts\n            \n            \n                injectable\n            \n            \n                DesignmodesService\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                src/app/mixer/provider/designmodes.service.ts\n            \n            \n                interface\n            \n            \n                DesignMode\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/mixer/provider/ink.service.ts\n            \n            \n                injectable\n            \n            \n                InkService\n            \n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                src/app/mixer/provider/ink.service.ts\n            \n            \n                interface\n            \n            \n                Ink\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/mixer/provider/layers.service.ts\n            \n            \n                injectable\n            \n            \n                LayersService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/mixer/tool/mixerdesign/mixerdesign.component.ts\n            \n            \n                component\n            \n            \n                MixerDesignComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/app/mixer/tool/mixerpatterns/mixerpatterns.component.ts\n            \n            \n                component\n            \n            \n                MixerPatternsComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/app/mixer/tool/mixerview/mixerview.component.ts\n            \n            \n                component\n            \n            \n                MixerViewComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/weaver/modal/connection/connection.modal.ts\n            \n            \n                classe\n            \n            \n                Connection\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/weaver/modal/connection/connection.modal.ts\n            \n            \n                classe\n            \n            \n                Point\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/weaver/modal/label/label.modal.ts\n            \n            \n                component\n            \n            \n                LabelModal\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/weaver/model/render.ts\n            \n            \n                classe\n            \n            \n                Render\n            \n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                src/app/weaver/model/selection.ts\n            \n            \n                classe\n            \n            \n                Selection\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                src/app/weaver/tool/loom/loom.component.ts\n            \n            \n                component\n            \n            \n                LoomComponent\n            \n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                src/app/weaver/tool/masks/masks.component.ts\n            \n            \n                component\n            \n            \n                MasksComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/weaver/tool/schematic/schematic.component.ts\n            \n            \n                component\n            \n            \n                SchematicComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/weaver/tool/weaverdesign/weaverdesign.component.ts\n            \n            \n                component\n            \n            \n                WeaverDesignComponent\n            \n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                src/app/weaver/tool/weaverpatterns/weaverpatterns.component.ts\n            \n            \n                component\n            \n            \n                WeaverPatternsComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/app/weaver/tool/weaverview/weaverview.component.ts\n            \n            \n                component\n            \n            \n                WeaverViewComponent\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                src/app/weaver/weaver.component.ts\n            \n            \n                component\n            \n            \n                WeaverComponent\n            \n            \n                33 %\n                (28/83)\n            \n        \n        \n            \n                src/app/weaver/weaver.component.ts\n            \n            \n                interface\n            \n            \n                DesignActions\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/weaver/weaver.component.ts\n            \n            \n                interface\n            \n            \n                DesignModes\n            \n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
