"use strict";(self.webpackChunkada_ca_ddocs=self.webpackChunkada_ca_ddocs||[]).push([[1497],{3592:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var t=n(5893),o=n(3905);const a={},c="warps",s={id:"howtodevelop/reference/drawdown/warps",title:"warps",description:"Gets the number of warps in a drawdown",source:"@site/docs/howtodevelop/reference/drawdown/warps.md",sourceDirName:"howtodevelop/reference/drawdown",slug:"/howtodevelop/reference/drawdown/warps",permalink:"/docs/howtodevelop/reference/drawdown/warps",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"devDocsSidebar",previous:{title:"setCellValue",permalink:"/docs/howtodevelop/reference/drawdown/setCellValue"},next:{title:"wefts",permalink:"/docs/howtodevelop/reference/drawdown/wefts"}},i={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Implementation",id:"implementation",level:2}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.ah)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"warps",children:"warps"}),"\n",(0,t.jsx)(r.p,{children:"Gets the number of warps in a drawdown"}),"\n",(0,t.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"drawdown",children:"Drawdown"})}),"\n",(0,t.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(r.p,{children:"number"}),"\n",(0,t.jsx)(r.p,{children:"The number of warps or 0 if the provided drawdown is null or empty"}),"\n",(0,t.jsx)(r.h2,{id:"implementation",children:"Implementation"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"let n = warps(d);\n"})}),"\n",(0,t.jsx)(r.p,{children:"n will be assigned the number of warps in d. This function is shorthand that can be used instead of calling d[0].length."})]})}function p(e={}){const{wrapper:r}={...(0,o.ah)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},3905:(e,r,n)=>{n.d(r,{ah:()=>d});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=t.createContext({}),d=function(e){var r=t.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},l={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(n),w=o,f=u["".concat(i,".").concat(w)]||u[w]||l[w]||a;return n?t.createElement(f,c(c({ref:r},p),{},{components:n})):t.createElement(f,c({ref:r},p))}));p.displayName="MDXCreateElement"}}]);