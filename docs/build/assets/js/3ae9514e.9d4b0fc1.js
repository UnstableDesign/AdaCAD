"use strict";(self.webpackChunkada_ca_ddocs=self.webpackChunkada_ca_ddocs||[]).push([[9e3],{1669:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=t(5893),o=t(3905);const a={},i="Loom",s={id:"howtodevelop/reference/loom/loom",title:"Loom",description:"A loom simply holds information about the threading, tieup and treadling that can be used to generate a particular drawdown. threading is an array the same size as there are numbers of warps. Each value in the array is a number, corresponding to the frame upon which this warp will be threaded through. The indexing for the threading begins at 0 and increases to support the total number of frames required. treadling is an array the same size as there are numbers of wefts. Each value in the array is a number, corresponding to the treadle to press. The indexing for the threading begins at 0 and increases to support the total treadles of frames required. The tieup is a 2D array of boolean values representing if the treadle in the column is tied to the row corresponding to the frame.",source:"@site/docs/howtodevelop/reference/loom/loom.md",sourceDirName:"howtodevelop/reference/loom",slug:"/howtodevelop/reference/loom/",permalink:"/docs/howtodevelop/reference/loom/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"devDocsSidebar",previous:{title:"wefts",permalink:"/docs/howtodevelop/reference/drawdown/wefts"},next:{title:"Operation",permalink:"/docs/howtodevelop/reference/operation/"}},d={},l=[];function c(e){const r={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.ah)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"loom",children:"Loom"}),"\n",(0,n.jsxs)(r.p,{children:["A loom simply holds information about the threading, tieup and treadling that can be used to generate a particular drawdown. ",(0,n.jsx)(r.code,{children:"threading"})," is an array the same size as there are numbers of warps. Each value in the array is a number, corresponding to the frame upon which this warp will be threaded through. The indexing for the threading begins at 0 and increases to support the total number of frames required. ",(0,n.jsx)(r.code,{children:"treadling"})," is an array the same size as there are numbers of wefts. Each value in the array is a number, corresponding to the treadle to press. The indexing for the threading begins at 0 and increases to support the total treadles of frames required. The ",(0,n.jsx)(r.code,{children:"tieup"})," is a 2D array of boolean values representing if the treadle in the column is tied to the row corresponding to the frame."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-jsx",metastring:'title="src/app/core/model/datatypes.js"',children:"export type Loom = {\n  threading: Array<number>,\n  tieup: Array<Array<boolean>>,\n  treadling: Array<Array<number>>\n}\n\n"})}),"\n",(0,n.jsxs)(r.p,{children:["There are a number of helper features to assist in easily getting, setting, and reading loom values in a file located at: ",(0,n.jsx)(r.a,{href:"https://github.com/UnstableDesign/AdaCAD/blob/main/src/app/core/model/loom.ts",children:"src/app/core/model/loom.js"})]}),"\n",(0,n.jsx)(r.h1,{id:"loomutil",children:"LoomUtil"}),"\n",(0,n.jsx)(r.p,{children:"The loom util stores specific functions that can translate a drawdown to a loom, or vice versa. Different types of looms have different functions and methods for recomputing."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-jsx",metastring:'title="src/app/core/model/datatypes.js"',children:"export type LoomUtil = {\n  type: 'jacquard' | 'frame' | 'direct',\n  displayname: string,\n  dx: string,\n  computeLoomFromDrawdown: (d:Drawdown, loom_settings: LoomSettings, origin: number) => Promise<Loom>,\n  computeDrawdownFromLoom: (l:Loom, origin: number) => Promise<Drawdown>,\n  recomputeLoomFromThreadingAndDrawdown:(l:Loom, loom_settings: LoomSettings, d: Drawdown, origin: number) => Promise<Loom>,\n  updateThreading: (l: Loom, ndx: InterlacementVal) => Loom,\n  updateTreadling: (l: Loom, ndx: InterlacementVal) => Loom,\n  updateTieup: (l: Loom, ndx: InterlacementVal)=> Loom,\n  insertIntoThreading: (l: Loom, j: number, val: number) => Loom,\n  insertIntoTreadling: (l: Loom, i: number, val: Array<number>) => Loom,\n  deleteFromThreading: (l: Loom, j: number) => Loom,\n  deleteFromTreadling: (l: Loom, i: number) => Loom,\n  pasteThreading: (l: Loom, drawdown: Drawdown, ndx: InterlacementVal, width:number, height: number) => Loom,\n  pasteTreadling: (l: Loom, drawdown: Drawdown, ndx: InterlacementVal, width:number, height: number) => Loom,\n  pasteTieup: (l: Loom, drawdown: Drawdown, ndx: InterlacementVal, width:number, height: number)=> Loom\n}\n\n\n"})}),"\n",(0,n.jsx)(r.h1,{id:"loomsettings",children:"LoomSettings"}),"\n",(0,n.jsxs)(r.p,{children:["This type stores the particular user-defined settings associated with any given loom. This includes the type of loom that this set of settings is associated with. The ",(0,n.jsx)(r.code,{children:"epi"})," or density of the loom. The ",(0,n.jsx)(r.code,{children:"units"})," by which densite is computed. It also holds the number of  ",(0,n.jsx)(r.code,{children:"frames"})," and  ",(0,n.jsx)(r.code,{children:"treadles"})," that the user describes their loom having."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-jsx",metastring:'title="src/app/core/model/datatypes.js"',children:"\n export type LoomSettings = {\n  type: string,\n  epi: number,\n  units: 'cm' | 'in',\n  frames: number,\n  treadles: number,\n}\n"})})]})}function m(e={}){const{wrapper:r}={...(0,o.ah)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},3905:(e,r,t)=>{t.d(r,{ah:()=>l});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=n.createContext({}),l=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),h=l(t),p=o,u=h["".concat(d,".").concat(p)]||h[p]||c[p]||a;return t?n.createElement(u,i(i({ref:r},m),{},{components:t})):n.createElement(u,i({ref:r},m))}));m.displayName="MDXCreateElement"}}]);